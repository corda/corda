pluginManagement {
    ext.artifactory_contextUrl = 'https://software.r3.com/artifactory'
    ext.publicArtifactURL = 'https://download.corda.net/maven'

    repositories {
        // Use system environment to activate caching with Artifactory,
        // because it is actually easier to pass that during parallel build.
        // NOTE: it has to be a name of a virtual repository with all
        // required remote or local repositories!
        if (System.getenv("CORDA_USE_CACHE")) {
            maven {
                name "R3 Maven remote repositories"
                url "${artifactory_contextUrl}/${System.getenv("CORDA_USE_CACHE")}"
                authentication {
                    basic(BasicAuthentication)
                }
                credentials {
                    username = System.getenv('CORDA_ARTIFACTORY_USERNAME')
                    password = System.getenv('CORDA_ARTIFACTORY_PASSWORD')
                }
            }
        } else {
            mavenLocal()
            gradlePluginPortal()
            maven { url "${publicArtifactURL}/corda-dependencies" }
        }
    }
}
// The project is named 'corda-project' and not 'corda' because if this is named the same as the
// output JAR from the capsule then the buildCordaJAR task goes into an infinite loop.
rootProject.name = 'corda-project'
include 'opentelemetry'
include 'opentelemetry:opentelemetry-driver'
include 'confidential-identities'
include 'finance:contracts'
include 'finance:workflows'
include 'core'
include 'core-tests'
include 'docs'
include 'node-api'
include 'node-api-tests'
include 'node'
include 'node:capsule'
include 'client:jackson'
include 'client:jfx'
include 'client:mock'
include 'client:rpc'
include 'docker'
include 'testing:testserver'
include 'testing:testserver:testcapsule:'
include 'experimental'
include 'experimental:avalanche'
include 'experimental:blobwriter'
include 'experimental:quasar-hook'
include 'experimental:corda-utils'
include 'experimental:nodeinfo'
include 'experimental:netparams'
include 'test-common'
include 'test-cli'
include 'test-utils'
include 'test-db'
include 'smoke-test-utils'
include 'node-driver'
include 'core-test-utils'
// Avoid making 'testing' a project, and allow build.gradle files to refer to these by their simple names:
['test-common', 'core-test-utils', 'test-utils', 'test-cli', 'test-db', 'smoke-test-utils', 'node-driver'].each {
    project(":$it").projectDir = new File("$settingsDir/testing/$it")
}
include 'tools:explorer'
include 'tools:explorer:capsule'
include 'tools:demobench'
include 'tools:loadtest'
include 'tools:graphs'
include 'tools:bootstrapper'
include 'tools:blobinspector'
include 'tools:network-builder'
include 'tools:cliutils'
include 'tools:worldmap'
include 'tools:checkpoint-agent'
include 'samples:attachment-demo:contracts'
include 'samples:attachment-demo:workflows'
include 'samples:trader-demo:workflows-trader'
// include 'samples:irs-demo'
// include 'samples:irs-demo:cordapp:contracts-irs'
// include 'samples:irs-demo:cordapp:workflows-irs'
// include 'samples:irs-demo:web'
include 'samples:simm-valuation-demo'
include 'samples:simm-valuation-demo:flows'
include 'samples:simm-valuation-demo:contracts-states'
include 'samples:notary-demo:contracts'
include 'samples:notary-demo:workflows'
include 'samples:bank-of-corda-demo'
include 'samples:cordapp-configuration:workflows'
include 'samples:network-verifier:contracts'
include 'samples:network-verifier:workflows'
include 'serialization'
include 'serialization-tests'
include 'testing:cordapps:dbfailure:dbfcontracts'
include 'testing:cordapps:dbfailure:dbfworkflows'
include 'testing:cordapps:missingmigration'
include 'testing:cordapps:sleeping'
include 'testing:cordapps:cashobservers'

// Common libraries - start
include 'common-validation'
project(":common-validation").projectDir = new File("$settingsDir/common/validation")

include 'common-configuration-parsing'
project(":common-configuration-parsing").projectDir = new File("$settingsDir/common/configuration-parsing")


include 'common-logging'
project(":common-logging").projectDir = new File("$settingsDir/common/logging")
// Common libraries - end


include 'detekt-plugins'
include 'tools:error-tool'

buildCache {
    local { enabled = false }
    remote(HttpBuildCache) {
        url = "${gradleEnterpriseUrl}/cache/"
        credentials {
            username = settings.ext.find('BUILD_CACHE_CREDENTIALS_USR') ?: System.getenv('BUILD_CACHE_CREDENTIALS_USR')
            password = settings.ext.find('BUILD_CACHE_CREDENTIALS_PSW') ?: System.getenv('BUILD_CACHE_CREDENTIALS_PSW')
        }
        if (System.getenv().containsKey("JENKINS_URL")) {
            push = true
            enabled = true
        } else {
            push = false
            enabled = false
        }
    }
}
