# Auto-generated by Gradle cementApi task
# DO NOT EDIT THIS FILE MANUALLY
net.corda.client.rpc.ConnectionFailureException:
  annotations: []
  type: public class
  extends: net.corda.core.CordaRuntimeException
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.CordaRPCClient:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    start(String, String):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCConnection
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
    start(String, String, net.corda.client.rpc.GracefulReconnect):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCConnection
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        gracefulReconnect:
          annotation:
            - Nullable
          type: net.corda.client.rpc.GracefulReconnect
    start(String, String, net.corda.core.context.Trace, net.corda.core.context.Actor):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCConnection
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        externalTrace:
          annotation:
            - Nullable
          type: net.corda.core.context.Trace
        impersonatedActor:
          annotation:
            - Nullable
          type: net.corda.core.context.Actor
    start(String, String, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.client.rpc.GracefulReconnect):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCConnection
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        externalTrace:
          annotation:
            - Nullable
          type: net.corda.core.context.Trace
        impersonatedActor:
          annotation:
            - Nullable
          type: net.corda.core.context.Actor
        gracefulReconnect:
          annotation:
            - Nullable
          type: net.corda.client.rpc.GracefulReconnect
    start(String, String, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.identity.CordaX500Name):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCConnection
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        externalTrace:
          annotation:
            - Nullable
          type: net.corda.core.context.Trace
        impersonatedActor:
          annotation:
            - Nullable
          type: net.corda.core.context.Actor
        targetLegalIdentity:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
    ? start(String, String, net.corda.core.context.Trace, net.corda.core.context.Actor,
      net.corda.core.identity.CordaX500Name, net.corda.client.rpc.GracefulReconnect)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCConnection
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        externalTrace:
          annotation:
            - Nullable
          type: net.corda.core.context.Trace
        impersonatedActor:
          annotation:
            - Nullable
          type: net.corda.core.context.Actor
        targetLegalIdentity:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        gracefulReconnect:
          annotation:
            - Nullable
          type: net.corda.client.rpc.GracefulReconnect
    start(String, String, net.corda.core.identity.CordaX500Name):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCConnection
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        targetLegalIdentity:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
    start(String, String, net.corda.core.identity.CordaX500Name, net.corda.client.rpc.GracefulReconnect):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCConnection
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        targetLegalIdentity:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
        gracefulReconnect:
          annotation:
            - Nullable
          type: net.corda.client.rpc.GracefulReconnect
    use(String, String, kotlin.jvm.functions.Function1<? super net.corda.client.rpc.CordaRPCConnection, ? extends A>):
      annotations: []
      default: false
      type: public final
      returnType: A
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        block:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.client.rpc.CordaRPCConnection,\
            \ ? extends A>"
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.CordaRPCClient$Companion
net.corda.client.rpc.CordaRPCClient$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.CordaRPCClientConfiguration:
  annotations: []
  type: public class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.time.Duration
    copy():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
    copy(java.time.Duration):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
    copy(java.time.Duration, int):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        minimumServerProtocolVersion:
          annotation: []
          type: int
    copy(java.time.Duration, int, boolean):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        minimumServerProtocolVersion:
          annotation: []
          type: int
        trackRpcCallSites:
          annotation: []
          type: boolean
    copy(java.time.Duration, int, boolean, java.time.Duration):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        minimumServerProtocolVersion:
          annotation: []
          type: int
        trackRpcCallSites:
          annotation: []
          type: boolean
        reapInterval:
          annotation:
            - NotNull
          type: java.time.Duration
    copy(java.time.Duration, int, boolean, java.time.Duration, int):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        minimumServerProtocolVersion:
          annotation: []
          type: int
        trackRpcCallSites:
          annotation: []
          type: boolean
        reapInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        observationExecutorPoolSize:
          annotation: []
          type: int
    copy(java.time.Duration, int, boolean, java.time.Duration, int, int):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        minimumServerProtocolVersion:
          annotation: []
          type: int
        trackRpcCallSites:
          annotation: []
          type: boolean
        reapInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        observationExecutorPoolSize:
          annotation: []
          type: int
        cacheConcurrencyLevel:
          annotation: []
          type: int
    copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        minimumServerProtocolVersion:
          annotation: []
          type: int
        trackRpcCallSites:
          annotation: []
          type: boolean
        reapInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        observationExecutorPoolSize:
          annotation: []
          type: int
        cacheConcurrencyLevel:
          annotation: []
          type: int
        connectionRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
    copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        minimumServerProtocolVersion:
          annotation: []
          type: int
        trackRpcCallSites:
          annotation: []
          type: boolean
        reapInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        observationExecutorPoolSize:
          annotation: []
          type: int
        cacheConcurrencyLevel:
          annotation: []
          type: int
        connectionRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        connectionRetryIntervalMultiplier:
          annotation: []
          type: double
    copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        minimumServerProtocolVersion:
          annotation: []
          type: int
        trackRpcCallSites:
          annotation: []
          type: boolean
        reapInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        observationExecutorPoolSize:
          annotation: []
          type: int
        cacheConcurrencyLevel:
          annotation: []
          type: int
        connectionRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        connectionRetryIntervalMultiplier:
          annotation: []
          type: double
        maxReconnectAttempts:
          annotation: []
          type: int
    copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        minimumServerProtocolVersion:
          annotation: []
          type: int
        trackRpcCallSites:
          annotation: []
          type: boolean
        reapInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        observationExecutorPoolSize:
          annotation: []
          type: int
        cacheConcurrencyLevel:
          annotation: []
          type: int
        connectionRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        connectionRetryIntervalMultiplier:
          annotation: []
          type: double
        maxReconnectAttempts:
          annotation: []
          type: int
        maxFileSize:
          annotation: []
          type: int
    copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int, java.time.Duration):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        minimumServerProtocolVersion:
          annotation: []
          type: int
        trackRpcCallSites:
          annotation: []
          type: boolean
        reapInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        observationExecutorPoolSize:
          annotation: []
          type: int
        cacheConcurrencyLevel:
          annotation: []
          type: int
        connectionRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        connectionRetryIntervalMultiplier:
          annotation: []
          type: double
        maxReconnectAttempts:
          annotation: []
          type: int
        maxFileSize:
          annotation: []
          type: int
        deduplicationCacheExpiry:
          annotation:
            - NotNull
          type: java.time.Duration
    ? copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration,
      double, int, int, java.time.Duration, boolean, boolean, boolean, boolean)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.client.rpc.CordaRPCClientConfiguration
      params:
        connectionMaxRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        minimumServerProtocolVersion:
          annotation: []
          type: int
        trackRpcCallSites:
          annotation: []
          type: boolean
        reapInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        observationExecutorPoolSize:
          annotation: []
          type: int
        cacheConcurrencyLevel:
          annotation: []
          type: int
        connectionRetryInterval:
          annotation:
            - NotNull
          type: java.time.Duration
        connectionRetryIntervalMultiplier:
          annotation: []
          type: double
        maxReconnectAttempts:
          annotation: []
          type: int
        maxFileSize:
          annotation: []
          type: int
        deduplicationCacheExpiry:
          annotation:
            - NotNull
          type: java.time.Duration
        openTelemetryEnabled:
          annotation: []
          type: boolean
        simpleLogTelemetryEnabled:
          annotation: []
          type: boolean
        spanStartEndEventsEnabled:
          annotation: []
          type: boolean
        copyBaggageToTags:
          annotation: []
          type: boolean
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getCacheConcurrencyLevel():
      annotations: []
      default: false
      type: public
      returnType: int
    getConnectionMaxRetryInterval():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Duration
    getConnectionRetryInterval():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Duration
    getConnectionRetryIntervalMultiplier():
      annotations: []
      default: false
      type: public
      returnType: double
    getCopyBaggageToTags():
      annotations: []
      default: false
      type: public
      returnType: boolean
    getDeduplicationCacheExpiry():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Duration
    getMaxFileSize():
      annotations: []
      default: false
      type: public
      returnType: int
    getMaxReconnectAttempts():
      annotations: []
      default: false
      type: public
      returnType: int
    getMinimumServerProtocolVersion():
      annotations: []
      default: false
      type: public
      returnType: int
    getObservationExecutorPoolSize():
      annotations: []
      default: false
      type: public
      returnType: int
    getOpenTelemetryEnabled():
      annotations: []
      default: false
      type: public
      returnType: boolean
    getReapInterval():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.time.Duration
    getSimpleLogTelemetryEnabled():
      annotations: []
      default: false
      type: public
      returnType: boolean
    getSpanStartEndEventsEnabled():
      annotations: []
      default: false
      type: public
      returnType: boolean
    getTrackRpcCallSites():
      annotations: []
      default: false
      type: public
      returnType: boolean
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.CordaRPCClientConfiguration$Companion
    DEFAULT:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.CordaRPCClientConfiguration
net.corda.client.rpc.CordaRPCClientConfiguration$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.CordaRPCConnection:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.client.rpc.RPCConnection
  interface: false
  methods:
    close():
      annotations: []
      default: true
      type: public
      returnType: void
    forceClose():
      annotations: []
      default: false
      type: public
      returnType: void
    getProxy():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.messaging.CordaRPCOps
    getServerProtocolVersion():
      annotations: []
      default: false
      type: public
      returnType: int
    getTelemetryHandle(Class<T>):
      annotations:
        - Nullable
      default: false
      type: public
      returnType: T
      params:
        telemetryClass:
          annotation:
            - NotNull
          type: Class<T>
    notifyServerAndClose():
      annotations: []
      default: false
      type: public
      returnType: void
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.client.rpc.CordaRPCConnection$Companion
net.corda.client.rpc.CordaRPCConnection$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.GracefulReconnect:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getMaxAttempts():
      annotations: []
      default: false
      type: public final
      returnType: int
    getOnDisconnect():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: kotlin.jvm.functions.Function0<kotlin.Unit>
    getOnReconnect():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: kotlin.jvm.functions.Function0<kotlin.Unit>
net.corda.client.rpc.MaxRpcRetryException:
  annotations: []
  type: public final class
  extends: net.corda.core.CordaRuntimeException
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.PermissionException:
  annotations: []
  type: public final class
  extends: net.corda.core.CordaRuntimeException
  implements:
    - net.corda.core.ClientRelevantError
    - net.corda.nodeapi.exceptions.RpcSerializableError
  interface: false
  methods:
    getMsg():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
net.corda.client.rpc.RPCConnection:
  annotations: []
  type: public interface
  extends:
    - java.io.Closeable
  interface: true
  methods:
    close():
      annotations: []
      default: true
      type: public
      returnType: void
    forceClose():
      annotations: []
      default: false
      type: public abstract
      returnType: void
    getProxy():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: I
    getServerProtocolVersion():
      annotations: []
      default: false
      type: public abstract
      returnType: int
    getTelemetryHandle(Class<T>):
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: T
      params:
        telemetryClass:
          annotation:
            - NotNull
          type: Class<T>
    notifyServerAndClose():
      annotations: []
      default: false
      type: public abstract
      returnType: void
net.corda.client.rpc.RPCException:
  annotations: []
  type: public class
  extends: net.corda.core.CordaRuntimeException
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.RPCSinceVersion:
  annotations: []
  type: public @interface
  interface: false
  methods:
    version():
      annotations: []
      default: false
      type: public abstract
      returnType: int
net.corda.client.rpc.UnrecoverableRPCException:
  annotations: []
  type: public class
  extends: net.corda.core.CordaRuntimeException
  implements: []
  interface: false
  methods: {}
net.corda.client.rpc.UtilsKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    notUsed(rx.Observable<T>):
      annotations: []
      default: false
      type: public static final
      returnType: void
      params:
        $this$notUsed:
          annotation:
            - NotNull
          type: rx.Observable<T>
net.corda.client.rpc.ext.MultiRPCClient:
  annotations: []
  type: public final class
  extends: null
  implements:
    - java.lang.AutoCloseable
  interface: false
  methods:
    addConnectionListener(net.corda.client.rpc.ext.RPCConnectionListener<I>):
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        listener:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener<I>
    close():
      annotations: []
      default: false
      type: public
      returnType: void
    removeConnectionListener(net.corda.client.rpc.ext.RPCConnectionListener<I>):
      annotations: []
      default: false
      type: public final
      returnType: boolean
      params:
        listener:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener<I>
    start():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.concurrent.CompletableFuture<net.corda.client.rpc.RPCConnection<I>>
    stop():
      annotations: []
      default: false
      type: public final
      returnType: void
net.corda.client.rpc.ext.RPCConnectionListener:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods:
    onConnect(net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext<I>):
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        context:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext<I>
    onDisconnect(net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext<I>):
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        context:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext<I>
    onPermanentFailure(net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext<I>):
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        context:
          annotation:
            - NotNull
          type: net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext<I>
net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext:
  annotations: []
  type: public static interface
  extends: []
  interface: true
  methods:
    getConnectionOpt():
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.client.rpc.RPCConnection<I>
    getThrowableOpt():
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: Throwable
    getUserName():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: String
net.corda.client.rpc.reconnect.CouldNotStartFlowException:
  annotations: []
  type: public final class
  extends: net.corda.core.CordaRuntimeException
  implements: []
  interface: false
  methods: {}