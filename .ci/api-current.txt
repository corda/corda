@CordaSerializable
public interface net.corda.core.ClientRelevantError
##
@CordaSerializable
public class net.corda.core.CordaException extends java.lang.Exception implements net.corda.core.CordaThrowable
  public <init>()
  public <init>(String)
  public <init>(String, String, Throwable)
  public <init>(String, String, Throwable, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(String, Throwable)
  public void addSuppressed(Throwable[])
  public boolean equals(Object)
  @Nullable
  public Throwable getCause()
  @Nullable
  public String getMessage()
  @Nullable
  public String getOriginalExceptionClassName()
  @Nullable
  public String getOriginalMessage()
  public int hashCode()
  public void setCause(Throwable)
  public void setMessage(String)
  public void setOriginalExceptionClassName(String)
##
public final class net.corda.core.CordaOID extends java.lang.Object
  @NotNull
  public static final String ALIAS_PRIVATE_KEY = "1.3.6.1.4.1.50530.1.2"
  @NotNull
  public static final String CORDA_PLATFORM = "1.3.6.1.4.1.50530.1"
  @NotNull
  public static final net.corda.core.CordaOID INSTANCE
  @NotNull
  public static final String R3_ROOT = "1.3.6.1.4.1.50530"
  @NotNull
  public static final String X509_EXTENSION_CORDA_ROLE = "1.3.6.1.4.1.50530.1.1"
##
@CordaSerializable
public class net.corda.core.CordaRuntimeException extends java.lang.RuntimeException implements net.corda.core.CordaThrowable
  public <init>(String)
  public <init>(String, String, Throwable)
  public <init>(String, Throwable)
  public void addSuppressed(Throwable[])
  public boolean equals(Object)
  @Nullable
  public Throwable getCause()
  @Nullable
  public String getMessage()
  @Nullable
  public String getOriginalExceptionClassName()
  @Nullable
  public String getOriginalMessage()
  public int hashCode()
  public void setCause(Throwable)
  public void setMessage(String)
  public void setOriginalExceptionClassName(String)
##
@CordaSerializable
public interface net.corda.core.CordaThrowable
  public abstract void addSuppressed(Throwable[])
  @Nullable
  public abstract String getOriginalExceptionClassName()
  @Nullable
  public abstract String getOriginalMessage()
  public abstract void setCause(Throwable)
  public abstract void setMessage(String)
  public abstract void setOriginalExceptionClassName(String)
##
public @interface net.corda.core.DoNotImplement
##
public final class net.corda.core.Utils extends java.lang.Object
  @NotNull
  public static final net.corda.core.messaging.DataFeed doOnError(net.corda.core.messaging.DataFeed, kotlin.jvm.functions.Function1)
  @NotNull
  public static final net.corda.core.messaging.DataFeed mapErrors(net.corda.core.messaging.DataFeed, kotlin.jvm.functions.Function1)
  @NotNull
  public static final rx.Observable mapErrors(rx.Observable, kotlin.jvm.functions.Function1)
  @NotNull
  public static final net.corda.core.concurrent.CordaFuture toFuture(rx.Observable)
  @NotNull
  public static final rx.Observable toObservable(net.corda.core.concurrent.CordaFuture)
##
public final class net.corda.core.concurrent.ConcurrencyUtils extends java.lang.Object
  @NotNull
  public static final net.corda.core.concurrent.CordaFuture firstOf(net.corda.core.concurrent.CordaFuture<? extends V>[], kotlin.jvm.functions.Function1)
  public static final W match(java.util.concurrent.Future, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
##
public interface net.corda.core.concurrent.CordaFuture extends java.util.concurrent.Future
  public abstract void then(kotlin.jvm.functions.Function1)
  @NotNull
  public abstract java.util.concurrent.CompletableFuture toCompletableFuture()
##
@CordaSerializable
public final class net.corda.core.context.Actor extends java.lang.Object
  public <init>(net.corda.core.context.Actor$Id, net.corda.core.context.AuthServiceId, net.corda.core.identity.CordaX500Name)
  @NotNull
  public final net.corda.core.context.Actor$Id component1()
  @NotNull
  public final net.corda.core.context.AuthServiceId component2()
  @NotNull
  public final net.corda.core.identity.CordaX500Name component3()
  @NotNull
  public final net.corda.core.context.Actor copy(net.corda.core.context.Actor$Id, net.corda.core.context.AuthServiceId, net.corda.core.identity.CordaX500Name)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.context.Actor$Id getId()
  @NotNull
  public final net.corda.core.identity.CordaX500Name getOwningLegalIdentity()
  @NotNull
  public final net.corda.core.context.AuthServiceId getServiceId()
  public int hashCode()
  @NotNull
  public static final net.corda.core.context.Actor service(String, net.corda.core.identity.CordaX500Name)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.context.Actor$Companion Companion
##
public static final class net.corda.core.context.Actor$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.context.Actor service(String, net.corda.core.identity.CordaX500Name)
##
@CordaSerializable
public static final class net.corda.core.context.Actor$Id extends java.lang.Object
  public <init>(String)
  @NotNull
  public final String component1()
  @NotNull
  public final net.corda.core.context.Actor$Id copy(String)
  public boolean equals(Object)
  @NotNull
  public final String getValue()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.context.AuthServiceId extends java.lang.Object
  public <init>(String)
  @NotNull
  public final String component1()
  @NotNull
  public final net.corda.core.context.AuthServiceId copy(String)
  public boolean equals(Object)
  @NotNull
  public final String getValue()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.context.InvocationContext extends java.lang.Object
  public <init>(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor)
  public <init>(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, String)
  public <init>(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, String, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, String, net.corda.core.internal.telemetry.SerializedTelemetry)
  public <init>(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, String, net.corda.core.internal.telemetry.SerializedTelemetry, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.context.InvocationOrigin component1()
  @NotNull
  public final net.corda.core.context.Trace component2()
  @Nullable
  public final net.corda.core.context.Actor component3()
  @Nullable
  public final net.corda.core.context.Trace component4()
  @Nullable
  public final net.corda.core.context.Actor component5()
  @Nullable
  public final java.util.List component6()
  @Nullable
  public final String component7()
  @Nullable
  public final net.corda.core.internal.telemetry.SerializedTelemetry component8()
  @NotNull
  public final net.corda.core.context.InvocationContext copy(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @NotNull
  public final net.corda.core.context.InvocationContext copy(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, String)
  @NotNull
  public final net.corda.core.context.InvocationContext copy(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, String, net.corda.core.internal.telemetry.SerializedTelemetry)
  public boolean equals(Object)
  @Nullable
  public final net.corda.core.context.Actor getActor()
  @Nullable
  public final java.util.List getArguments()
  @Nullable
  public final String getClientId()
  @Nullable
  public final net.corda.core.context.Trace getExternalTrace()
  @Nullable
  public final net.corda.core.context.Actor getImpersonatedActor()
  @NotNull
  public final net.corda.core.context.InvocationOrigin getOrigin()
  @Nullable
  public final net.corda.core.internal.telemetry.SerializedTelemetry getSerializedTelemetry()
  @NotNull
  public final net.corda.core.context.Trace getTrace()
  public int hashCode()
  @NotNull
  public static final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin)
  @NotNull
  public static final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace)
  @NotNull
  public static final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @NotNull
  public static final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace)
  @NotNull
  public static final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @NotNull
  public static final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List)
  @NotNull
  public static final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, String)
  @NotNull
  public static final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, String, net.corda.core.internal.telemetry.SerializedTelemetry)
  @NotNull
  public static final net.corda.core.context.InvocationContext peer(net.corda.core.identity.CordaX500Name, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @NotNull
  public final java.security.Principal principal()
  @NotNull
  public static final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor)
  @NotNull
  public static final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace)
  @NotNull
  public static final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Trace)
  @NotNull
  public static final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @NotNull
  public static final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List)
  @NotNull
  public static final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, net.corda.core.internal.telemetry.SerializedTelemetry)
  @NotNull
  public static final net.corda.core.context.InvocationContext scheduled(net.corda.core.contracts.ScheduledStateRef, net.corda.core.context.Trace, net.corda.core.context.Trace)
  @NotNull
  public static final net.corda.core.context.InvocationContext service(String, net.corda.core.identity.CordaX500Name, net.corda.core.context.Trace, net.corda.core.context.Trace)
  @NotNull
  public static final net.corda.core.context.InvocationContext shell(net.corda.core.context.Trace, net.corda.core.context.Trace)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.context.InvocationContext$Companion Companion
##
public static final class net.corda.core.context.InvocationContext$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin)
  @NotNull
  public final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace)
  @NotNull
  public final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @NotNull
  public final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace)
  @NotNull
  public final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @NotNull
  public final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List)
  @NotNull
  public final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, String)
  @NotNull
  public final net.corda.core.context.InvocationContext newInstance(net.corda.core.context.InvocationOrigin, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, String, net.corda.core.internal.telemetry.SerializedTelemetry)
  @NotNull
  public final net.corda.core.context.InvocationContext peer(net.corda.core.identity.CordaX500Name, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @NotNull
  public final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor)
  @NotNull
  public final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace)
  @NotNull
  public final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Trace)
  @NotNull
  public final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @NotNull
  public final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List)
  @NotNull
  public final net.corda.core.context.InvocationContext rpc(net.corda.core.context.Actor, net.corda.core.context.Trace, net.corda.core.context.Trace, net.corda.core.context.Actor, java.util.List, net.corda.core.internal.telemetry.SerializedTelemetry)
  @NotNull
  public final net.corda.core.context.InvocationContext scheduled(net.corda.core.contracts.ScheduledStateRef, net.corda.core.context.Trace, net.corda.core.context.Trace)
  @NotNull
  public final net.corda.core.context.InvocationContext service(String, net.corda.core.identity.CordaX500Name, net.corda.core.context.Trace, net.corda.core.context.Trace)
  @NotNull
  public final net.corda.core.context.InvocationContext shell(net.corda.core.context.Trace, net.corda.core.context.Trace)
##
@CordaSerializable
public abstract class net.corda.core.context.InvocationOrigin extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public abstract java.security.Principal principal()
##
@CordaSerializable
public static final class net.corda.core.context.InvocationOrigin$Peer extends net.corda.core.context.InvocationOrigin
  public <init>(net.corda.core.identity.CordaX500Name)
  @NotNull
  public final net.corda.core.identity.CordaX500Name component1()
  @NotNull
  public final net.corda.core.context.InvocationOrigin$Peer copy(net.corda.core.identity.CordaX500Name)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.identity.CordaX500Name getParty()
  public int hashCode()
  @NotNull
  public java.security.Principal principal()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.context.InvocationOrigin$RPC extends net.corda.core.context.InvocationOrigin
  public <init>(net.corda.core.context.Actor)
  @NotNull
  public final net.corda.core.context.Actor component1()
  @NotNull
  public final net.corda.core.context.InvocationOrigin$RPC copy(net.corda.core.context.Actor)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.context.Actor getActor()
  public int hashCode()
  @NotNull
  public java.security.Principal principal()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.context.InvocationOrigin$Scheduled extends net.corda.core.context.InvocationOrigin
  public <init>(net.corda.core.contracts.ScheduledStateRef)
  @NotNull
  public final net.corda.core.contracts.ScheduledStateRef component1()
  @NotNull
  public final net.corda.core.context.InvocationOrigin$Scheduled copy(net.corda.core.contracts.ScheduledStateRef)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.contracts.ScheduledStateRef getScheduledState()
  public int hashCode()
  @NotNull
  public java.security.Principal principal()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.context.InvocationOrigin$Service extends net.corda.core.context.InvocationOrigin
  public <init>(String, net.corda.core.identity.CordaX500Name)
  @NotNull
  public final String component1()
  @NotNull
  public final net.corda.core.identity.CordaX500Name component2()
  @NotNull
  public final net.corda.core.context.InvocationOrigin$Service copy(String, net.corda.core.identity.CordaX500Name)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.identity.CordaX500Name getOwningLegalIdentity()
  @NotNull
  public final String getServiceClassName()
  public int hashCode()
  @NotNull
  public java.security.Principal principal()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.context.InvocationOrigin$Shell extends net.corda.core.context.InvocationOrigin
  @NotNull
  public java.security.Principal principal()
  @NotNull
  public static final net.corda.core.context.InvocationOrigin$Shell INSTANCE
##
@CordaSerializable
public final class net.corda.core.context.Trace extends java.lang.Object
  public <init>(net.corda.core.context.Trace$InvocationId, net.corda.core.context.Trace$SessionId)
  @NotNull
  public final net.corda.core.context.Trace$InvocationId component1()
  @NotNull
  public final net.corda.core.context.Trace$SessionId component2()
  @NotNull
  public final net.corda.core.context.Trace copy(net.corda.core.context.Trace$InvocationId, net.corda.core.context.Trace$SessionId)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.context.Trace$InvocationId getInvocationId()
  @NotNull
  public final net.corda.core.context.Trace$SessionId getSessionId()
  public int hashCode()
  @NotNull
  public static final net.corda.core.context.Trace newInstance(net.corda.core.context.Trace$InvocationId, net.corda.core.context.Trace$SessionId)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.context.Trace$Companion Companion
##
public static final class net.corda.core.context.Trace$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.context.Trace newInstance(net.corda.core.context.Trace$InvocationId, net.corda.core.context.Trace$SessionId)
##
@CordaSerializable
public static final class net.corda.core.context.Trace$InvocationId extends net.corda.core.utilities.Id
  public <init>(String, java.time.Instant)
  @NotNull
  public static final net.corda.core.context.Trace$InvocationId newInstance(String, java.time.Instant)
  @NotNull
  public static final net.corda.core.context.Trace$InvocationId$Companion Companion
##
public static final class net.corda.core.context.Trace$InvocationId$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.context.Trace$InvocationId newInstance(String, java.time.Instant)
##
@CordaSerializable
public static final class net.corda.core.context.Trace$SessionId extends net.corda.core.utilities.Id
  public <init>(String, java.time.Instant)
  @NotNull
  public static final net.corda.core.context.Trace$SessionId newInstance(String, java.time.Instant)
  @NotNull
  public static final net.corda.core.context.Trace$SessionId$Companion Companion
##
public static final class net.corda.core.context.Trace$SessionId$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.context.Trace$SessionId newInstance(String, java.time.Instant)
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.contracts.AlwaysAcceptAttachmentConstraint extends java.lang.Object implements net.corda.core.contracts.AttachmentConstraint
  public boolean isSatisfiedBy(net.corda.core.contracts.Attachment)
  @NotNull
  public static final net.corda.core.contracts.AlwaysAcceptAttachmentConstraint INSTANCE
##
@CordaSerializable
public final class net.corda.core.contracts.Amount extends java.lang.Object implements java.lang.Comparable
  public <init>(long, T)
  public <init>(long, java.math.BigDecimal, T)
  public int compareTo(net.corda.core.contracts.Amount)
  public final long component1()
  @NotNull
  public final java.math.BigDecimal component2()
  @NotNull
  public final T component3()
  @NotNull
  public final net.corda.core.contracts.Amount copy(long, java.math.BigDecimal, T)
  public boolean equals(Object)
  @NotNull
  public static final net.corda.core.contracts.Amount fromDecimal(java.math.BigDecimal, T)
  @NotNull
  public static final net.corda.core.contracts.Amount fromDecimal(java.math.BigDecimal, T, java.math.RoundingMode)
  @NotNull
  public final java.math.BigDecimal getDisplayTokenSize()
  @NotNull
  public static final java.math.BigDecimal getDisplayTokenSize(Object)
  public final long getQuantity()
  @NotNull
  public final T getToken()
  public int hashCode()
  @NotNull
  public final net.corda.core.contracts.Amount minus(net.corda.core.contracts.Amount)
  @NotNull
  public static final net.corda.core.contracts.Amount parseCurrency(String)
  @NotNull
  public final net.corda.core.contracts.Amount plus(net.corda.core.contracts.Amount)
  @NotNull
  public final java.util.List splitEvenly(int)
  @Nullable
  public static final net.corda.core.contracts.Amount sumOrNull(Iterable)
  @NotNull
  public static final net.corda.core.contracts.Amount sumOrThrow(Iterable)
  @NotNull
  public static final net.corda.core.contracts.Amount sumOrZero(Iterable, T)
  @NotNull
  public final net.corda.core.contracts.Amount times(int)
  @NotNull
  public final net.corda.core.contracts.Amount times(long)
  @NotNull
  public final java.math.BigDecimal toDecimal()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.contracts.Amount zero(T)
  @NotNull
  public static final net.corda.core.contracts.Amount$Companion Companion
##
public static final class net.corda.core.contracts.Amount$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.contracts.Amount fromDecimal(java.math.BigDecimal, T)
  @NotNull
  public final net.corda.core.contracts.Amount fromDecimal(java.math.BigDecimal, T, java.math.RoundingMode)
  @NotNull
  public final java.math.BigDecimal getDisplayTokenSize(Object)
  @NotNull
  public final net.corda.core.contracts.Amount parseCurrency(String)
  @Nullable
  public final net.corda.core.contracts.Amount sumOrNull(Iterable)
  @NotNull
  public final net.corda.core.contracts.Amount sumOrThrow(Iterable)
  @NotNull
  public final net.corda.core.contracts.Amount sumOrZero(Iterable, T)
  @NotNull
  public final net.corda.core.contracts.Amount zero(T)
##
@CordaSerializable
public final class net.corda.core.contracts.AmountTransfer extends java.lang.Object
  public <init>(long, T, P, P)
  @NotNull
  public final java.util.List apply(java.util.List, Object)
  @NotNull
  public final net.corda.core.contracts.AmountTransfer copy(long, T, P, P)
  public boolean equals(Object)
  @NotNull
  public static final net.corda.core.contracts.AmountTransfer fromDecimal(java.math.BigDecimal, T, P, P)
  @NotNull
  public static final net.corda.core.contracts.AmountTransfer fromDecimal(java.math.BigDecimal, T, P, P, java.math.RoundingMode)
  @NotNull
  public final P getDestination()
  public final long getQuantityDelta()
  @NotNull
  public final P getSource()
  @NotNull
  public final T getToken()
  public int hashCode()
  @NotNull
  public final java.util.List novate(P)
  @NotNull
  public final net.corda.core.contracts.AmountTransfer plus(net.corda.core.contracts.AmountTransfer)
  @NotNull
  public final java.math.BigDecimal toDecimal()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.contracts.AmountTransfer zero(T, P, P)
  @NotNull
  public static final net.corda.core.contracts.AmountTransfer$Companion Companion
##
public static final class net.corda.core.contracts.AmountTransfer$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.contracts.AmountTransfer fromDecimal(java.math.BigDecimal, T, P, P)
  @NotNull
  public final net.corda.core.contracts.AmountTransfer fromDecimal(java.math.BigDecimal, T, P, P, java.math.RoundingMode)
  @NotNull
  public final net.corda.core.contracts.AmountTransfer zero(T, P, P)
##
@DoNotImplement
@CordaSerializable
public interface net.corda.core.contracts.Attachment extends net.corda.core.contracts.NamedByHash
  public void extractFile(String, java.io.OutputStream)
  @NotNull
  public abstract java.util.List getSignerKeys()
  @NotNull
  public abstract java.util.List getSigners()
  public abstract int getSize()
  @NotNull
  public abstract java.io.InputStream open()
  @NotNull
  public java.util.jar.JarInputStream openAsJAR()
##
@DoNotImplement
@CordaSerializable
public interface net.corda.core.contracts.AttachmentConstraint
  public abstract boolean isSatisfiedBy(net.corda.core.contracts.Attachment)
##
@CordaSerializable
public final class net.corda.core.contracts.AttachmentResolutionException extends net.corda.core.flows.FlowException
  public <init>(net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.crypto.SecureHash getHash()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.contracts.AutomaticHashConstraint extends java.lang.Object implements net.corda.core.contracts.AttachmentConstraint
  public boolean isSatisfiedBy(net.corda.core.contracts.Attachment)
  @NotNull
  public static final net.corda.core.contracts.AutomaticHashConstraint INSTANCE
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.contracts.AutomaticPlaceholderConstraint extends java.lang.Object implements net.corda.core.contracts.AttachmentConstraint
  public boolean isSatisfiedBy(net.corda.core.contracts.Attachment)
  @NotNull
  public static final net.corda.core.contracts.AutomaticPlaceholderConstraint INSTANCE
##
public @interface net.corda.core.contracts.BelongsToContract
  public abstract Class value()
##
@CordaSerializable
public final class net.corda.core.contracts.BrokenAttachmentException extends net.corda.core.flows.FlowException
  public <init>(net.corda.core.crypto.SecureHash, String, Throwable)
  @NotNull
  public final net.corda.core.crypto.SecureHash getAttachmentId()
##
@CordaSerializable
public final class net.corda.core.contracts.Command extends java.lang.Object
  public <init>(T, java.security.PublicKey)
  public <init>(T, java.util.List)
  @NotNull
  public final T component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final net.corda.core.contracts.Command copy(T, java.util.List)
  public boolean equals(Object)
  @NotNull
  public final java.util.List getSigners()
  @NotNull
  public final T getValue()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.contracts.CommandAndState extends java.lang.Object
  public <init>(net.corda.core.contracts.CommandData, net.corda.core.contracts.OwnableState)
  @NotNull
  public final net.corda.core.contracts.CommandData component1()
  @NotNull
  public final net.corda.core.contracts.OwnableState component2()
  @NotNull
  public final net.corda.core.contracts.CommandAndState copy(net.corda.core.contracts.CommandData, net.corda.core.contracts.OwnableState)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.contracts.CommandData getCommand()
  @NotNull
  public final net.corda.core.contracts.OwnableState getOwnableState()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public interface net.corda.core.contracts.CommandData
##
@CordaSerializable
public final class net.corda.core.contracts.CommandWithParties extends java.lang.Object
  public <init>(java.util.List, java.util.List, T)
  @NotNull
  public final java.util.List component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final T component3()
  @NotNull
  public final net.corda.core.contracts.CommandWithParties copy(java.util.List, java.util.List, T)
  public boolean equals(Object)
  @NotNull
  public final java.util.List getSigners()
  @NotNull
  public final java.util.List getSigningParties()
  @NotNull
  public final T getValue()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.contracts.ComponentGroupEnum extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.contracts.ComponentGroupEnum valueOf(String)
  public static net.corda.core.contracts.ComponentGroupEnum[] values()
##
@CordaSerializable
public interface net.corda.core.contracts.Contract
  public abstract void verify(net.corda.core.transactions.LedgerTransaction)
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.contracts.ContractAttachment extends java.lang.Object implements net.corda.core.contracts.Attachment
  public <init>(net.corda.core.contracts.Attachment, String)
  public <init>(net.corda.core.contracts.Attachment, String, java.util.Set)
  public <init>(net.corda.core.contracts.Attachment, String, java.util.Set, String)
  public <init>(net.corda.core.contracts.Attachment, String, java.util.Set, String, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.contracts.Attachment, String, java.util.Set, String, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public void extractFile(String, java.io.OutputStream)
  @NotNull
  public final java.util.Set getAdditionalContracts()
  @NotNull
  public final java.util.Set getAllContracts()
  @NotNull
  public final net.corda.core.contracts.Attachment getAttachment()
  @NotNull
  public final String getContract()
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public java.util.List getSignerKeys()
  @NotNull
  public java.util.List getSigners()
  public int getSize()
  @Nullable
  public final String getUploader()
  public final int getVersion()
  public final boolean isSigned()
  @NotNull
  public java.io.InputStream open()
  @NotNull
  public java.util.jar.JarInputStream openAsJAR()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.contracts.ContractAttachment$Companion Companion
##
public static final class net.corda.core.contracts.ContractAttachment$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public interface net.corda.core.contracts.ContractState
  @NotNull
  public abstract java.util.List getParticipants()
##
public final class net.corda.core.contracts.ContractsDSL extends java.lang.Object
  public static final net.corda.core.contracts.CommandWithParties requireSingleCommand(java.util.Collection)
  @NotNull
  public static final net.corda.core.contracts.CommandWithParties requireSingleCommand(java.util.Collection, Class)
  public static final R requireThat(kotlin.jvm.functions.Function1)
  @NotNull
  public static final java.util.List select(java.util.Collection, Class, java.security.PublicKey, net.corda.core.identity.AbstractParty)
  @NotNull
  public static final java.util.List select(java.util.Collection, Class, java.util.Collection, java.util.Collection)
  public static final java.util.List select(java.util.Collection, java.security.PublicKey, net.corda.core.identity.AbstractParty)
  public static final java.util.List select(java.util.Collection, java.util.Collection, java.util.Collection)
  public static final net.corda.core.contracts.MoveCommand verifyMoveCommand(java.util.List, java.util.List)
##
@CordaSerializable
public interface net.corda.core.contracts.FungibleAsset extends net.corda.core.contracts.FungibleState, net.corda.core.contracts.OwnableState
  @NotNull
  public abstract net.corda.core.contracts.Amount getAmount()
  @SerializableCalculatedProperty
  @NotNull
  public abstract java.util.Collection getExitKeys()
  @NotNull
  public abstract net.corda.core.contracts.FungibleAsset withNewOwnerAndAmount(net.corda.core.contracts.Amount, net.corda.core.identity.AbstractParty)
##
@CordaSerializable
public interface net.corda.core.contracts.FungibleState extends net.corda.core.contracts.ContractState
  @NotNull
  public abstract net.corda.core.contracts.Amount getAmount()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.contracts.HashAttachmentConstraint extends java.lang.Object implements net.corda.core.contracts.AttachmentConstraint
  public <init>(net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final net.corda.core.contracts.HashAttachmentConstraint copy(net.corda.core.crypto.SecureHash)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.SecureHash getAttachmentId()
  public int hashCode()
  public boolean isSatisfiedBy(net.corda.core.contracts.Attachment)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.contracts.HashAttachmentConstraint$Companion Companion
##
public static final class net.corda.core.contracts.HashAttachmentConstraint$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  public final boolean getDisableHashConstraints()
##
@CordaSerializable
public final class net.corda.core.contracts.InsufficientBalanceException extends net.corda.core.flows.FlowException
  public <init>(net.corda.core.contracts.Amount)
  @NotNull
  public final net.corda.core.contracts.Amount getAmountMissing()
##
@CordaSerializable
public final class net.corda.core.contracts.Issued extends java.lang.Object
  public <init>(net.corda.core.contracts.PartyAndReference, P)
  @NotNull
  public final net.corda.core.contracts.PartyAndReference component1()
  @NotNull
  public final P component2()
  @NotNull
  public final net.corda.core.contracts.Issued copy(net.corda.core.contracts.PartyAndReference, P)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.contracts.PartyAndReference getIssuer()
  @NotNull
  public final P getProduct()
  public int hashCode()
  @NotNull
  public String toString()
##
public @interface net.corda.core.contracts.LegalProseReference
  public abstract String uri()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.contracts.LinearPointer extends net.corda.core.contracts.StatePointer
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.contracts.UniqueIdentifier, Class)
  public <init>(net.corda.core.contracts.UniqueIdentifier, Class, boolean)
  public <init>(net.corda.core.contracts.UniqueIdentifier, Class, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.contracts.UniqueIdentifier getPointer()
  @NotNull
  public Class getType()
  public int hashCode()
  public boolean isResolved()
  @NotNull
  public net.corda.core.contracts.StateAndRef resolve(net.corda.core.node.ServiceHub)
  @NotNull
  public net.corda.core.contracts.StateAndRef resolve(net.corda.core.transactions.LedgerTransaction)
##
@CordaSerializable
public interface net.corda.core.contracts.LinearState extends net.corda.core.contracts.ContractState
  @NotNull
  public abstract net.corda.core.contracts.UniqueIdentifier getLinearId()
##
@CordaSerializable
public interface net.corda.core.contracts.MoveCommand extends net.corda.core.contracts.CommandData
  @Nullable
  public abstract Class getContract()
##
public interface net.corda.core.contracts.NamedByHash
  @NotNull
  public abstract net.corda.core.crypto.SecureHash getId()
##
public @interface net.corda.core.contracts.NoConstraintPropagation
##
@CordaSerializable
public interface net.corda.core.contracts.OwnableState extends net.corda.core.contracts.ContractState
  @NotNull
  public abstract net.corda.core.identity.AbstractParty getOwner()
  @NotNull
  public abstract net.corda.core.contracts.CommandAndState withNewOwner(net.corda.core.identity.AbstractParty)
##
@CordaSerializable
public final class net.corda.core.contracts.PartyAndReference extends java.lang.Object
  public <init>(net.corda.core.identity.AbstractParty, net.corda.core.utilities.OpaqueBytes)
  @NotNull
  public final net.corda.core.identity.AbstractParty component1()
  @NotNull
  public final net.corda.core.utilities.OpaqueBytes component2()
  @NotNull
  public final net.corda.core.contracts.PartyAndReference copy(net.corda.core.identity.AbstractParty, net.corda.core.utilities.OpaqueBytes)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.identity.AbstractParty getParty()
  @NotNull
  public final net.corda.core.utilities.OpaqueBytes getReference()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.contracts.PrivacySalt extends net.corda.core.utilities.OpaqueBytes
  public <init>()
  public <init>(int)
  public <init>(byte[])
  @NotNull
  public static final net.corda.core.contracts.PrivacySalt createFor(String)
  @NotNull
  public static final net.corda.core.contracts.PrivacySalt$Companion Companion
##
public static final class net.corda.core.contracts.PrivacySalt$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.contracts.PrivacySalt createFor(String)
##
public final class net.corda.core.contracts.ReferencedStateAndRef extends java.lang.Object
  public <init>(net.corda.core.contracts.StateAndRef)
  @NotNull
  public final net.corda.core.contracts.StateAndRef component1()
  @NotNull
  public final net.corda.core.contracts.ReferencedStateAndRef copy(net.corda.core.contracts.StateAndRef)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.contracts.StateAndRef getStateAndRef()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.contracts.Requirements extends java.lang.Object
  public final void using(String, boolean)
  @NotNull
  public static final net.corda.core.contracts.Requirements INSTANCE
##
@CordaSerializable
public interface net.corda.core.contracts.SchedulableState extends net.corda.core.contracts.ContractState
  @Nullable
  public abstract net.corda.core.contracts.ScheduledActivity nextScheduledActivity(net.corda.core.contracts.StateRef, net.corda.core.flows.FlowLogicRefFactory)
##
public interface net.corda.core.contracts.Scheduled
  @NotNull
  public abstract java.time.Instant getScheduledAt()
##
public final class net.corda.core.contracts.ScheduledActivity extends java.lang.Object implements net.corda.core.contracts.Scheduled
  public <init>(net.corda.core.flows.FlowLogicRef, java.time.Instant)
  @NotNull
  public final net.corda.core.flows.FlowLogicRef component1()
  @NotNull
  public final java.time.Instant component2()
  @NotNull
  public final net.corda.core.contracts.ScheduledActivity copy(net.corda.core.flows.FlowLogicRef, java.time.Instant)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.flows.FlowLogicRef getLogicRef()
  @NotNull
  public java.time.Instant getScheduledAt()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.contracts.ScheduledStateRef extends java.lang.Object implements net.corda.core.contracts.Scheduled
  public <init>(net.corda.core.contracts.StateRef, java.time.Instant)
  @NotNull
  public final net.corda.core.contracts.StateRef component1()
  @NotNull
  public final java.time.Instant component2()
  @NotNull
  public final net.corda.core.contracts.ScheduledStateRef copy(net.corda.core.contracts.StateRef, java.time.Instant)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.contracts.StateRef getRef()
  @NotNull
  public java.time.Instant getScheduledAt()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.contracts.SignatureAttachmentConstraint extends java.lang.Object implements net.corda.core.contracts.AttachmentConstraint
  public <init>(java.security.PublicKey)
  @NotNull
  public final java.security.PublicKey component1()
  @NotNull
  public final net.corda.core.contracts.SignatureAttachmentConstraint copy(java.security.PublicKey)
  public boolean equals(Object)
  @NotNull
  public final java.security.PublicKey getKey()
  public int hashCode()
  public boolean isSatisfiedBy(net.corda.core.contracts.Attachment)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.contracts.SignatureAttachmentConstraint$Companion Companion
##
public static final class net.corda.core.contracts.SignatureAttachmentConstraint$Companion extends java.lang.Object implements net.corda.core.internal.utilities.Internable
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.contracts.SignatureAttachmentConstraint create(java.security.PublicKey)
  @NotNull
  public net.corda.core.internal.utilities.PrivateInterner getInterner()
##
public final class net.corda.core.contracts.SourceAndAmount extends java.lang.Object
  public <init>(P, net.corda.core.contracts.Amount, Object)
  public <init>(Object, net.corda.core.contracts.Amount, Object, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final P component1()
  @NotNull
  public final net.corda.core.contracts.Amount component2()
  @Nullable
  public final Object component3()
  @NotNull
  public final net.corda.core.contracts.SourceAndAmount copy(P, net.corda.core.contracts.Amount, Object)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.contracts.Amount getAmount()
  @Nullable
  public final Object getRef()
  @NotNull
  public final P getSource()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.contracts.StateAndContract extends java.lang.Object
  public <init>(net.corda.core.contracts.ContractState, String)
  @NotNull
  public final net.corda.core.contracts.ContractState component1()
  @NotNull
  public final String component2()
  @NotNull
  public final net.corda.core.contracts.StateAndContract copy(net.corda.core.contracts.ContractState, String)
  public boolean equals(Object)
  @NotNull
  public final String getContract()
  @NotNull
  public final net.corda.core.contracts.ContractState getState()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.contracts.StateAndRef extends java.lang.Object
  public <init>(net.corda.core.contracts.TransactionState, net.corda.core.contracts.StateRef)
  @NotNull
  public final net.corda.core.contracts.TransactionState component1()
  @NotNull
  public final net.corda.core.contracts.StateRef component2()
  @NotNull
  public final net.corda.core.contracts.StateAndRef copy(net.corda.core.contracts.TransactionState, net.corda.core.contracts.StateRef)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.contracts.StateRef getRef()
  @NotNull
  public final net.corda.core.contracts.TransactionState getState()
  public int hashCode()
  @NotNull
  public final net.corda.core.contracts.ReferencedStateAndRef referenced()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public abstract class net.corda.core.contracts.StatePointer extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public abstract Object getPointer()
  @NotNull
  public abstract Class getType()
  public abstract boolean isResolved()
  @NotNull
  public abstract net.corda.core.contracts.StateAndRef resolve(net.corda.core.node.ServiceHub)
  @NotNull
  public abstract net.corda.core.contracts.StateAndRef resolve(net.corda.core.transactions.LedgerTransaction)
  @NotNull
  public static final net.corda.core.contracts.StatePointer$Companion Companion
##
public static final class net.corda.core.contracts.StatePointer$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  public final net.corda.core.contracts.LinearPointer linearPointer(T, boolean)
  public final net.corda.core.contracts.StaticPointer staticPointer(net.corda.core.contracts.StateAndRef, boolean)
##
@CordaSerializable
public final class net.corda.core.contracts.StateRef extends java.lang.Object
  public <init>(net.corda.core.crypto.SecureHash, int)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  public final int component2()
  @NotNull
  public final net.corda.core.contracts.StateRef copy(net.corda.core.crypto.SecureHash, int)
  public boolean equals(Object)
  public final int getIndex()
  @NotNull
  public final net.corda.core.crypto.SecureHash getTxhash()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.contracts.StaticPointer extends net.corda.core.contracts.StatePointer
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.contracts.StateRef, Class)
  public <init>(net.corda.core.contracts.StateRef, Class, boolean)
  public <init>(net.corda.core.contracts.StateRef, Class, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.contracts.StateRef getPointer()
  @NotNull
  public Class getType()
  public int hashCode()
  public boolean isResolved()
  @NotNull
  public net.corda.core.contracts.StateAndRef resolve(net.corda.core.node.ServiceHub)
  @NotNull
  public net.corda.core.contracts.StateAndRef resolve(net.corda.core.transactions.LedgerTransaction)
##
public final class net.corda.core.contracts.Structures extends java.lang.Object
  public static final java.util.List filterStatesOfType(Iterable)
  @NotNull
  public static final net.corda.core.crypto.SecureHash hash(net.corda.core.contracts.ContractState)
  @NotNull
  public static final net.corda.core.crypto.SecureHash hash(net.corda.core.contracts.ContractState, String)
  @NotNull
  public static final net.corda.core.contracts.Amount withoutIssuer(net.corda.core.contracts.Amount)
  public static final int MAX_ISSUER_REF_SIZE = 512
##
@CordaSerializable
public abstract class net.corda.core.contracts.TimeWindow extends java.lang.Object
  public <init>()
  @NotNull
  public static final net.corda.core.contracts.TimeWindow between(java.time.Instant, java.time.Instant)
  public abstract boolean contains(java.time.Instant)
  @NotNull
  public static final net.corda.core.contracts.TimeWindow fromOnly(java.time.Instant)
  @NotNull
  public static final net.corda.core.contracts.TimeWindow fromStartAndDuration(java.time.Instant, java.time.Duration)
  @Nullable
  public abstract java.time.Instant getFromTime()
  @Nullable
  public final java.time.Duration getLength()
  @Nullable
  public abstract java.time.Instant getMidpoint()
  @Nullable
  public abstract java.time.Instant getUntilTime()
  @NotNull
  public static final net.corda.core.contracts.TimeWindow untilOnly(java.time.Instant)
  @NotNull
  public static final net.corda.core.contracts.TimeWindow withTolerance(java.time.Instant, java.time.Duration)
  @NotNull
  public static final net.corda.core.contracts.TimeWindow$Companion Companion
##
public static final class net.corda.core.contracts.TimeWindow$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.contracts.TimeWindow between(java.time.Instant, java.time.Instant)
  @NotNull
  public final net.corda.core.contracts.TimeWindow fromOnly(java.time.Instant)
  @NotNull
  public final net.corda.core.contracts.TimeWindow fromStartAndDuration(java.time.Instant, java.time.Duration)
  @NotNull
  public final net.corda.core.contracts.TimeWindow untilOnly(java.time.Instant)
  @NotNull
  public final net.corda.core.contracts.TimeWindow withTolerance(java.time.Instant, java.time.Duration)
##
public interface net.corda.core.contracts.TokenizableAssetInfo
  @NotNull
  public abstract java.math.BigDecimal getDisplayTokenSize()
##
@CordaSerializable
public class net.corda.core.contracts.TransactionResolutionException extends net.corda.core.flows.FlowException
  public <init>(net.corda.core.crypto.SecureHash)
  public <init>(net.corda.core.crypto.SecureHash, String)
  public <init>(net.corda.core.crypto.SecureHash, String, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.crypto.SecureHash getHash()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionResolutionException$UnknownParametersException extends net.corda.core.contracts.TransactionResolutionException
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SecureHash)
##
@CordaSerializable
public final class net.corda.core.contracts.TransactionState extends java.lang.Object
  public <init>(T, String, net.corda.core.identity.Party)
  public <init>(T, String, net.corda.core.identity.Party, Integer)
  public <init>(T, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint)
  public <init>(net.corda.core.contracts.ContractState, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(T, net.corda.core.identity.Party)
  @NotNull
  public final T component1()
  @NotNull
  public final String component2()
  @NotNull
  public final net.corda.core.identity.Party component3()
  @Nullable
  public final Integer component4()
  @NotNull
  public final net.corda.core.contracts.AttachmentConstraint component5()
  @NotNull
  public final net.corda.core.contracts.TransactionState copy(T, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.contracts.AttachmentConstraint getConstraint()
  @NotNull
  public final String getContract()
  @NotNull
  public final T getData()
  @Nullable
  public final Integer getEncumbrance()
  @NotNull
  public final net.corda.core.identity.Party getNotary()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.contracts.TransactionStateKt extends java.lang.Object
##
@CordaSerializable
public abstract class net.corda.core.contracts.TransactionVerificationException extends net.corda.core.flows.FlowException
  public <init>(net.corda.core.crypto.SecureHash, String, Throwable)
  @NotNull
  public final net.corda.core.crypto.SecureHash getTxId()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$AttachmentTooBigException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$BrokenTransactionException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$ConflictingAttachmentsRejection extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
  @NotNull
  public final String getContractClass()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$ConstraintPropagationRejection extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
  public <init>(net.corda.core.crypto.SecureHash, String, net.corda.core.contracts.AttachmentConstraint, net.corda.core.contracts.AttachmentConstraint)
  @NotNull
  public final String getContractClass()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$ContractConstraintRejection extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
  @NotNull
  public final String getContractClass()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$ContractCreationError extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String, Throwable)
  public <init>(net.corda.core.crypto.SecureHash, String, Throwable, String)
  @NotNull
  public final String getContractClass()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$ContractRejection extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String, Throwable, String)
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.contracts.Contract, Throwable)
  @NotNull
  public final String getContractClass()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$Direction extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.contracts.TransactionVerificationException$Direction valueOf(String)
  public static net.corda.core.contracts.TransactionVerificationException$Direction[] values()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$DuplicateAttachmentsRejection extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.contracts.Attachment)
  @NotNull
  public final net.corda.core.contracts.Attachment getAttachmentId()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$DuplicateInputStates extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.utilities.NonEmptySet)
  @NotNull
  public final net.corda.core.utilities.NonEmptySet getDuplicates()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$InvalidAttachmentException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.crypto.SecureHash getAttachmentHash()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$InvalidConstraintRejection extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String, String)
  @NotNull
  public final String getContractClass()
  @NotNull
  public final String getReason()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$InvalidNotaryChange extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$MissingAttachmentRejection extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
  @NotNull
  public final String getContractClass()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$MissingNetworkParametersException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SecureHash)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$MoreThanOneNotary extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$NotaryChangeInWrongTransactionType extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.identity.Party, net.corda.core.identity.Party)
  @NotNull
  public final net.corda.core.identity.Party getOutputNotary()
  @NotNull
  public final net.corda.core.identity.Party getTxNotary()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$OverlappingAttachmentsException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
  @NotNull
  public final String getPath()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$PackageOwnershipException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SecureHash, String, String)
  @NotNull
  public final net.corda.core.crypto.SecureHash getAttachmentHash()
  @NotNull
  public final String getInvalidClassName()
  @NotNull
  public final String getPackageName()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$SignersMissing extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, java.util.List)
  @NotNull
  public final java.util.List getMissing()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$TransactionContractConflictException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.contracts.TransactionState, String)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$TransactionDuplicateEncumbranceException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, int)
  public <init>(net.corda.core.crypto.SecureHash, String)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$TransactionMissingEncumbranceException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, int, net.corda.core.contracts.TransactionVerificationException$Direction)
  @NotNull
  public final net.corda.core.contracts.TransactionVerificationException$Direction getInOut()
  public final int getMissing()
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$TransactionNetworkParameterOrderingException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.contracts.StateRef, net.corda.core.node.NetworkParameters, net.corda.core.node.NetworkParameters)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$TransactionNonMatchingEncumbranceException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
  public <init>(net.corda.core.crypto.SecureHash, java.util.Collection)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$TransactionNotaryMismatchEncumbranceException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, int, int, net.corda.core.identity.Party, net.corda.core.identity.Party)
  public <init>(net.corda.core.crypto.SecureHash, String)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$TransactionRequiredContractUnspecifiedException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String)
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.contracts.TransactionState)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$UnsupportedClassVersionError extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash, String, Throwable)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$UnsupportedHashTypeException extends net.corda.core.contracts.TransactionVerificationException
  public <init>(net.corda.core.crypto.SecureHash)
##
@CordaSerializable
public static final class net.corda.core.contracts.TransactionVerificationException$UntrustedAttachmentsException extends net.corda.core.CordaException
  public <init>(net.corda.core.crypto.SecureHash, java.util.List)
  @NotNull
  public final java.util.List getIds()
  @NotNull
  public final net.corda.core.crypto.SecureHash getTxId()
##
@CordaSerializable
public abstract class net.corda.core.contracts.TypeOnlyCommandData extends java.lang.Object implements net.corda.core.contracts.CommandData
  public <init>()
  public boolean equals(Object)
  public int hashCode()
##
@CordaSerializable
public final class net.corda.core.contracts.UniqueIdentifier extends java.lang.Object implements java.lang.Comparable
  public <init>()
  public <init>(String)
  public <init>(String, java.util.UUID)
  public <init>(String, java.util.UUID, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public int compareTo(net.corda.core.contracts.UniqueIdentifier)
  @Nullable
  public final String component1()
  @NotNull
  public final java.util.UUID component2()
  @NotNull
  public final net.corda.core.contracts.UniqueIdentifier copy(String, java.util.UUID)
  public boolean equals(Object)
  @Nullable
  public final String getExternalId()
  @NotNull
  public final java.util.UUID getId()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.contracts.UniqueIdentifier$Companion Companion
##
public static final class net.corda.core.contracts.UniqueIdentifier$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.contracts.UniqueIdentifier fromString(String)
##
@CordaSerializable
public interface net.corda.core.contracts.UpgradedContract extends net.corda.core.contracts.Contract
  @NotNull
  public abstract String getLegacyContract()
  @NotNull
  public abstract NewState upgrade(OldState)
##
@CordaSerializable
public interface net.corda.core.contracts.UpgradedContractWithLegacyConstraint extends net.corda.core.contracts.UpgradedContract
  @NotNull
  public abstract net.corda.core.contracts.AttachmentConstraint getLegacyContractConstraint()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.contracts.WhitelistedByZoneAttachmentConstraint extends java.lang.Object implements net.corda.core.contracts.AttachmentConstraint
  public boolean isSatisfiedBy(net.corda.core.contracts.Attachment)
  @NotNull
  public static final net.corda.core.contracts.WhitelistedByZoneAttachmentConstraint INSTANCE
##
@DoNotImplement
public interface net.corda.core.cordapp.Cordapp
  @NotNull
  public abstract java.util.List getAllFlows()
  @NotNull
  public abstract java.util.List getCheckpointCustomSerializers()
  @NotNull
  public abstract java.util.List getContractClassNames()
  @NotNull
  public abstract java.util.List getCordappClasses()
  @NotNull
  public abstract java.util.Set getCustomSchemas()
  @NotNull
  public abstract net.corda.core.cordapp.Cordapp$Info getInfo()
  @NotNull
  public abstract java.util.List getInitiatedFlows()
  @NotNull
  public abstract net.corda.core.crypto.SecureHash$SHA256 getJarHash()
  @NotNull
  public abstract java.net.URL getJarPath()
  public abstract int getMinimumPlatformVersion()
  @NotNull
  public abstract String getName()
  @NotNull
  public abstract java.util.List getRpcFlows()
  @NotNull
  public abstract java.util.List getSchedulableFlows()
  @NotNull
  public abstract java.util.List getSerializationCustomSerializers()
  @NotNull
  public abstract java.util.List getSerializationWhitelists()
  @NotNull
  public abstract java.util.List getServiceFlows()
  @NotNull
  public abstract java.util.List getServices()
  public abstract int getTargetPlatformVersion()
  @NotNull
  public abstract java.util.List getTelemetryComponents()
##
@DoNotImplement
public static interface net.corda.core.cordapp.Cordapp$Info
  @NotNull
  public abstract String getLicence()
  @NotNull
  public abstract String getShortName()
  @NotNull
  public abstract String getVendor()
  @NotNull
  public abstract String getVersion()
  public abstract boolean hasUnknownFields()
##
@DoNotImplement
public static final class net.corda.core.cordapp.Cordapp$Info$Contract extends java.lang.Object implements net.corda.core.cordapp.Cordapp$Info
  public <init>(String, String, int, String)
  @NotNull
  public final String component1()
  @NotNull
  public final String component2()
  public final int component3()
  @NotNull
  public final String component4()
  @NotNull
  public final net.corda.core.cordapp.Cordapp$Info$Contract copy(String, String, int, String)
  public boolean equals(Object)
  @NotNull
  public String getLicence()
  @NotNull
  public String getShortName()
  @NotNull
  public String getVendor()
  @NotNull
  public String getVersion()
  public final int getVersionId()
  public boolean hasUnknownFields()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public static final class net.corda.core.cordapp.Cordapp$Info$ContractAndWorkflow extends java.lang.Object implements net.corda.core.cordapp.Cordapp$Info
  public <init>(net.corda.core.cordapp.Cordapp$Info$Contract, net.corda.core.cordapp.Cordapp$Info$Workflow)
  @NotNull
  public final net.corda.core.cordapp.Cordapp$Info$Contract component1()
  @NotNull
  public final net.corda.core.cordapp.Cordapp$Info$Workflow component2()
  @NotNull
  public final net.corda.core.cordapp.Cordapp$Info$ContractAndWorkflow copy(net.corda.core.cordapp.Cordapp$Info$Contract, net.corda.core.cordapp.Cordapp$Info$Workflow)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.cordapp.Cordapp$Info$Contract getContract()
  @NotNull
  public String getLicence()
  @NotNull
  public String getShortName()
  @NotNull
  public String getVendor()
  @NotNull
  public String getVersion()
  @NotNull
  public final net.corda.core.cordapp.Cordapp$Info$Workflow getWorkflow()
  public boolean hasUnknownFields()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public static final class net.corda.core.cordapp.Cordapp$Info$Default extends java.lang.Object implements net.corda.core.cordapp.Cordapp$Info
  public <init>(String, String, String, String)
  @NotNull
  public final String component1()
  @NotNull
  public final String component2()
  @NotNull
  public final String component3()
  @NotNull
  public final String component4()
  @NotNull
  public final net.corda.core.cordapp.Cordapp$Info$Default copy(String, String, String, String)
  public boolean equals(Object)
  @NotNull
  public String getLicence()
  @NotNull
  public String getShortName()
  @NotNull
  public String getVendor()
  @NotNull
  public String getVersion()
  public boolean hasUnknownFields()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public static final class net.corda.core.cordapp.Cordapp$Info$Workflow extends java.lang.Object implements net.corda.core.cordapp.Cordapp$Info
  public <init>(String, String, int, String)
  @NotNull
  public final String component1()
  @NotNull
  public final String component2()
  public final int component3()
  @NotNull
  public final String component4()
  @NotNull
  public final net.corda.core.cordapp.Cordapp$Info$Workflow copy(String, String, int, String)
  public boolean equals(Object)
  @NotNull
  public String getLicence()
  @NotNull
  public String getShortName()
  @NotNull
  public String getVendor()
  @NotNull
  public String getVersion()
  public final int getVersionId()
  public boolean hasUnknownFields()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public interface net.corda.core.cordapp.CordappConfig
  public abstract boolean exists(String)
  @NotNull
  public abstract Object get(String)
  public abstract boolean getBoolean(String)
  public abstract double getDouble(String)
  public abstract float getFloat(String)
  public abstract int getInt(String)
  public abstract long getLong(String)
  @NotNull
  public abstract Number getNumber(String)
  @NotNull
  public abstract String getString(String)
##
public final class net.corda.core.cordapp.CordappConfigException extends java.lang.Exception
  public <init>(String, Throwable)
##
public final class net.corda.core.cordapp.CordappContext extends java.lang.Object
  public <init>(net.corda.core.cordapp.Cordapp, net.corda.core.crypto.SecureHash, ClassLoader)
  public <init>(net.corda.core.cordapp.Cordapp, net.corda.core.crypto.SecureHash, ClassLoader, net.corda.core.cordapp.CordappConfig, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final net.corda.core.crypto.SecureHash getAttachmentId()
  @NotNull
  public final ClassLoader getClassLoader()
  @NotNull
  public final net.corda.core.cordapp.CordappConfig getConfig()
  @NotNull
  public final net.corda.core.cordapp.Cordapp getCordapp()
  @NotNull
  public static final net.corda.core.cordapp.CordappContext$Companion Companion
##
public static final class net.corda.core.cordapp.CordappContext$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public final class net.corda.core.cordapp.CordappInfo extends java.lang.Object
  public <init>(String, String, String, int, int, String, String, String, net.corda.core.crypto.SecureHash$SHA256)
  @NotNull
  public final String component1()
  @NotNull
  public final String component2()
  @NotNull
  public final String component3()
  public final int component4()
  public final int component5()
  @NotNull
  public final String component6()
  @NotNull
  public final String component7()
  @NotNull
  public final String component8()
  @NotNull
  public final net.corda.core.crypto.SecureHash$SHA256 component9()
  @NotNull
  public final net.corda.core.cordapp.CordappInfo copy(String, String, String, int, int, String, String, String, net.corda.core.crypto.SecureHash$SHA256)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.SecureHash$SHA256 getJarHash()
  @NotNull
  public final String getLicence()
  public final int getMinimumPlatformVersion()
  @NotNull
  public final String getName()
  @NotNull
  public final String getShortName()
  public final int getTargetPlatformVersion()
  @NotNull
  public final String getType()
  @NotNull
  public final String getVendor()
  @NotNull
  public final String getVersion()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public interface net.corda.core.cordapp.CordappProvider
  @NotNull
  public abstract net.corda.core.cordapp.CordappContext getAppContext()
  @Nullable
  public abstract net.corda.core.crypto.SecureHash getContractAttachmentID(String)
##
public class net.corda.core.crypto.AddressFormatException extends java.lang.IllegalArgumentException
  public <init>()
  public <init>(String)
##
public class net.corda.core.crypto.Base58 extends java.lang.Object
  public <init>()
  public static byte[] decode(String)
  public static byte[] decodeChecked(String)
  public static java.math.BigInteger decodeToBigInteger(String)
  public static String encode(byte[])
##
public final class net.corda.core.crypto.CompositeKey extends java.lang.Object implements java.security.PublicKey
  public <init>(int, java.util.List, kotlin.jvm.internal.DefaultConstructorMarker)
  public final void checkValidity()
  public boolean equals(Object)
  @NotNull
  public String getAlgorithm()
  @NotNull
  public final java.util.List getChildren()
  @NotNull
  public byte[] getEncoded()
  @NotNull
  public String getFormat()
  @NotNull
  public final java.util.Set getLeafKeys()
  public final int getThreshold()
  public int hashCode()
  public final boolean isFulfilledBy(Iterable)
  public final boolean isFulfilledBy(java.security.PublicKey)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.crypto.CompositeKey$Companion Companion
  @NotNull
  public static final String KEY_ALGORITHM = "COMPOSITE"
##
public static final class net.corda.core.crypto.CompositeKey$Builder extends java.lang.Object
  public <init>()
  @NotNull
  public final net.corda.core.crypto.CompositeKey$Builder addKey(java.security.PublicKey, int)
  @NotNull
  public final net.corda.core.crypto.CompositeKey$Builder addKeys(java.util.List)
  @NotNull
  public final net.corda.core.crypto.CompositeKey$Builder addKeys(java.security.PublicKey...)
  @NotNull
  public final java.security.PublicKey build(Integer)
##
public static final class net.corda.core.crypto.CompositeKey$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.security.PublicKey getInstance(org.bouncycastle.asn1.ASN1Primitive)
  @NotNull
  public final java.security.PublicKey getInstance(byte[])
##
@CordaSerializable
public static final class net.corda.core.crypto.CompositeKey$NodeAndWeight extends org.bouncycastle.asn1.ASN1Object implements java.lang.Comparable
  public <init>(java.security.PublicKey, int)
  public int compareTo(net.corda.core.crypto.CompositeKey$NodeAndWeight)
  @NotNull
  public final java.security.PublicKey component1()
  public final int component2()
  @NotNull
  public final net.corda.core.crypto.CompositeKey$NodeAndWeight copy(java.security.PublicKey, int)
  public boolean equals(Object)
  @NotNull
  public final java.security.PublicKey getNode()
  public final int getWeight()
  public int hashCode()
  @NotNull
  public org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()
  @NotNull
  public String toString()
##
public final class net.corda.core.crypto.CompositeKeyFactory extends java.security.KeyFactorySpi
  public <init>()
  @NotNull
  protected java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)
  @Nullable
  protected java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)
  @NotNull
  protected T engineGetKeySpec(java.security.Key, Class)
  @NotNull
  protected java.security.Key engineTranslateKey(java.security.Key)
##
public final class net.corda.core.crypto.CompositeSignature extends java.security.Signature
  public <init>()
  @NotNull
  protected Object engineGetParameter(String)
  protected void engineInitSign(java.security.PrivateKey)
  protected void engineInitVerify(java.security.PublicKey)
  protected void engineSetParameter(String, Object)
  protected void engineSetParameter(java.security.spec.AlgorithmParameterSpec)
  @NotNull
  protected byte[] engineSign()
  protected void engineUpdate(byte)
  protected void engineUpdate(byte[], int, int)
  protected boolean engineVerify(byte[])
  @NotNull
  public static final java.security.Provider$Service getService(java.security.Provider)
  @NotNull
  public static final net.corda.core.crypto.CompositeSignature$Companion Companion
  @NotNull
  public static final String SIGNATURE_ALGORITHM = "COMPOSITESIG"
##
public static final class net.corda.core.crypto.CompositeSignature$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.security.Provider$Service getService(java.security.Provider)
##
public static final class net.corda.core.crypto.CompositeSignature$State extends java.lang.Object
  public <init>(java.io.ByteArrayOutputStream, net.corda.core.crypto.CompositeKey)
  @NotNull
  public final java.io.ByteArrayOutputStream component1()
  @NotNull
  public final net.corda.core.crypto.CompositeKey component2()
  @NotNull
  public final net.corda.core.crypto.CompositeSignature$State copy(java.io.ByteArrayOutputStream, net.corda.core.crypto.CompositeKey)
  public final boolean engineVerify(byte[])
  public boolean equals(Object)
  @NotNull
  public final java.io.ByteArrayOutputStream getBuffer()
  @NotNull
  public final net.corda.core.crypto.CompositeKey getVerifyKey()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.crypto.CompositeSignaturesWithKeys extends java.lang.Object
  public <init>(java.util.List)
  @NotNull
  public final java.util.List component1()
  @NotNull
  public final net.corda.core.crypto.CompositeSignaturesWithKeys copy(java.util.List)
  public boolean equals(Object)
  @NotNull
  public final java.util.List getSigs()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.crypto.CompositeSignaturesWithKeys$Companion Companion
##
public static final class net.corda.core.crypto.CompositeSignaturesWithKeys$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.crypto.CompositeSignaturesWithKeys getEMPTY()
##
public final class net.corda.core.crypto.CordaObjectIdentifier extends java.lang.Object
  @NotNull
  public static final org.bouncycastle.asn1.ASN1ObjectIdentifier COMPOSITE_KEY
  @NotNull
  public static final org.bouncycastle.asn1.ASN1ObjectIdentifier COMPOSITE_SIGNATURE
  @NotNull
  public static final net.corda.core.crypto.CordaObjectIdentifier INSTANCE
##
public final class net.corda.core.crypto.CordaSecurityProvider extends java.security.Provider
  public <init>()
  @Nullable
  public java.security.Provider$Service getService(String, String)
  @NotNull
  public static final net.corda.core.crypto.CordaSecurityProvider$Companion Companion
  @NotNull
  public static final String PROVIDER_NAME = "Corda"
##
public static final class net.corda.core.crypto.CordaSecurityProvider$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
public final class net.corda.core.crypto.Crypto extends java.lang.Object
  @NotNull
  public static final java.security.PrivateKey decodePrivateKey(String, byte[])
  @NotNull
  public static final java.security.PrivateKey decodePrivateKey(net.corda.core.crypto.SignatureScheme, byte[])
  @NotNull
  public static final java.security.PrivateKey decodePrivateKey(byte[])
  @NotNull
  public static final java.security.PublicKey decodePublicKey(String, byte[])
  @NotNull
  public static final java.security.PublicKey decodePublicKey(net.corda.core.crypto.SignatureScheme, byte[])
  @NotNull
  public static final java.security.PublicKey decodePublicKey(byte[])
  @NotNull
  public static final java.security.KeyPair deriveKeyPair(java.security.PrivateKey, byte[])
  @NotNull
  public static final java.security.KeyPair deriveKeyPair(net.corda.core.crypto.SignatureScheme, java.security.PrivateKey, byte[])
  @NotNull
  public static final java.security.KeyPair deriveKeyPairFromEntropy(java.math.BigInteger)
  @NotNull
  public static final java.security.KeyPair deriveKeyPairFromEntropy(net.corda.core.crypto.SignatureScheme, java.math.BigInteger)
  @NotNull
  public static final byte[] doSign(String, java.security.PrivateKey, byte[])
  @NotNull
  public static final net.corda.core.crypto.TransactionSignature doSign(java.security.KeyPair, net.corda.core.crypto.SignableData)
  @NotNull
  public static final byte[] doSign(java.security.PrivateKey, byte[])
  @NotNull
  public static final byte[] doSign(net.corda.core.crypto.SignatureScheme, java.security.PrivateKey, byte[])
  public static final boolean doVerify(String, java.security.PublicKey, byte[], byte[])
  public static final boolean doVerify(java.security.PublicKey, byte[], byte[])
  public static final boolean doVerify(net.corda.core.crypto.SecureHash, net.corda.core.crypto.TransactionSignature)
  public static final boolean doVerify(net.corda.core.crypto.SignatureScheme, java.security.PublicKey, byte[], byte[])
  @NotNull
  public static final byte[] encodePublicKey(java.security.PublicKey)
  @NotNull
  public static final java.security.Provider findProvider(String)
  @NotNull
  public static final net.corda.core.crypto.SignatureScheme findSignatureScheme(int)
  @NotNull
  public static final net.corda.core.crypto.SignatureScheme findSignatureScheme(String)
  @NotNull
  public static final net.corda.core.crypto.SignatureScheme findSignatureScheme(java.security.PrivateKey)
  @NotNull
  public static final net.corda.core.crypto.SignatureScheme findSignatureScheme(java.security.PublicKey)
  @NotNull
  public static final net.corda.core.crypto.SignatureScheme findSignatureScheme(org.bouncycastle.asn1.x509.AlgorithmIdentifier)
  @NotNull
  public static final java.security.KeyPair generateKeyPair()
  @NotNull
  public static final java.security.KeyPair generateKeyPair(String)
  @NotNull
  public static final java.security.KeyPair generateKeyPair(net.corda.core.crypto.SignatureScheme)
  public static final boolean isSupportedSignatureScheme(net.corda.core.crypto.SignatureScheme)
  public static final boolean isValid(java.security.PublicKey, byte[], byte[])
  public static final boolean isValid(net.corda.core.crypto.SecureHash, net.corda.core.crypto.TransactionSignature)
  public static final boolean isValid(net.corda.core.crypto.SignatureScheme, java.security.PublicKey, byte[], byte[])
  public static final boolean publicKeyOnCurve(net.corda.core.crypto.SignatureScheme, java.security.PublicKey)
  public static final void registerProviders()
  @NotNull
  public static final java.util.List supportedSignatureSchemes()
  @NotNull
  public static final java.security.PrivateKey toSupportedPrivateKey(java.security.PrivateKey)
  @NotNull
  public static final java.security.PublicKey toSupportedPublicKey(java.security.PublicKey)
  @NotNull
  public static final java.security.PublicKey toSupportedPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)
  public static final boolean validatePublicKey(java.security.PublicKey)
  @NotNull
  public static final net.corda.core.crypto.SignatureScheme COMPOSITE_KEY
  @NotNull
  public static final net.corda.core.crypto.SignatureScheme DEFAULT_SIGNATURE_SCHEME
  @NotNull
  public static final net.corda.core.crypto.SignatureScheme ECDSA_SECP256K1_SHA256
  @NotNull
  public static final net.corda.core.crypto.SignatureScheme ECDSA_SECP256R1_SHA256
  @NotNull
  public static final net.corda.core.crypto.SignatureScheme EDDSA_ED25519_SHA512
  @NotNull
  public static final net.corda.core.crypto.Crypto INSTANCE
  @NotNull
  public static final net.corda.core.crypto.SignatureScheme RSA_SHA256
  @NotNull
  public static final org.bouncycastle.asn1.DLSequence SHA512_256
##
public final class net.corda.core.crypto.CryptoUtils extends java.lang.Object
  @NotNull
  public static final java.util.Set byKeys(Iterable)
  @NotNull
  public static final java.security.PrivateKey component1(java.security.KeyPair)
  @NotNull
  public static final java.security.PublicKey component2(java.security.KeyPair)
  @NotNull
  public static final net.corda.core.crypto.SecureHash componentHash(net.corda.core.crypto.SecureHash, net.corda.core.utilities.OpaqueBytes)
  @NotNull
  public static final net.corda.core.crypto.SecureHash componentHash(net.corda.core.utilities.OpaqueBytes, net.corda.core.contracts.PrivacySalt, int, int)
  @NotNull
  public static final net.corda.core.crypto.SecureHash$SHA256 computeNonce(net.corda.core.contracts.PrivacySalt, int, int)
  public static final boolean containsAny(java.security.PublicKey, Iterable)
  @NotNull
  public static final java.security.KeyPair entropyToKeyPair(java.math.BigInteger)
  @NotNull
  public static final java.security.KeyPair generateKeyPair()
  @NotNull
  public static final java.util.Set getKeys(java.security.PublicKey)
  public static final boolean isFulfilledBy(java.security.PublicKey, Iterable)
  public static final boolean isFulfilledBy(java.security.PublicKey, java.security.PublicKey)
  public static final boolean isValid(java.security.PublicKey, byte[], net.corda.core.crypto.DigitalSignature)
  @NotNull
  public static final java.security.SecureRandom newSecureRandom()
  public static final long random63BitValue()
  @NotNull
  public static final byte[] secureRandomBytes(int)
  @NotNull
  public static final net.corda.core.crypto.SecureHash serializedHash(T)
  @NotNull
  public static final net.corda.core.crypto.TransactionSignature sign(java.security.KeyPair, net.corda.core.crypto.SignableData)
  @NotNull
  public static final net.corda.core.crypto.DigitalSignature$WithKey sign(java.security.KeyPair, net.corda.core.utilities.OpaqueBytes)
  @NotNull
  public static final net.corda.core.crypto.DigitalSignature$WithKey sign(java.security.KeyPair, byte[])
  @NotNull
  public static final net.corda.core.crypto.DigitalSignature sign(java.security.PrivateKey, byte[])
  @NotNull
  public static final net.corda.core.crypto.DigitalSignature$WithKey sign(java.security.PrivateKey, byte[], java.security.PublicKey)
  @NotNull
  public static final String toStringShort(java.security.PublicKey)
  public static final boolean verify(java.security.KeyPair, byte[], byte[])
  public static final boolean verify(java.security.PublicKey, byte[], net.corda.core.crypto.DigitalSignature)
  public static final boolean verify(java.security.PublicKey, byte[], byte[])
##
public interface net.corda.core.crypto.DigestAlgorithm
  @NotNull
  public byte[] componentDigest(byte[])
  @NotNull
  public abstract byte[] digest(byte[])
  @NotNull
  public abstract String getAlgorithm()
  public abstract int getDigestLength()
  @NotNull
  public byte[] nonceDigest(byte[])
##
@CordaSerializable
public final class net.corda.core.crypto.DigestService extends java.lang.Object
  public <init>(String)
  @NotNull
  public final String component1()
  @NotNull
  public final net.corda.core.crypto.SecureHash componentHash(net.corda.core.crypto.SecureHash, net.corda.core.utilities.OpaqueBytes)
  @NotNull
  public final net.corda.core.crypto.SecureHash componentHash(net.corda.core.utilities.OpaqueBytes, net.corda.core.contracts.PrivacySalt, int, int)
  @NotNull
  public final net.corda.core.crypto.SecureHash computeNonce(net.corda.core.contracts.PrivacySalt, int, int)
  @NotNull
  public final net.corda.core.crypto.DigestService copy(String)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.SecureHash getAllOnesHash()
  public final int getDigestLength()
  @NotNull
  public final String getHashAlgorithm()
  @NotNull
  public final net.corda.core.crypto.SecureHash getZeroHash()
  @NotNull
  public final net.corda.core.crypto.SecureHash hash(String)
  @NotNull
  public final net.corda.core.crypto.SecureHash hash(byte[])
  public int hashCode()
  @NotNull
  public final net.corda.core.crypto.SecureHash serializedHash(T)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.crypto.DigestService$Companion Companion
##
public static final class net.corda.core.crypto.DigestService$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.crypto.DigestService getDefault()
  @NotNull
  public final net.corda.core.crypto.DigestService getSha2_256()
  @NotNull
  public final net.corda.core.crypto.DigestService getSha2_384()
  @NotNull
  public final net.corda.core.crypto.DigestService getSha2_512()
##
public final class net.corda.core.crypto.DigestServiceKt extends java.lang.Object
  @NotNull
  public static final net.corda.core.crypto.SecureHash randomHash(net.corda.core.crypto.DigestService)
##
@CordaSerializable
public class net.corda.core.crypto.DigitalSignature extends net.corda.core.utilities.OpaqueBytes
  public <init>(byte[])
##
@CordaSerializable
public static class net.corda.core.crypto.DigitalSignature$WithKey extends net.corda.core.crypto.DigitalSignature
  public <init>(java.security.PublicKey, byte[])
  @NotNull
  public final java.security.PublicKey getBy()
  public final boolean isValid(byte[])
  public final boolean verify(net.corda.core.utilities.OpaqueBytes)
  public final boolean verify(byte[])
  @NotNull
  public final net.corda.core.crypto.DigitalSignature withoutKey()
##
public final class net.corda.core.crypto.DummySecureRandom extends java.security.SecureRandom
  @NotNull
  public static final net.corda.core.crypto.DummySecureRandom INSTANCE
##
public abstract class net.corda.core.crypto.MerkleTree extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public abstract net.corda.core.crypto.SecureHash getHash()
  @NotNull
  public static final net.corda.core.crypto.MerkleTree$Companion Companion
##
public static final class net.corda.core.crypto.MerkleTree$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.crypto.MerkleTree getMerkleTree(java.util.List)
  @NotNull
  public final net.corda.core.crypto.MerkleTree getMerkleTree(java.util.List, net.corda.core.crypto.DigestService)
##
public static final class net.corda.core.crypto.MerkleTree$Leaf extends net.corda.core.crypto.MerkleTree
  public <init>(net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final net.corda.core.crypto.MerkleTree$Leaf copy(net.corda.core.crypto.SecureHash)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.crypto.SecureHash getHash()
  public int hashCode()
  @NotNull
  public String toString()
##
public static final class net.corda.core.crypto.MerkleTree$Node extends net.corda.core.crypto.MerkleTree
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.crypto.MerkleTree, net.corda.core.crypto.MerkleTree)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final net.corda.core.crypto.MerkleTree component2()
  @NotNull
  public final net.corda.core.crypto.MerkleTree component3()
  @NotNull
  public final net.corda.core.crypto.MerkleTree$Node copy(net.corda.core.crypto.SecureHash, net.corda.core.crypto.MerkleTree, net.corda.core.crypto.MerkleTree)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.crypto.SecureHash getHash()
  @NotNull
  public final net.corda.core.crypto.MerkleTree getLeft()
  @NotNull
  public final net.corda.core.crypto.MerkleTree getRight()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.crypto.MerkleTreeException extends net.corda.core.CordaException
  public <init>(String)
  @NotNull
  public final String getReason()
##
public final class net.corda.core.crypto.NullKeys extends java.lang.Object
  @NotNull
  public final net.corda.core.identity.AnonymousParty getNULL_PARTY()
  @NotNull
  public final net.corda.core.crypto.TransactionSignature getNULL_SIGNATURE()
  @NotNull
  public static final net.corda.core.crypto.NullKeys INSTANCE
##
public static final class net.corda.core.crypto.NullKeys$NullPublicKey extends java.lang.Object implements java.lang.Comparable, java.security.PublicKey
  public int compareTo(java.security.PublicKey)
  @NotNull
  public String getAlgorithm()
  @NotNull
  public byte[] getEncoded()
  @NotNull
  public String getFormat()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.crypto.NullKeys$NullPublicKey INSTANCE
##
@CordaSerializable
public final class net.corda.core.crypto.PartialMerkleTree extends java.lang.Object
  public <init>(net.corda.core.crypto.PartialMerkleTree$PartialTree)
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree$PartialTree getRoot()
  public final boolean verify(net.corda.core.crypto.SecureHash, java.util.List)
  @NotNull
  public static final net.corda.core.crypto.PartialMerkleTree$Companion Companion
##
public static final class net.corda.core.crypto.PartialMerkleTree$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree build(net.corda.core.crypto.MerkleTree, java.util.List)
  @NotNull
  public final net.corda.core.crypto.SecureHash rootAndUsedHashes(net.corda.core.crypto.PartialMerkleTree$PartialTree, java.util.List)
##
@CordaSerializable
public abstract static class net.corda.core.crypto.PartialMerkleTree$PartialTree extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public static final class net.corda.core.crypto.PartialMerkleTree$PartialTree$IncludedLeaf extends net.corda.core.crypto.PartialMerkleTree$PartialTree
  public <init>(net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree$PartialTree$IncludedLeaf copy(net.corda.core.crypto.SecureHash)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.SecureHash getHash()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.crypto.PartialMerkleTree$PartialTree$Leaf extends net.corda.core.crypto.PartialMerkleTree$PartialTree
  public <init>(net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree$PartialTree$Leaf copy(net.corda.core.crypto.SecureHash)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.SecureHash getHash()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.crypto.PartialMerkleTree$PartialTree$Node extends net.corda.core.crypto.PartialMerkleTree$PartialTree
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.crypto.PartialMerkleTree$PartialTree, net.corda.core.crypto.PartialMerkleTree$PartialTree)
  public <init>(net.corda.core.crypto.PartialMerkleTree$PartialTree, net.corda.core.crypto.PartialMerkleTree$PartialTree, String)
  public <init>(net.corda.core.crypto.PartialMerkleTree$PartialTree, net.corda.core.crypto.PartialMerkleTree$PartialTree, String, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree$PartialTree component1()
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree$PartialTree component2()
  @Nullable
  public final String component3()
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree$PartialTree$Node copy(net.corda.core.crypto.PartialMerkleTree$PartialTree, net.corda.core.crypto.PartialMerkleTree$PartialTree)
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree$PartialTree$Node copy(net.corda.core.crypto.PartialMerkleTree$PartialTree, net.corda.core.crypto.PartialMerkleTree$PartialTree, String)
  public boolean equals(Object)
  @Nullable
  public final String getHashAlgorithm()
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree$PartialTree getLeft()
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree$PartialTree getRight()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public abstract class net.corda.core.crypto.SecureHash extends net.corda.core.utilities.OpaqueBytes
  public <init>(byte[], kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public static final net.corda.core.crypto.SecureHash allOnesHashFor(String)
  @NotNull
  public static final net.corda.core.crypto.SecureHash componentHashAs(String, byte[])
  @NotNull
  public final net.corda.core.crypto.SecureHash concatenate(net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.crypto.SecureHash concatenateAs(String, net.corda.core.crypto.SecureHash)
  @NotNull
  public static final net.corda.core.crypto.SecureHash create(String)
  @NotNull
  public static final net.corda.core.crypto.SecureHash$SHA256 createSHA256(byte[])
  @NotNull
  protected net.corda.core.crypto.SecureHash generate(byte[])
  @NotNull
  public static final net.corda.core.crypto.SecureHash hashAs(String, byte[])
  @NotNull
  public final net.corda.core.crypto.SecureHash$SHA256 hashConcat(net.corda.core.crypto.SecureHash)
  @NotNull
  public static final net.corda.core.crypto.SecureHash nonceHashAs(String, byte[])
  @NotNull
  public static final net.corda.core.crypto.SecureHash$SHA256 parse(String)
  @NotNull
  public final String prefixChars(int)
  @NotNull
  public static final net.corda.core.crypto.SecureHash random(String)
  @NotNull
  public static final net.corda.core.crypto.SecureHash$SHA256 randomSHA256()
  @NotNull
  public final net.corda.core.crypto.SecureHash reHash()
  @NotNull
  public static final net.corda.core.crypto.SecureHash$SHA256 sha256(String)
  @NotNull
  public static final net.corda.core.crypto.SecureHash$SHA256 sha256(byte[])
  @NotNull
  public static final net.corda.core.crypto.SecureHash$SHA256 sha256Twice(byte[])
  @NotNull
  public final String toHexString()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.crypto.SecureHash zeroHashFor(String)
  @NotNull
  public static final net.corda.core.crypto.SecureHash$Companion Companion
  public static final char DELIMITER = ':'
  @NotNull
  public static final String SHA2_256 = "SHA-256"
  @NotNull
  public static final String SHA2_384 = "SHA-384"
  @NotNull
  public static final String SHA2_512 = "SHA-512"
  @NotNull
  public static final net.corda.core.crypto.SecureHash$SHA256 allOnesHash
  @NotNull
  public static final net.corda.core.crypto.SecureHash$SHA256 zeroHash
##
public static final class net.corda.core.crypto.SecureHash$Companion extends java.lang.Object implements net.corda.core.internal.utilities.Internable
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.crypto.SecureHash allOnesHashFor(String)
  @NotNull
  public final net.corda.core.crypto.SecureHash componentHashAs(String, byte[])
  @NotNull
  public final net.corda.core.crypto.SecureHash create(String)
  @NotNull
  public final net.corda.core.crypto.SecureHash$SHA256 createSHA256(byte[])
  public final int digestLengthFor(String)
  @NotNull
  public final net.corda.core.crypto.SecureHash$SHA256 getAllOnesHash()
  @NotNull
  public net.corda.core.internal.utilities.PrivateInterner getInterner()
  @NotNull
  public final net.corda.core.crypto.SecureHash$SHA256 getZeroHash()
  @NotNull
  public final net.corda.core.crypto.SecureHash hashAs(String, byte[])
  @NotNull
  public final net.corda.core.crypto.SecureHash nonceHashAs(String, byte[])
  @NotNull
  public final net.corda.core.crypto.SecureHash$SHA256 parse(String)
  @NotNull
  public final net.corda.core.crypto.SecureHash random(String)
  @NotNull
  public final net.corda.core.crypto.SecureHash$SHA256 randomSHA256()
  @NotNull
  public final net.corda.core.crypto.SecureHash$SHA256 sha256(String)
  @NotNull
  public final net.corda.core.crypto.SecureHash$SHA256 sha256(byte[])
  @NotNull
  public final net.corda.core.crypto.SecureHash$SHA256 sha256Twice(byte[])
  @NotNull
  public final net.corda.core.crypto.SecureHash zeroHashFor(String)
##
@CordaSerializable
public static final class net.corda.core.crypto.SecureHash$HASH extends net.corda.core.crypto.SecureHash
  public <init>(String, byte[])
  public boolean equals(Object)
  @NotNull
  protected net.corda.core.crypto.SecureHash generate(byte[])
  @NotNull
  public final String getAlgorithm()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.crypto.SecureHash$SHA256 extends net.corda.core.crypto.SecureHash
  public <init>(byte[])
  public boolean equals(Object)
  @NotNull
  protected net.corda.core.crypto.SecureHash generate(byte[])
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.crypto.SecureHashKt extends java.lang.Object
  @NotNull
  public static final String getAlgorithm(net.corda.core.crypto.SecureHash)
  @NotNull
  public static final net.corda.core.crypto.SecureHash hashAs(net.corda.core.utilities.OpaqueBytes, String)
  @NotNull
  public static final net.corda.core.crypto.SecureHash hashAs(byte[], String)
  public static final boolean isZero(net.corda.core.utilities.OpaqueBytes)
  @NotNull
  public static final net.corda.core.crypto.SecureHash$SHA256 sha256(net.corda.core.utilities.OpaqueBytes)
  @NotNull
  public static final net.corda.core.crypto.SecureHash$SHA256 sha256(byte[])
##
@CordaSerializable
public final class net.corda.core.crypto.SignableData extends java.lang.Object
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SignatureMetadata)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final net.corda.core.crypto.SignatureMetadata component2()
  @NotNull
  public final net.corda.core.crypto.SignableData copy(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SignatureMetadata)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.SignatureMetadata getSignatureMetadata()
  @NotNull
  public final net.corda.core.crypto.SecureHash getTxId()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.crypto.SignatureMetadata extends java.lang.Object
  public <init>(int, int)
  public final int component1()
  public final int component2()
  @NotNull
  public final net.corda.core.crypto.SignatureMetadata copy(int, int)
  public boolean equals(Object)
  public final int getPlatformVersion()
  public final int getSchemeNumberID()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.crypto.SignatureScheme extends java.lang.Object
  public <init>(int, String, org.bouncycastle.asn1.x509.AlgorithmIdentifier, java.util.List, String, String, String, java.security.spec.AlgorithmParameterSpec, Integer, String)
  public final int component1()
  @NotNull
  public final String component10()
  @NotNull
  public final String component2()
  @NotNull
  public final org.bouncycastle.asn1.x509.AlgorithmIdentifier component3()
  @NotNull
  public final java.util.List component4()
  @NotNull
  public final String component5()
  @NotNull
  public final String component6()
  @NotNull
  public final String component7()
  @Nullable
  public final java.security.spec.AlgorithmParameterSpec component8()
  @Nullable
  public final Integer component9()
  @NotNull
  public final net.corda.core.crypto.SignatureScheme copy(int, String, org.bouncycastle.asn1.x509.AlgorithmIdentifier, java.util.List, String, String, String, java.security.spec.AlgorithmParameterSpec, Integer, String)
  public boolean equals(Object)
  @Nullable
  public final java.security.spec.AlgorithmParameterSpec getAlgSpec()
  @NotNull
  public final String getAlgorithmName()
  @NotNull
  public final java.util.List getAlternativeOIDs()
  @NotNull
  public final String getDesc()
  @Nullable
  public final Integer getKeySize()
  @NotNull
  public final String getProviderName()
  @NotNull
  public final String getSchemeCodeName()
  public final int getSchemeNumberID()
  @NotNull
  public final String getSignatureName()
  @NotNull
  public final org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureOID()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public class net.corda.core.crypto.SignedData extends java.lang.Object
  public <init>(net.corda.core.serialization.SerializedBytes, net.corda.core.crypto.DigitalSignature$WithKey)
  @NotNull
  public final net.corda.core.serialization.SerializedBytes getRaw()
  @NotNull
  public final net.corda.core.crypto.DigitalSignature$WithKey getSig()
  @NotNull
  public final T verified()
  protected void verifyData(T)
##
@CordaSerializable
public final class net.corda.core.crypto.TransactionSignature extends net.corda.core.crypto.DigitalSignature
  public <init>(byte[], java.security.PublicKey, net.corda.core.crypto.SignatureMetadata)
  public <init>(byte[], java.security.PublicKey, net.corda.core.crypto.SignatureMetadata, net.corda.core.crypto.PartialMerkleTree)
  public boolean equals(Object)
  @NotNull
  public final java.security.PublicKey getBy()
  @Nullable
  public final net.corda.core.crypto.PartialMerkleTree getPartialMerkleTree()
  @NotNull
  public final net.corda.core.crypto.SignatureMetadata getSignatureMetadata()
  public int hashCode()
  public final boolean isValid(net.corda.core.crypto.SecureHash)
  public final boolean verify(net.corda.core.crypto.SecureHash)
##
public abstract class net.corda.core.flows.AbstractStateReplacementFlow extends java.lang.Object
  public <init>()
##
public abstract static class net.corda.core.flows.AbstractStateReplacementFlow$Acceptor extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.flows.FlowSession)
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.utilities.ProgressTracker, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Suspendable
  @Nullable
  public Void call()
  @NotNull
  public final net.corda.core.flows.FlowSession getInitiatingSession()
  @NotNull
  public net.corda.core.utilities.ProgressTracker getProgressTracker()
  protected abstract void verifyProposal(net.corda.core.transactions.SignedTransaction, net.corda.core.flows.AbstractStateReplacementFlow$Proposal)
  @NotNull
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion Companion
##
public static final class net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker tracker()
##
@CordaSerializable
public static final class net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion$APPROVING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion$APPROVING INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion$VERIFYING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Acceptor$Companion$VERIFYING INSTANCE
##
public abstract static class net.corda.core.flows.AbstractStateReplacementFlow$Instigator extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.contracts.StateAndRef, M, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.contracts.StateAndRef, Object, net.corda.core.utilities.ProgressTracker, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  protected abstract net.corda.core.flows.AbstractStateReplacementFlow$UpgradeTx assembleTx()
  @Suspendable
  @NotNull
  public net.corda.core.contracts.StateAndRef call()
  public final M getModification()
  @NotNull
  public final net.corda.core.contracts.StateAndRef getOriginalState()
  @NotNull
  public java.util.List getParticipantSessions()
  @NotNull
  public net.corda.core.utilities.ProgressTracker getProgressTracker()
  @NotNull
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion Companion
##
public static final class net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker tracker()
##
@CordaSerializable
public static final class net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion$NOTARY extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion$NOTARY INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion$SIGNING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.AbstractStateReplacementFlow$Instigator$Companion$SIGNING INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.AbstractStateReplacementFlow$Proposal extends java.lang.Object
  public <init>(net.corda.core.contracts.StateRef, M)
  @NotNull
  public final net.corda.core.contracts.StateRef component1()
  public final M component2()
  @NotNull
  public final net.corda.core.flows.AbstractStateReplacementFlow$Proposal copy(net.corda.core.contracts.StateRef, M)
  public boolean equals(Object)
  public final M getModification()
  @NotNull
  public final net.corda.core.contracts.StateRef getStateRef()
  public int hashCode()
  @NotNull
  public String toString()
##
public static final class net.corda.core.flows.AbstractStateReplacementFlow$UpgradeTx extends java.lang.Object
  public <init>(net.corda.core.transactions.SignedTransaction)
  @NotNull
  public final net.corda.core.transactions.SignedTransaction component1()
  @NotNull
  public final net.corda.core.flows.AbstractStateReplacementFlow$UpgradeTx copy(net.corda.core.transactions.SignedTransaction)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.transactions.SignedTransaction getStx()
  public int hashCode()
  @NotNull
  public String toString()
##
@Suspendable
public final class net.corda.core.flows.CollectSignatureFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.transactions.SignedTransaction, net.corda.core.flows.FlowSession, java.util.List)
  public <init>(net.corda.core.transactions.SignedTransaction, net.corda.core.flows.FlowSession, java.security.PublicKey...)
  @Suspendable
  @NotNull
  public java.util.List call()
  @NotNull
  public final net.corda.core.transactions.SignedTransaction getPartiallySignedTx()
  @NotNull
  public final net.corda.core.flows.FlowSession getSession()
  @NotNull
  public final java.util.List getSigningKeys()
##
public final class net.corda.core.flows.CollectSignaturesFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, Iterable)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, Iterable, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, Iterable, net.corda.core.utilities.ProgressTracker, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, net.corda.core.utilities.ProgressTracker, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Suspendable
  @NotNull
  public net.corda.core.transactions.SignedTransaction call()
  @Nullable
  public final Iterable getMyOptionalKeys()
  @NotNull
  public final net.corda.core.transactions.SignedTransaction getPartiallySignedTx()
  @NotNull
  public net.corda.core.utilities.ProgressTracker getProgressTracker()
  @NotNull
  public final java.util.Collection getSessionsToCollectFrom()
  @NotNull
  public static final net.corda.core.utilities.ProgressTracker tracker()
  @NotNull
  public static final net.corda.core.flows.CollectSignaturesFlow$Companion Companion
##
public static final class net.corda.core.flows.CollectSignaturesFlow$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker tracker()
##
@CordaSerializable
public static final class net.corda.core.flows.CollectSignaturesFlow$Companion$COLLECTING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.CollectSignaturesFlow$Companion$COLLECTING INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.CollectSignaturesFlow$Companion$VERIFYING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.CollectSignaturesFlow$Companion$VERIFYING INSTANCE
##
@CordaSerializable
public final class net.corda.core.flows.ComparableRecoveryTimeWindow extends java.lang.Object
  public <init>(java.time.Instant, int, java.time.Instant, int)
  @NotNull
  public final java.time.Instant component1()
  public final int component2()
  @NotNull
  public final java.time.Instant component3()
  public final int component4()
  @NotNull
  public final net.corda.core.flows.ComparableRecoveryTimeWindow copy(java.time.Instant, int, java.time.Instant, int)
  public boolean equals(Object)
  @NotNull
  public final java.time.Instant getFromTime()
  public final int getFromTimestampDiscriminator()
  @NotNull
  public final java.time.Instant getUntilTime()
  public final int getUntilTimestampDiscriminator()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.flows.ComparableRecoveryTimeWindow$Companion Companion
##
public static final class net.corda.core.flows.ComparableRecoveryTimeWindow$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.flows.ComparableRecoveryTimeWindow from(net.corda.core.flows.RecoveryTimeWindow)
##
public final class net.corda.core.flows.ContractUpgradeFlow extends java.lang.Object
  @NotNull
  public static final net.corda.core.flows.ContractUpgradeFlow INSTANCE
##
@StartableByRPC
public static final class net.corda.core.flows.ContractUpgradeFlow$Authorise extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.contracts.StateAndRef, Class)
  @Suspendable
  @Nullable
  public Void call()
  @NotNull
  public final net.corda.core.contracts.StateAndRef getStateAndRef()
##
@StartableByRPC
public static final class net.corda.core.flows.ContractUpgradeFlow$Deauthorise extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.contracts.StateRef)
  @Suspendable
  @Nullable
  public Void call()
  @NotNull
  public final net.corda.core.contracts.StateRef getStateRef()
##
@InitiatingFlow
@StartableByRPC
public static final class net.corda.core.flows.ContractUpgradeFlow$Initiate extends net.corda.core.flows.AbstractStateReplacementFlow$Instigator
  public <init>(net.corda.core.contracts.StateAndRef, Class)
  @Suspendable
  @NotNull
  protected net.corda.core.flows.AbstractStateReplacementFlow$UpgradeTx assembleTx()
##
public class net.corda.core.flows.DataVendingFlow extends net.corda.core.flows.FlowLogic
  public <init>(java.util.Set, Object, net.corda.core.flows.TransactionMetadata)
  public <init>(java.util.Set, Object, net.corda.core.flows.TransactionMetadata, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.flows.FlowSession, Object)
  public <init>(net.corda.core.flows.FlowSession, Object, net.corda.core.flows.TransactionMetadata)
  public <init>(net.corda.core.flows.FlowSession, Object, net.corda.core.flows.TransactionMetadata, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Suspendable
  @Nullable
  public Void call()
  @NotNull
  public final java.util.Set getOtherSessions()
  @NotNull
  public final net.corda.core.flows.FlowSession getOtherSideSession()
  @NotNull
  public final Object getPayload()
  protected boolean isFinality()
  @Suspendable
  @NotNull
  protected net.corda.core.utilities.UntrustworthyData sendPayloadAndReceiveDataRequest(net.corda.core.flows.FlowSession, Object)
  @Suspendable
  protected void verifyDataRequest(net.corda.core.internal.FetchDataFlow$Request$Data)
##
@DoNotImplement
public interface net.corda.core.flows.Destination
##
@DoNotImplement
@CordaSerializable
public abstract class net.corda.core.flows.DistributionList extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@DoNotImplement
@CordaSerializable
public static final class net.corda.core.flows.DistributionList$ReceiverDistributionList extends net.corda.core.flows.DistributionList
  public <init>(byte[], net.corda.core.node.StatesToRecord)
  @NotNull
  public final byte[] component1()
  @NotNull
  public final net.corda.core.node.StatesToRecord component2()
  @NotNull
  public final net.corda.core.flows.DistributionList$ReceiverDistributionList copy(byte[], net.corda.core.node.StatesToRecord)
  public boolean equals(Object)
  @NotNull
  public final byte[] getOpaqueData()
  @NotNull
  public final net.corda.core.node.StatesToRecord getReceiverStatesToRecord()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public static final class net.corda.core.flows.DistributionList$SenderDistributionList extends net.corda.core.flows.DistributionList
  public <init>(net.corda.core.node.StatesToRecord, java.util.Map)
  @NotNull
  public final net.corda.core.node.StatesToRecord component1()
  @NotNull
  public final java.util.Map component2()
  @NotNull
  public final net.corda.core.flows.DistributionList$SenderDistributionList copy(net.corda.core.node.StatesToRecord, java.util.Map)
  public boolean equals(Object)
  @NotNull
  public final java.util.Map getPeersToStatesToRecord()
  @NotNull
  public final net.corda.core.node.StatesToRecord getSenderStatesToRecord()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public abstract class net.corda.core.flows.DistributionRecord extends java.lang.Object implements net.corda.core.contracts.NamedByHash
  public <init>()
  @NotNull
  public abstract net.corda.core.crypto.SecureHash getPeerPartyId()
  @NotNull
  public abstract java.time.Instant getTimestamp()
  public abstract int getTimestampDiscriminator()
  @NotNull
  public abstract net.corda.core.crypto.SecureHash getTxId()
##
@CordaSerializable
public final class net.corda.core.flows.DistributionRecordKey extends java.lang.Object
  public <init>(net.corda.core.crypto.SecureHash, java.time.Instant, int)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final java.time.Instant component2()
  public final int component3()
  @NotNull
  public final net.corda.core.flows.DistributionRecordKey copy(net.corda.core.crypto.SecureHash, java.time.Instant, int)
  public boolean equals(Object)
  @NotNull
  public final java.time.Instant getTimestamp()
  public final int getTimestampDiscriminator()
  @NotNull
  public final net.corda.core.crypto.SecureHash getTxnId()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.flows.DistributionRecordType extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.flows.DistributionRecordType valueOf(String)
  public static net.corda.core.flows.DistributionRecordType[] values()
##
@CordaSerializable
public final class net.corda.core.flows.DistributionRecords extends java.lang.Object
  public <init>()
  public <init>(java.util.List, java.util.List)
  public <init>(java.util.List, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.List getReceiverRecords()
  @NotNull
  public final java.util.List getSenderRecords()
  public final int getSize()
##
@InitiatingFlow
public final class net.corda.core.flows.FinalityFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.transactions.SignedTransaction)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, java.util.Collection)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, java.util.Collection, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, net.corda.core.node.StatesToRecord)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, net.corda.core.node.StatesToRecord, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, net.corda.core.node.StatesToRecord, net.corda.core.utilities.ProgressTracker, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Collection, net.corda.core.utilities.ProgressTracker, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Set)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Set, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.transactions.SignedTransaction, net.corda.core.flows.FlowSession, net.corda.core.flows.FlowSession...)
  public <init>(net.corda.core.transactions.SignedTransaction, net.corda.core.utilities.ProgressTracker)
  @Suspendable
  @NotNull
  public net.corda.core.transactions.SignedTransaction call()
  @NotNull
  public net.corda.core.utilities.ProgressTracker getProgressTracker()
  @NotNull
  public final net.corda.core.transactions.SignedTransaction getTransaction()
  @NotNull
  public static final net.corda.core.utilities.ProgressTracker tracker()
  @NotNull
  public static final net.corda.core.flows.FinalityFlow$Companion Companion
##
public static final class net.corda.core.flows.FinalityFlow$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker tracker()
##
@CordaSerializable
public static final class net.corda.core.flows.FinalityFlow$Companion$BROADCASTING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.FinalityFlow$Companion$BROADCASTING INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.FinalityFlow$Companion$BROADCASTING_NOTARY_ERROR extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.FinalityFlow$Companion$BROADCASTING_NOTARY_ERROR INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.FinalityFlow$Companion$BROADCASTING_POST_NOTARISATION extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.FinalityFlow$Companion$BROADCASTING_POST_NOTARISATION INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.FinalityFlow$Companion$BROADCASTING_PRE_NOTARISATION extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.FinalityFlow$Companion$BROADCASTING_PRE_NOTARISATION INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.FinalityFlow$Companion$FINALISING_TRANSACTION extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.FinalityFlow$Companion$FINALISING_TRANSACTION INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.FinalityFlow$Companion$NOTARISING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public net.corda.core.utilities.ProgressTracker childProgressTracker()
  @NotNull
  public static final net.corda.core.flows.FinalityFlow$Companion$NOTARISING INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.FinalityFlow$Companion$RECORD_UNNOTARISED extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.FinalityFlow$Companion$RECORD_UNNOTARISED INSTANCE
##
@InitiatingFlow
@StartableByRPC
public final class net.corda.core.flows.FinalityRecoveryFlow extends net.corda.core.flows.FlowLogic
  public <init>()
  public <init>(java.util.Collection, java.util.Collection, net.corda.core.flows.FlowRecoveryQuery, boolean, boolean, java.util.Collection, net.corda.core.utilities.ProgressTracker)
  public <init>(java.util.Collection, java.util.Collection, net.corda.core.flows.FlowRecoveryQuery, boolean, boolean, java.util.Collection, net.corda.core.utilities.ProgressTracker, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(java.util.Collection, boolean)
  public <init>(java.util.Collection, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(java.util.Collection, boolean, boolean)
  public <init>(java.util.Collection, boolean, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.crypto.SecureHash, boolean)
  public <init>(net.corda.core.crypto.SecureHash, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.flows.FlowRecoveryQuery, boolean)
  public <init>(net.corda.core.flows.FlowRecoveryQuery, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.flows.StateMachineRunId, boolean)
  public <init>(net.corda.core.flows.StateMachineRunId, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(boolean, boolean)
  public <init>(boolean, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Suspendable
  @NotNull
  public java.util.Map call()
  @NotNull
  public net.corda.core.utilities.ProgressTracker getProgressTracker()
##
@CordaSerializable
public class net.corda.core.flows.FlowException extends net.corda.core.CordaException implements net.corda.core.flows.IdentifiableException
  public <init>()
  public <init>(String)
  public <init>(String, Throwable)
  public <init>(String, Throwable, Long)
  public <init>(String, Throwable, Long, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(Throwable)
  @Nullable
  public Long getErrorId()
  @Nullable
  public final Long getOriginalErrorId()
  public final void setOriginalErrorId(Long)
##
public interface net.corda.core.flows.FlowExternalAsyncOperation
  @NotNull
  public abstract java.util.concurrent.CompletableFuture execute(String)
##
public interface net.corda.core.flows.FlowExternalOperation
  @NotNull
  public abstract R execute(String)
##
@CordaSerializable
public final class net.corda.core.flows.FlowInfo extends java.lang.Object
  public <init>(int, String)
  public final int component1()
  @NotNull
  public final String component2()
  @NotNull
  public final net.corda.core.flows.FlowInfo copy(int, String)
  public boolean equals(Object)
  @NotNull
  public final String getAppName()
  public final int getFlowVersion()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public abstract class net.corda.core.flows.FlowInitiator extends java.lang.Object implements java.security.Principal
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.context.InvocationContext getInvocationContext()
##
@CordaSerializable
public static final class net.corda.core.flows.FlowInitiator$Peer extends net.corda.core.flows.FlowInitiator
  public <init>(net.corda.core.identity.Party)
  @NotNull
  public final net.corda.core.identity.Party component1()
  @NotNull
  public final net.corda.core.flows.FlowInitiator$Peer copy(net.corda.core.identity.Party)
  public boolean equals(Object)
  @NotNull
  public String getName()
  @NotNull
  public final net.corda.core.identity.Party getParty()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.flows.FlowInitiator$RPC extends net.corda.core.flows.FlowInitiator
  public <init>(String)
  @NotNull
  public final String component1()
  @NotNull
  public final net.corda.core.flows.FlowInitiator$RPC copy(String)
  public boolean equals(Object)
  @NotNull
  public String getName()
  @NotNull
  public final String getUsername()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.flows.FlowInitiator$Scheduled extends net.corda.core.flows.FlowInitiator
  public <init>(net.corda.core.contracts.ScheduledStateRef)
  @NotNull
  public final net.corda.core.contracts.ScheduledStateRef component1()
  @NotNull
  public final net.corda.core.flows.FlowInitiator$Scheduled copy(net.corda.core.contracts.ScheduledStateRef)
  public boolean equals(Object)
  @NotNull
  public String getName()
  @NotNull
  public final net.corda.core.contracts.ScheduledStateRef getScheduledState()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.flows.FlowInitiator$Service extends net.corda.core.flows.FlowInitiator
  public <init>(String)
  @NotNull
  public final String component1()
  @NotNull
  public final net.corda.core.flows.FlowInitiator$Service copy(String)
  public boolean equals(Object)
  @NotNull
  public String getName()
  @NotNull
  public final String getServiceClassName()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.flows.FlowInitiator$Shell extends net.corda.core.flows.FlowInitiator
  @NotNull
  public String getName()
  @NotNull
  public static final net.corda.core.flows.FlowInitiator$Shell INSTANCE
##
public abstract class net.corda.core.flows.FlowLogic extends java.lang.Object
  public <init>()
  @Suspendable
  @NotNull
  public final R await(net.corda.core.flows.FlowExternalAsyncOperation)
  @Suspendable
  @NotNull
  public final R await(net.corda.core.flows.FlowExternalOperation)
  @Suspendable
  public abstract T call()
  public final void checkFlowIsNotKilled()
  public final void checkFlowIsNotKilled(kotlin.jvm.functions.Function0)
  public final void checkFlowPermission(String, java.util.Map)
  @Suspendable
  public final void close(net.corda.core.utilities.NonEmptySet)
  @Suspendable
  @Nullable
  public final net.corda.core.flows.FlowStackSnapshot flowStackSnapshot()
  @Nullable
  public static final net.corda.core.flows.FlowLogic getCurrentTopLevel()
  @Suspendable
  @NotNull
  public final net.corda.core.flows.FlowInfo getFlowInfo(net.corda.core.identity.Party)
  @NotNull
  public final org.slf4j.Logger getLogger()
  @NotNull
  public final net.corda.core.identity.Party getOurIdentity()
  @NotNull
  public final net.corda.core.identity.PartyAndCertificate getOurIdentityAndCert()
  @Nullable
  public net.corda.core.utilities.ProgressTracker getProgressTracker()
  @NotNull
  public final net.corda.core.flows.StateMachineRunId getRunId()
  @NotNull
  public final net.corda.core.node.ServiceHub getServiceHub()
  @Suspendable
  @NotNull
  public final net.corda.core.flows.FlowSession initiateFlow(net.corda.core.flows.Destination)
  @Suspendable
  @NotNull
  public final net.corda.core.flows.FlowSession initiateFlow(net.corda.core.identity.Party)
  public final boolean isKilled()
  @Suspendable
  public final void persistFlowStackSnapshot()
  @Suspendable
  @NotNull
  public net.corda.core.utilities.UntrustworthyData receive(Class, net.corda.core.identity.Party)
  public final net.corda.core.utilities.UntrustworthyData receive(net.corda.core.identity.Party)
  @Suspendable
  @NotNull
  public final java.util.List receiveAll(Class, java.util.List)
  @Suspendable
  @NotNull
  public java.util.List receiveAll(Class, java.util.List, boolean)
  @Suspendable
  @NotNull
  public final java.util.Map receiveAllMap(java.util.Map)
  @Suspendable
  @NotNull
  public java.util.Map receiveAllMap(java.util.Map, boolean)
  public final void recordAuditEvent(String, String, java.util.Map)
  @Suspendable
  public void send(net.corda.core.identity.Party, Object)
  @Suspendable
  public final void sendAll(Object, java.util.Set)
  @Suspendable
  public final void sendAll(Object, java.util.Set, boolean)
  @Suspendable
  public final void sendAllMap(java.util.Map)
  @Suspendable
  public final void sendAllMap(java.util.Map, boolean)
  @Suspendable
  @NotNull
  public net.corda.core.utilities.UntrustworthyData sendAndReceive(Class, net.corda.core.identity.Party, Object)
  public final net.corda.core.utilities.UntrustworthyData sendAndReceive(net.corda.core.identity.Party, Object)
  @Suspendable
  public static final void sleep(java.time.Duration)
  @Suspendable
  public static final void sleep(java.time.Duration, boolean)
  @Suspendable
  public R subFlow(net.corda.core.flows.FlowLogic)
  @Nullable
  public final net.corda.core.messaging.DataFeed track()
  @Nullable
  public final net.corda.core.messaging.DataFeed trackStepsTree()
  @Nullable
  public final net.corda.core.messaging.DataFeed trackStepsTreeIndex()
  @Suspendable
  @NotNull
  public final net.corda.core.transactions.SignedTransaction waitForLedgerCommit(net.corda.core.crypto.SecureHash)
  @Suspendable
  @NotNull
  public final net.corda.core.transactions.SignedTransaction waitForLedgerCommit(net.corda.core.crypto.SecureHash, boolean)
  @Suspendable
  public final void waitForStateConsumption(java.util.Set)
  @NotNull
  public static final net.corda.core.flows.FlowLogic$Companion Companion
##
public static final class net.corda.core.flows.FlowLogic$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final net.corda.core.flows.FlowLogic getCurrentTopLevel()
  @Suspendable
  public final void sleep(java.time.Duration)
  @Suspendable
  public final void sleep(java.time.Duration, boolean)
##
@DoNotImplement
@CordaSerializable
public interface net.corda.core.flows.FlowLogicRef
##
@DoNotImplement
public interface net.corda.core.flows.FlowLogicRefFactory
  @NotNull
  public abstract net.corda.core.flows.FlowLogicRef create(Class, Object...)
  @NotNull
  public abstract net.corda.core.flows.FlowLogicRef create(String, Object...)
  @NotNull
  public abstract net.corda.core.flows.FlowLogic toFlowLogic(net.corda.core.flows.FlowLogicRef)
##
@CordaSerializable
public final class net.corda.core.flows.FlowRecoveryException extends net.corda.core.flows.FlowException
  public <init>(String, Throwable)
  public <init>(String, Throwable, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.crypto.SecureHash, String, Throwable)
  public <init>(net.corda.core.crypto.SecureHash, String, Throwable, int, kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public final class net.corda.core.flows.FlowRecoveryQuery extends java.lang.Object
  public <init>()
  public <init>(net.corda.core.flows.FlowTimeWindow, java.util.List, java.util.List)
  public <init>(net.corda.core.flows.FlowTimeWindow, java.util.List, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final net.corda.core.flows.FlowTimeWindow component1()
  @Nullable
  public final java.util.List component2()
  @Nullable
  public final java.util.List component3()
  @NotNull
  public final net.corda.core.flows.FlowRecoveryQuery copy(net.corda.core.flows.FlowTimeWindow, java.util.List, java.util.List)
  public boolean equals(Object)
  @Nullable
  public final java.util.List getCounterParties()
  @Nullable
  public final java.util.List getInitiatedBy()
  @Nullable
  public final net.corda.core.flows.FlowTimeWindow getTimeframe()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public abstract class net.corda.core.flows.FlowSession extends java.lang.Object
  public <init>()
  @Suspendable
  public abstract void close()
  @NotNull
  public abstract net.corda.core.identity.Party getCounterparty()
  @Suspendable
  @NotNull
  public abstract net.corda.core.flows.FlowInfo getCounterpartyFlowInfo()
  @Suspendable
  @NotNull
  public abstract net.corda.core.flows.FlowInfo getCounterpartyFlowInfo(boolean)
  @NotNull
  public abstract net.corda.core.flows.Destination getDestination()
  @Suspendable
  public final net.corda.core.utilities.UntrustworthyData receive()
  @Suspendable
  @NotNull
  public abstract net.corda.core.utilities.UntrustworthyData receive(Class)
  @Suspendable
  @NotNull
  public abstract net.corda.core.utilities.UntrustworthyData receive(Class, boolean)
  @Suspendable
  public abstract void send(Object)
  @Suspendable
  public abstract void send(Object, boolean)
  @Suspendable
  @NotNull
  public abstract net.corda.core.utilities.UntrustworthyData sendAndReceive(Class, Object)
  @Suspendable
  @NotNull
  public abstract net.corda.core.utilities.UntrustworthyData sendAndReceive(Class, Object, boolean)
  @Suspendable
  public final net.corda.core.utilities.UntrustworthyData sendAndReceive(Object)
##
public final class net.corda.core.flows.FlowStackSnapshot extends java.lang.Object
  public <init>(java.time.Instant, String, java.util.List)
  @NotNull
  public final java.time.Instant component1()
  @NotNull
  public final String component2()
  @NotNull
  public final java.util.List component3()
  @NotNull
  public final net.corda.core.flows.FlowStackSnapshot copy(java.time.Instant, String, java.util.List)
  public boolean equals(Object)
  @NotNull
  public final String getFlowClass()
  @NotNull
  public final java.util.List getStackFrames()
  @NotNull
  public final java.time.Instant getTime()
  public int hashCode()
  @NotNull
  public String toString()
##
public static final class net.corda.core.flows.FlowStackSnapshot$Frame extends java.lang.Object
  public <init>(StackTraceElement, java.util.List)
  @NotNull
  public final StackTraceElement component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final net.corda.core.flows.FlowStackSnapshot$Frame copy(StackTraceElement, java.util.List)
  public boolean equals(Object)
  @NotNull
  public final java.util.List getStackObjects()
  @NotNull
  public final StackTraceElement getStackTraceElement()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.flows.FlowTimeWindow extends java.lang.Object
  public <init>()
  public <init>(java.time.Instant, java.time.Instant)
  public <init>(java.time.Instant, java.time.Instant, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public static final net.corda.core.flows.FlowTimeWindow between(java.time.Instant, java.time.Instant)
  @Nullable
  public final java.time.Instant component1()
  @Nullable
  public final java.time.Instant component2()
  @NotNull
  public final net.corda.core.flows.FlowTimeWindow copy(java.time.Instant, java.time.Instant)
  public boolean equals(Object)
  @NotNull
  public static final net.corda.core.flows.FlowTimeWindow fromOnly(java.time.Instant)
  @Nullable
  public final java.time.Instant getFromTime()
  @Nullable
  public final java.time.Instant getUntilTime()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.flows.FlowTimeWindow untilOnly(java.time.Instant)
  @NotNull
  public static final net.corda.core.flows.FlowTimeWindow$Companion Companion
##
public static final class net.corda.core.flows.FlowTimeWindow$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.flows.FlowTimeWindow between(java.time.Instant, java.time.Instant)
  @NotNull
  public final net.corda.core.flows.FlowTimeWindow fromOnly(java.time.Instant)
  @NotNull
  public final net.corda.core.flows.FlowTimeWindow untilOnly(java.time.Instant)
##
@CordaSerializable
public final class net.corda.core.flows.FlowTransactionInfo extends java.lang.Object
  public <init>(net.corda.core.flows.StateMachineRunId, String, net.corda.core.node.services.TransactionStatus, java.time.Instant, net.corda.core.flows.TransactionMetadata)
  @NotNull
  public final net.corda.core.flows.StateMachineRunId component1()
  @NotNull
  public final String component2()
  @NotNull
  public final net.corda.core.node.services.TransactionStatus component3()
  @NotNull
  public final java.time.Instant component4()
  @Nullable
  public final net.corda.core.flows.TransactionMetadata component5()
  @NotNull
  public final net.corda.core.flows.FlowTransactionInfo copy(net.corda.core.flows.StateMachineRunId, String, net.corda.core.node.services.TransactionStatus, java.time.Instant, net.corda.core.flows.TransactionMetadata)
  public boolean equals(Object)
  @Nullable
  public final net.corda.core.flows.TransactionMetadata getMetadata()
  @NotNull
  public final net.corda.core.flows.StateMachineRunId getStateMachineRunId()
  @NotNull
  public final net.corda.core.node.services.TransactionStatus getStatus()
  @NotNull
  public final java.time.Instant getTimestamp()
  @NotNull
  public final String getTxId()
  public int hashCode()
  public final boolean isInitiator(net.corda.core.identity.CordaX500Name)
  @NotNull
  public String toString()
##
@CordaSerializable
public class net.corda.core.flows.HospitalizeFlowException extends net.corda.core.CordaRuntimeException
  public <init>()
  public <init>(String)
  public <init>(String, Throwable)
  public <init>(Throwable)
##
public interface net.corda.core.flows.IdentifiableException
  @Nullable
  public Long getErrorId()
##
public final class net.corda.core.flows.IllegalFlowLogicException extends java.lang.IllegalArgumentException
  public <init>(Class, String)
  public <init>(String, String)
  @NotNull
  public final String getType()
##
public @interface net.corda.core.flows.InitiatedBy
  public abstract Class value()
##
public @interface net.corda.core.flows.InitiatingFlow
  public abstract int version()
##
@CordaSerializable
public final class net.corda.core.flows.KilledFlowException extends net.corda.core.CordaRuntimeException
  public <init>(net.corda.core.flows.StateMachineRunId)
  public <init>(net.corda.core.flows.StateMachineRunId, String)
  @NotNull
  public final net.corda.core.flows.StateMachineRunId getId()
##
@CordaSerializable
public final class net.corda.core.flows.LedgerRecoveryException extends net.corda.core.flows.FlowException
  public <init>(String)
##
@StartableByRPC
public final class net.corda.core.flows.LedgerRecoveryFlow extends net.corda.core.flows.FlowLogic
  public <init>(java.util.Collection)
  public <init>(java.util.Collection, net.corda.core.flows.RecoveryTimeWindow)
  public <init>(java.util.Collection, net.corda.core.flows.RecoveryTimeWindow, boolean)
  public <init>(java.util.Collection, net.corda.core.flows.RecoveryTimeWindow, boolean, boolean)
  public <init>(java.util.Collection, net.corda.core.flows.RecoveryTimeWindow, boolean, boolean, boolean)
  public <init>(java.util.Collection, net.corda.core.flows.RecoveryTimeWindow, boolean, boolean, boolean, boolean, int)
  public <init>(net.corda.core.flows.LedgerRecoveryParameters, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.flows.LedgerRecoveryParameters, net.corda.core.utilities.ProgressTracker, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.Party)
  public <init>(net.corda.core.identity.Party, net.corda.core.flows.RecoveryTimeWindow)
  public <init>(net.corda.core.identity.Party, net.corda.core.flows.RecoveryTimeWindow, boolean)
  public <init>(net.corda.core.identity.Party, net.corda.core.flows.RecoveryTimeWindow, boolean, boolean)
  public <init>(net.corda.core.identity.Party, net.corda.core.flows.RecoveryTimeWindow, boolean, boolean, boolean)
  public <init>(boolean)
  public <init>(boolean, net.corda.core.flows.RecoveryTimeWindow)
  public <init>(boolean, net.corda.core.flows.RecoveryTimeWindow, boolean)
  public <init>(boolean, net.corda.core.flows.RecoveryTimeWindow, boolean, boolean)
  public <init>(boolean, net.corda.core.flows.RecoveryTimeWindow, boolean, boolean, int)
  public <init>(boolean, net.corda.core.flows.RecoveryTimeWindow, boolean, boolean, int, boolean)
  @Suspendable
  @NotNull
  public net.corda.core.flows.LedgerRecoveryResult call()
  @NotNull
  public net.corda.core.utilities.ProgressTracker getProgressTracker()
##
@CordaSerializable
public final class net.corda.core.flows.LedgerRecoveryParameters extends java.lang.Object
  public <init>(java.util.Collection, net.corda.core.flows.RecoveryTimeWindow, boolean, boolean, boolean, boolean, int, boolean)
  public <init>(java.util.Collection, net.corda.core.flows.RecoveryTimeWindow, boolean, boolean, boolean, boolean, int, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.Collection component1()
  @Nullable
  public final net.corda.core.flows.RecoveryTimeWindow component2()
  public final boolean component3()
  public final boolean component4()
  public final boolean component5()
  public final boolean component6()
  public final int component7()
  public final boolean component8()
  @NotNull
  public final net.corda.core.flows.LedgerRecoveryParameters copy(java.util.Collection, net.corda.core.flows.RecoveryTimeWindow, boolean, boolean, boolean, boolean, int, boolean)
  public boolean equals(Object)
  public final boolean getAlsoFinalize()
  public final boolean getDryRun()
  public final int getRecoveryBatchSize()
  @NotNull
  public final java.util.Collection getRecoveryPeers()
  @Nullable
  public final net.corda.core.flows.RecoveryTimeWindow getTimeWindow()
  public final boolean getUseAllNetworkNodes()
  public final boolean getUseTimeWindowNarrowing()
  public final boolean getVerboseLogging()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.flows.LedgerRecoveryResult extends java.lang.Object
  public <init>(long, long, long, long)
  public final long component1()
  public final long component2()
  public final long component3()
  public final long component4()
  @NotNull
  public final net.corda.core.flows.LedgerRecoveryResult copy(long, long, long, long)
  public boolean equals(Object)
  public final long getTotalErrors()
  public final long getTotalRecoveredInFlightTransactions()
  public final long getTotalRecoveredRecords()
  public final long getTotalRecoveredTransactions()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.flows.MaybeSerializedSignedTransaction extends java.lang.Object implements net.corda.core.contracts.NamedByHash
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.serialization.SerializedBytes, net.corda.core.transactions.SignedTransaction)
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.serialization.SerializedBytes, net.corda.core.transactions.SignedTransaction, boolean)
  @Nullable
  public final net.corda.core.transactions.SignedTransaction get()
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  public final boolean getInFlight()
  @Nullable
  public final net.corda.core.transactions.SignedTransaction getNonSerialised()
  @Nullable
  public final net.corda.core.serialization.SerializedBytes getSerialized()
  public final boolean isNull()
  @NotNull
  public final String payloadContentDescription()
  public final int serializedByteCount()
##
@CordaSerializable
public final class net.corda.core.flows.NotarisationPayload extends java.lang.Object
  public <init>(Object, net.corda.core.flows.NotarisationRequestSignature)
  @NotNull
  public final Object component1()
  @NotNull
  public final net.corda.core.flows.NotarisationRequestSignature component2()
  @NotNull
  public final net.corda.core.flows.NotarisationPayload copy(Object, net.corda.core.flows.NotarisationRequestSignature)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.transactions.CoreTransaction getCoreTransaction()
  @NotNull
  public final net.corda.core.flows.NotarisationRequestSignature getRequestSignature()
  @NotNull
  public final net.corda.core.transactions.SignedTransaction getSignedTransaction()
  @NotNull
  public final Object getTransaction()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.flows.NotarisationRequest extends java.lang.Object
  public <init>(java.util.List, net.corda.core.crypto.SecureHash)
  @NotNull
  public final java.util.List getStatesToConsume()
  @NotNull
  public final net.corda.core.crypto.SecureHash getTransactionId()
  @NotNull
  public static final net.corda.core.flows.NotarisationRequest$Companion Companion
##
public static final class net.corda.core.flows.NotarisationRequest$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public final class net.corda.core.flows.NotarisationRequestSignature extends java.lang.Object
  public <init>(net.corda.core.crypto.DigitalSignature$WithKey, int)
  @NotNull
  public final net.corda.core.crypto.DigitalSignature$WithKey component1()
  public final int component2()
  @NotNull
  public final net.corda.core.flows.NotarisationRequestSignature copy(net.corda.core.crypto.DigitalSignature$WithKey, int)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.DigitalSignature$WithKey getDigitalSignature()
  public final int getPlatformVersion()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.flows.NotarisationResponse extends java.lang.Object
  public <init>(java.util.List)
  @NotNull
  public final java.util.List component1()
  @NotNull
  public final net.corda.core.flows.NotarisationResponse copy(java.util.List)
  public boolean equals(Object)
  @NotNull
  public final java.util.List getSignatures()
  public int hashCode()
  @NotNull
  public String toString()
##
@InitiatingFlow
public final class net.corda.core.flows.NotaryChangeFlow extends net.corda.core.flows.AbstractStateReplacementFlow$Instigator
  public <init>(net.corda.core.contracts.StateAndRef, net.corda.core.identity.Party, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.contracts.StateAndRef, net.corda.core.identity.Party, net.corda.core.utilities.ProgressTracker, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  protected net.corda.core.flows.AbstractStateReplacementFlow$UpgradeTx assembleTx()
##
@CordaSerializable
public abstract class net.corda.core.flows.NotaryError extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public static final net.corda.core.flows.NotaryError$Companion Companion
  public static final int NUM_STATES = 5
##
public static final class net.corda.core.flows.NotaryError$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public static final class net.corda.core.flows.NotaryError$Conflict extends net.corda.core.flows.NotaryError
  public <init>(net.corda.core.crypto.SecureHash, java.util.Map)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final java.util.Map component2()
  @NotNull
  public final net.corda.core.flows.NotaryError$Conflict copy(net.corda.core.crypto.SecureHash, java.util.Map)
  public boolean equals(Object)
  @NotNull
  public final java.util.Map getConsumedStates()
  @NotNull
  public final net.corda.core.crypto.SecureHash getTxId()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.flows.NotaryError$General extends net.corda.core.flows.NotaryError
  public <init>(Throwable)
  @NotNull
  public final Throwable component1()
  @NotNull
  public final net.corda.core.flows.NotaryError$General copy(Throwable)
  public boolean equals(Object)
  @NotNull
  public final Throwable getCause()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.flows.NotaryError$RequestSignatureInvalid extends net.corda.core.flows.NotaryError
  public <init>(Throwable)
  @NotNull
  public final Throwable component1()
  @NotNull
  public final net.corda.core.flows.NotaryError$RequestSignatureInvalid copy(Throwable)
  public boolean equals(Object)
  @NotNull
  public final Throwable getCause()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.flows.NotaryError$TimeWindowInvalid extends net.corda.core.flows.NotaryError
  public <init>(java.time.Instant, net.corda.core.contracts.TimeWindow)
  @NotNull
  public final java.time.Instant component1()
  @NotNull
  public final net.corda.core.contracts.TimeWindow component2()
  @NotNull
  public final net.corda.core.flows.NotaryError$TimeWindowInvalid copy(java.time.Instant, net.corda.core.contracts.TimeWindow)
  public boolean equals(Object)
  @NotNull
  public final java.time.Instant getCurrentTime()
  @NotNull
  public final net.corda.core.contracts.TimeWindow getTxTimeWindow()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.flows.NotaryError$TimeWindowInvalid$Companion Companion
  @NotNull
  public static final net.corda.core.flows.NotaryError$TimeWindowInvalid INSTANCE
##
public static final class net.corda.core.flows.NotaryError$TimeWindowInvalid$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public static final class net.corda.core.flows.NotaryError$TransactionInvalid extends net.corda.core.flows.NotaryError
  public <init>(Throwable)
  @NotNull
  public final Throwable component1()
  @NotNull
  public final net.corda.core.flows.NotaryError$TransactionInvalid copy(Throwable)
  public boolean equals(Object)
  @NotNull
  public final Throwable getCause()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.flows.NotaryError$WrongNotary extends net.corda.core.flows.NotaryError
  @NotNull
  public static final net.corda.core.flows.NotaryError$WrongNotary INSTANCE
##
@CordaSerializable
public final class net.corda.core.flows.NotaryException extends net.corda.core.flows.FlowException
  public <init>(net.corda.core.flows.NotaryError, net.corda.core.crypto.SecureHash)
  public <init>(net.corda.core.flows.NotaryError, net.corda.core.crypto.SecureHash, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.flows.NotaryError getError()
  @Nullable
  public final net.corda.core.crypto.SecureHash getTxId()
##
public final class net.corda.core.flows.NotaryFlow extends java.lang.Object
  public <init>()
##
@DoNotImplement
@InitiatingFlow
public static class net.corda.core.flows.NotaryFlow$Client extends net.corda.core.internal.BackpressureAwareTimedFlow
  public <init>(net.corda.core.transactions.SignedTransaction)
  public <init>(net.corda.core.transactions.SignedTransaction, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.transactions.SignedTransaction, net.corda.core.utilities.ProgressTracker, boolean)
  public <init>(net.corda.core.transactions.SignedTransaction, net.corda.core.utilities.ProgressTracker, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.transactions.SignedTransaction, boolean)
  public <init>(net.corda.core.transactions.SignedTransaction, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Suspendable
  @NotNull
  public java.util.List call()
  @NotNull
  protected final net.corda.core.identity.Party checkTransaction()
  @NotNull
  public net.corda.core.utilities.ProgressTracker getProgressTracker()
  @Suspendable
  @NotNull
  protected final net.corda.core.utilities.UntrustworthyData notarise(net.corda.core.identity.Party)
  @NotNull
  protected final java.util.List validateResponse(net.corda.core.utilities.UntrustworthyData, net.corda.core.identity.Party)
  @NotNull
  public static final net.corda.core.flows.NotaryFlow$Client$Companion Companion
##
public static final class net.corda.core.flows.NotaryFlow$Client$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker tracker()
##
@CordaSerializable
public static final class net.corda.core.flows.NotaryFlow$Client$Companion$REQUESTING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.NotaryFlow$Client$Companion$REQUESTING INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.NotaryFlow$Client$Companion$VALIDATING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.NotaryFlow$Client$Companion$VALIDATING INSTANCE
##
public final class net.corda.core.flows.NotarySigCheck extends java.lang.Object
  public final boolean needsNotarySignature(net.corda.core.transactions.SignedTransaction)
  @NotNull
  public static final net.corda.core.flows.NotarySigCheck INSTANCE
##
public final class net.corda.core.flows.ReceiveFinalityFlow extends net.corda.core.flows.FlowLogic
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.flows.FlowSession)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.crypto.SecureHash)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.crypto.SecureHash, net.corda.core.node.StatesToRecord)
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.crypto.SecureHash, net.corda.core.node.StatesToRecord, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.crypto.SecureHash, net.corda.core.node.StatesToRecord, Boolean)
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.crypto.SecureHash, net.corda.core.node.StatesToRecord, Boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Suspendable
  @NotNull
  public net.corda.core.transactions.SignedTransaction call()
##
public final class net.corda.core.flows.ReceiveStateAndRefFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.flows.FlowSession)
  @Suspendable
  @NotNull
  public java.util.List call()
##
public class net.corda.core.flows.ReceiveTransactionFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.flows.FlowSession)
  public <init>(net.corda.core.flows.FlowSession, boolean)
  public <init>(net.corda.core.flows.FlowSession, boolean, net.corda.core.node.StatesToRecord)
  public <init>(net.corda.core.flows.FlowSession, boolean, net.corda.core.node.StatesToRecord, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.flows.FlowSession, boolean, net.corda.core.node.StatesToRecord, Boolean)
  public <init>(net.corda.core.flows.FlowSession, boolean, net.corda.core.node.StatesToRecord, Boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Suspendable
  @NotNull
  public net.corda.core.transactions.SignedTransaction call()
  @Suspendable
  protected void checkBeforeRecording(net.corda.core.transactions.SignedTransaction)
  @NotNull
  public net.corda.core.transactions.SignedTransaction resolvePayload(Object)
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.flows.ReceiverDistributionRecord extends net.corda.core.flows.DistributionRecord
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SecureHash, java.time.Instant, int, net.corda.core.utilities.OpaqueBytes, net.corda.core.node.StatesToRecord)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final net.corda.core.crypto.SecureHash component2()
  @NotNull
  public final java.time.Instant component3()
  public final int component4()
  @NotNull
  public final net.corda.core.utilities.OpaqueBytes component5()
  @NotNull
  public final net.corda.core.node.StatesToRecord component6()
  @NotNull
  public final net.corda.core.flows.ReceiverDistributionRecord copy(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SecureHash, java.time.Instant, int, net.corda.core.utilities.OpaqueBytes, net.corda.core.node.StatesToRecord)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.utilities.OpaqueBytes getEncryptedDistributionList()
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public net.corda.core.crypto.SecureHash getPeerPartyId()
  @NotNull
  public final net.corda.core.node.StatesToRecord getReceiverStatesToRecord()
  @NotNull
  public java.time.Instant getTimestamp()
  public int getTimestampDiscriminator()
  @NotNull
  public net.corda.core.crypto.SecureHash getTxId()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.flows.RecoveryTimeWindow extends java.lang.Object
  public <init>(java.time.Instant, java.time.Instant)
  public <init>(java.time.Instant, java.time.Instant, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public static final net.corda.core.flows.RecoveryTimeWindow between(java.time.Instant, java.time.Instant)
  @NotNull
  public final java.time.Instant component1()
  @NotNull
  public final java.time.Instant component2()
  @NotNull
  public final net.corda.core.flows.RecoveryTimeWindow copy(java.time.Instant, java.time.Instant)
  public boolean equals(Object)
  @NotNull
  public static final net.corda.core.flows.RecoveryTimeWindow fromOnly(java.time.Instant)
  @NotNull
  public final java.time.Instant getFromTime()
  @NotNull
  public final java.time.Instant getUntilTime()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.flows.RecoveryTimeWindow untilOnly(java.time.Instant)
  @NotNull
  public static final net.corda.core.flows.RecoveryTimeWindow$Companion Companion
##
public static final class net.corda.core.flows.RecoveryTimeWindow$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.flows.RecoveryTimeWindow between(java.time.Instant, java.time.Instant)
  @NotNull
  public final net.corda.core.flows.RecoveryTimeWindow fromOnly(java.time.Instant)
  @NotNull
  public final net.corda.core.flows.RecoveryTimeWindow untilOnly(java.time.Instant)
##
@CordaSerializable
public final class net.corda.core.flows.ResultSerializationException extends net.corda.core.CordaRuntimeException
  public <init>(net.corda.core.serialization.internal.MissingSerializerException)
##
public @interface net.corda.core.flows.SchedulableFlow
##
public class net.corda.core.flows.SendStateAndRefFlow extends net.corda.core.flows.DataVendingFlow
  public <init>(net.corda.core.flows.FlowSession, java.util.List)
##
public class net.corda.core.flows.SendTransactionFlow extends net.corda.core.flows.DataVendingFlow
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.transactions.SignedTransaction)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Set, java.util.Set, net.corda.core.node.StatesToRecord, boolean)
  public <init>(net.corda.core.transactions.SignedTransaction, java.util.Set, java.util.Set, net.corda.core.node.StatesToRecord, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.Set getObserverSessions()
  @NotNull
  public final java.util.Set getParticipantSessions()
  @NotNull
  public final net.corda.core.node.StatesToRecord getSenderStatesToRecord()
  @NotNull
  public final net.corda.core.transactions.SignedTransaction getStx()
  @NotNull
  public static final net.corda.core.flows.SendTransactionFlow$Companion Companion
##
public static final class net.corda.core.flows.SendTransactionFlow$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.identity.CordaX500Name getDUMMY_PARTICIPANT_NAME()
  @Nullable
  public final net.corda.core.flows.TransactionMetadata makeMetaData(net.corda.core.transactions.SignedTransaction, boolean, net.corda.core.node.StatesToRecord, java.util.Set, java.util.Set)
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.flows.SenderDistributionRecord extends net.corda.core.flows.DistributionRecord
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SecureHash, java.time.Instant, int, net.corda.core.node.StatesToRecord, net.corda.core.node.StatesToRecord)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final net.corda.core.crypto.SecureHash component2()
  @NotNull
  public final java.time.Instant component3()
  public final int component4()
  @NotNull
  public final net.corda.core.node.StatesToRecord component5()
  @NotNull
  public final net.corda.core.node.StatesToRecord component6()
  @NotNull
  public final net.corda.core.flows.SenderDistributionRecord copy(net.corda.core.crypto.SecureHash, net.corda.core.crypto.SecureHash, java.time.Instant, int, net.corda.core.node.StatesToRecord, net.corda.core.node.StatesToRecord)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public net.corda.core.crypto.SecureHash getPeerPartyId()
  @NotNull
  public final net.corda.core.node.StatesToRecord getReceiverStatesToRecord()
  @NotNull
  public final net.corda.core.node.StatesToRecord getSenderStatesToRecord()
  @NotNull
  public java.time.Instant getTimestamp()
  public int getTimestampDiscriminator()
  @NotNull
  public net.corda.core.crypto.SecureHash getTxId()
  public int hashCode()
  @NotNull
  public String toString()
##
public abstract class net.corda.core.flows.SignTransactionFlow extends net.corda.core.flows.FlowLogic
  public <init>(net.corda.core.flows.FlowSession)
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.utilities.ProgressTracker)
  public <init>(net.corda.core.flows.FlowSession, net.corda.core.utilities.ProgressTracker, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Suspendable
  @NotNull
  public net.corda.core.transactions.SignedTransaction call()
  @Suspendable
  protected abstract void checkTransaction(net.corda.core.transactions.SignedTransaction)
  @NotNull
  public final net.corda.core.flows.FlowSession getOtherSideSession()
  @NotNull
  public net.corda.core.utilities.ProgressTracker getProgressTracker()
  @NotNull
  public static final net.corda.core.utilities.ProgressTracker tracker()
  @NotNull
  public static final net.corda.core.flows.SignTransactionFlow$Companion Companion
##
public static final class net.corda.core.flows.SignTransactionFlow$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker tracker()
##
@CordaSerializable
public static final class net.corda.core.flows.SignTransactionFlow$Companion$RECEIVING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.SignTransactionFlow$Companion$RECEIVING INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.SignTransactionFlow$Companion$SIGNING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.SignTransactionFlow$Companion$SIGNING INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.SignTransactionFlow$Companion$VERIFYING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.SignTransactionFlow$Companion$VERIFYING INSTANCE
##
@CordaSerializable
public final class net.corda.core.flows.SignedTransactionWithDistributionList extends java.lang.Object
  public <init>(net.corda.core.transactions.SignedTransaction, byte[], boolean)
  @NotNull
  public final net.corda.core.transactions.SignedTransaction component1()
  @NotNull
  public final byte[] component2()
  public final boolean component3()
  @NotNull
  public final net.corda.core.flows.SignedTransactionWithDistributionList copy(net.corda.core.transactions.SignedTransaction, byte[], boolean)
  public boolean equals(Object)
  @NotNull
  public final byte[] getDistributionList()
  @NotNull
  public final net.corda.core.transactions.SignedTransaction getStx()
  public int hashCode()
  public final boolean isFinality()
  @NotNull
  public String toString()
##
public final class net.corda.core.flows.StackFrameDataToken extends java.lang.Object
  public <init>(String)
  @NotNull
  public final String component1()
  @NotNull
  public final net.corda.core.flows.StackFrameDataToken copy(String)
  public boolean equals(Object)
  @NotNull
  public final String getClassName()
  public int hashCode()
  @NotNull
  public String toString()
##
public @interface net.corda.core.flows.StartableByRPC
##
public @interface net.corda.core.flows.StartableByService
##
@CordaSerializable
public final class net.corda.core.flows.StateConsumptionDetails extends java.lang.Object
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.crypto.SecureHash)
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.flows.StateConsumptionDetails$ConsumedStateType)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final net.corda.core.flows.StateConsumptionDetails$ConsumedStateType component2()
  @NotNull
  public final net.corda.core.flows.StateConsumptionDetails copy(net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.flows.StateConsumptionDetails copy(net.corda.core.crypto.SecureHash, net.corda.core.flows.StateConsumptionDetails$ConsumedStateType)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.SecureHash getHashOfTransactionId()
  @NotNull
  public final net.corda.core.flows.StateConsumptionDetails$ConsumedStateType getType()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.flows.StateConsumptionDetails$ConsumedStateType extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.flows.StateConsumptionDetails$ConsumedStateType valueOf(String)
  public static net.corda.core.flows.StateConsumptionDetails$ConsumedStateType[] values()
##
@CordaSerializable
public final class net.corda.core.flows.StateMachineRunId extends java.lang.Object
  public <init>(java.util.UUID)
  @NotNull
  public final java.util.UUID component1()
  @NotNull
  public final net.corda.core.flows.StateMachineRunId copy(java.util.UUID)
  public boolean equals(Object)
  @NotNull
  public final java.util.UUID getUuid()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.flows.StateMachineRunId$Companion Companion
##
public static final class net.corda.core.flows.StateMachineRunId$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.flows.StateMachineRunId createRandom()
##
@CordaSerializable
public class net.corda.core.flows.StateReplacementException extends net.corda.core.flows.FlowException
  public <init>()
  public <init>(String)
  public <init>(String, Throwable)
  public <init>(String, Throwable, int, kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public final class net.corda.core.flows.TransactionMetadata extends java.lang.Object
  public <init>(net.corda.core.identity.CordaX500Name, net.corda.core.flows.DistributionList)
  @NotNull
  public final net.corda.core.identity.CordaX500Name component1()
  @NotNull
  public final net.corda.core.flows.DistributionList component2()
  @NotNull
  public final net.corda.core.flows.TransactionMetadata copy(net.corda.core.identity.CordaX500Name, net.corda.core.flows.DistributionList)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.flows.DistributionList getDistributionList()
  @NotNull
  public final net.corda.core.identity.CordaX500Name getInitiator()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.flows.UnexpectedFlowEndException extends net.corda.core.CordaRuntimeException implements net.corda.core.flows.IdentifiableException
  public <init>(String)
  public <init>(String, Throwable)
  public <init>(String, Throwable, Long)
  @Nullable
  public Long getErrorId()
  @Nullable
  public final Long getOriginalErrorId()
##
@CordaSerializable
public final class net.corda.core.flows.WaitTimeUpdate extends java.lang.Object
  public <init>(java.time.Duration)
  @NotNull
  public final java.time.Duration component1()
  @NotNull
  public final net.corda.core.flows.WaitTimeUpdate copy(java.time.Duration)
  public boolean equals(Object)
  @NotNull
  public final java.time.Duration getWaitTime()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.flows.WithReferencedStatesFlow extends net.corda.core.flows.FlowLogic
  public <init>(kotlin.jvm.functions.Function0)
  public <init>(net.corda.core.utilities.ProgressTracker, kotlin.jvm.functions.Function0)
  public <init>(net.corda.core.utilities.ProgressTracker, kotlin.jvm.functions.Function0, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Suspendable
  @NotNull
  public T call()
  @NotNull
  public net.corda.core.utilities.ProgressTracker getProgressTracker()
  @NotNull
  public static final net.corda.core.utilities.ProgressTracker tracker()
  @NotNull
  public static final net.corda.core.flows.WithReferencedStatesFlow$Companion Companion
##
public static final class net.corda.core.flows.WithReferencedStatesFlow$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker tracker()
##
@CordaSerializable
public static final class net.corda.core.flows.WithReferencedStatesFlow$Companion$ATTEMPT extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.WithReferencedStatesFlow$Companion$ATTEMPT INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.WithReferencedStatesFlow$Companion$RETRYING extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.WithReferencedStatesFlow$Companion$RETRYING INSTANCE
##
@CordaSerializable
public static final class net.corda.core.flows.WithReferencedStatesFlow$Companion$SUCCESS extends net.corda.core.utilities.ProgressTracker$Step
  @NotNull
  public static final net.corda.core.flows.WithReferencedStatesFlow$Companion$SUCCESS INSTANCE
##
@CordaSerializable
public final class net.corda.core.flows.WrappedFlowExternalAsyncOperation extends java.lang.Object implements net.corda.core.internal.FlowAsyncOperation
  public <init>(net.corda.core.flows.FlowExternalAsyncOperation)
  @NotNull
  public net.corda.core.concurrent.CordaFuture execute(String)
  @NotNull
  public final net.corda.core.flows.FlowExternalAsyncOperation getOperation()
##
@CordaSerializable
public final class net.corda.core.flows.WrappedFlowExternalOperation extends java.lang.Object implements net.corda.core.internal.FlowAsyncOperation
  public <init>(net.corda.core.internal.ServiceHubCoreInternal, net.corda.core.flows.FlowExternalOperation)
  @NotNull
  public net.corda.core.concurrent.CordaFuture execute(String)
  @NotNull
  public final net.corda.core.flows.FlowExternalOperation getOperation()
  @NotNull
  public final net.corda.core.internal.ServiceHubCoreInternal getServiceHub()
##
@DoNotImplement
@CordaSerializable
public abstract class net.corda.core.identity.AbstractParty extends java.lang.Object implements net.corda.core.flows.Destination
  public <init>(java.security.PublicKey)
  public boolean equals(Object)
  @NotNull
  public final java.security.PublicKey getOwningKey()
  public int hashCode()
  @Nullable
  public abstract net.corda.core.identity.CordaX500Name nameOrNull()
  @NotNull
  public abstract net.corda.core.contracts.PartyAndReference ref(net.corda.core.utilities.OpaqueBytes)
  @NotNull
  public final net.corda.core.contracts.PartyAndReference ref(byte...)
  @NotNull
  public static final net.corda.core.identity.AbstractParty$Companion Companion
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.identity.AnonymousParty extends net.corda.core.identity.AbstractParty implements net.corda.core.flows.Destination
  public <init>(java.security.PublicKey)
  @Nullable
  public net.corda.core.identity.CordaX500Name nameOrNull()
  @NotNull
  public net.corda.core.contracts.PartyAndReference ref(net.corda.core.utilities.OpaqueBytes)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.identity.AnonymousParty$Companion Companion
##
public static final class net.corda.core.identity.AnonymousParty$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.identity.AnonymousParty create(java.security.PublicKey)
##
@CordaSerializable
public final class net.corda.core.identity.CordaX500Name extends java.lang.Object
  public <init>(String, String, String)
  public <init>(String, String, String, String)
  public <init>(String, String, String, String, String, String)
  @NotNull
  public static final net.corda.core.identity.CordaX500Name build(javax.security.auth.x500.X500Principal)
  @Nullable
  public final String component1()
  @Nullable
  public final String component2()
  @NotNull
  public final String component3()
  @NotNull
  public final String component4()
  @Nullable
  public final String component5()
  @NotNull
  public final String component6()
  @NotNull
  public final net.corda.core.identity.CordaX500Name copy(String, String, String, String, String, String)
  public boolean equals(Object)
  @Nullable
  public final String getCommonName()
  @NotNull
  public final String getCountry()
  @NotNull
  public final String getLocality()
  @NotNull
  public final String getOrganisation()
  @Nullable
  public final String getOrganisationUnit()
  @Nullable
  public final String getState()
  @NotNull
  public final javax.security.auth.x500.X500Principal getX500Principal()
  public int hashCode()
  @NotNull
  public static final net.corda.core.identity.CordaX500Name parse(String)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.identity.CordaX500Name$Companion Companion
  public static final int LENGTH_COUNTRY = 2
  public static final int MAX_LENGTH_COMMON_NAME = 64
  public static final int MAX_LENGTH_LOCALITY = 64
  public static final int MAX_LENGTH_ORGANISATION = 128
  public static final int MAX_LENGTH_ORGANISATION_UNIT = 64
  public static final int MAX_LENGTH_STATE = 64
##
public static final class net.corda.core.identity.CordaX500Name$Companion extends java.lang.Object implements net.corda.core.internal.utilities.Internable
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.identity.CordaX500Name build(javax.security.auth.x500.X500Principal)
  @NotNull
  public net.corda.core.internal.utilities.PrivateInterner getInterner()
  @NotNull
  public final net.corda.core.identity.CordaX500Name parse(String)
##
public final class net.corda.core.identity.IdentityUtils extends java.lang.Object
  @NotNull
  public static final java.util.Map excludeHostNode(net.corda.core.node.ServiceHub, java.util.Map)
  @NotNull
  public static final java.util.Map excludeNotary(java.util.Map, net.corda.core.transactions.SignedTransaction)
  @NotNull
  public static final java.util.Map groupAbstractPartyByWellKnownParty(net.corda.core.node.ServiceHub, java.util.Collection)
  @NotNull
  public static final java.util.Map groupAbstractPartyByWellKnownParty(net.corda.core.node.ServiceHub, java.util.Collection, boolean)
  @NotNull
  public static final java.util.Map groupPublicKeysByWellKnownParty(net.corda.core.node.ServiceHub, java.util.Collection)
  @NotNull
  public static final java.util.Map groupPublicKeysByWellKnownParty(net.corda.core.node.ServiceHub, java.util.Collection, boolean)
  public static final boolean x500Matches(String, boolean, net.corda.core.identity.CordaX500Name)
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.identity.Party extends net.corda.core.identity.AbstractParty implements net.corda.core.flows.Destination
  public <init>(java.security.cert.X509Certificate)
  public <init>(net.corda.core.identity.CordaX500Name, java.security.PublicKey)
  @NotNull
  public final net.corda.core.identity.AnonymousParty anonymise()
  @NotNull
  public final String description()
  @NotNull
  public final net.corda.core.identity.CordaX500Name getName()
  @NotNull
  public net.corda.core.identity.CordaX500Name nameOrNull()
  @NotNull
  public net.corda.core.contracts.PartyAndReference ref(net.corda.core.utilities.OpaqueBytes)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.identity.Party$Companion Companion
##
public static final class net.corda.core.identity.Party$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.identity.Party create(java.security.cert.X509Certificate)
  @NotNull
  public final net.corda.core.identity.Party create(net.corda.core.identity.CordaX500Name, java.security.PublicKey)
##
@CordaSerializable
public final class net.corda.core.identity.PartyAndCertificate extends java.lang.Object
  public <init>(java.security.cert.CertPath)
  @NotNull
  public final net.corda.core.identity.Party component1()
  @NotNull
  public final java.security.cert.X509Certificate component2()
  public boolean equals(Object)
  @NotNull
  public final java.security.cert.CertPath getCertPath()
  @NotNull
  public final java.security.cert.X509Certificate getCertificate()
  @NotNull
  public final net.corda.core.identity.CordaX500Name getName()
  @NotNull
  public final java.security.PublicKey getOwningKey()
  @NotNull
  public final net.corda.core.identity.Party getParty()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public final java.security.cert.PKIXCertPathValidatorResult verify(java.security.cert.TrustAnchor)
  @NotNull
  public final java.security.cert.PKIXCertPathValidatorResult verify(java.util.Set)
##
@CordaSerializable
public interface net.corda.core.messaging.AllPossibleRecipients extends net.corda.core.messaging.MessageRecipients
##
public final class net.corda.core.messaging.ClientRpcSslOptions extends java.lang.Object
  public <init>(java.nio.file.Path, String, String)
  public <init>(java.nio.file.Path, String, String, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.nio.file.Path component1()
  @NotNull
  public final String component2()
  @NotNull
  public final String component3()
  @NotNull
  public final net.corda.core.messaging.ClientRpcSslOptions copy(java.nio.file.Path, String, String)
  public boolean equals(Object)
  @NotNull
  public final String getTrustStorePassword()
  @NotNull
  public final java.nio.file.Path getTrustStorePath()
  @NotNull
  public final String getTrustStoreProvider()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public interface net.corda.core.messaging.CordaRPCOps extends net.corda.core.messaging.RPCOps
  public abstract void acceptNewNetworkParameters(net.corda.core.crypto.SecureHash)
  public abstract void addVaultTransactionNote(net.corda.core.crypto.SecureHash, String)
  public abstract boolean attachmentExists(net.corda.core.crypto.SecureHash)
  public abstract void clearNetworkMapCache()
  @NotNull
  public abstract java.time.Instant currentNodeTime()
  @NotNull
  public abstract java.util.Map finishedFlowsWithClientIds()
  @NotNull
  public abstract java.util.Map finishedFlowsWithClientIdsAsAdmin()
  @NotNull
  public abstract net.corda.core.node.NetworkParameters getNetworkParameters()
  @NotNull
  public abstract Iterable getVaultTransactionNotes(net.corda.core.crypto.SecureHash)
  @RPCReturnsObservables
  @NotNull
  public abstract net.corda.core.messaging.DataFeed internalVerifiedTransactionsFeed()
  @NotNull
  public abstract java.util.List internalVerifiedTransactionsSnapshot()
  public abstract boolean isFlowsDrainingModeEnabled()
  public abstract boolean isWaitingForShutdown()
  public abstract boolean killFlow(net.corda.core.flows.StateMachineRunId)
  @RPCReturnsObservables
  @NotNull
  public abstract net.corda.core.messaging.DataFeed networkMapFeed()
  @NotNull
  public abstract java.util.List networkMapSnapshot()
  @RPCReturnsObservables
  @NotNull
  public abstract net.corda.core.messaging.DataFeed networkParametersFeed()
  @NotNull
  public abstract net.corda.core.node.NodeDiagnosticInfo nodeDiagnosticInfo()
  @NotNull
  public abstract net.corda.core.node.NodeInfo nodeInfo()
  @Nullable
  public abstract net.corda.core.node.NodeInfo nodeInfoFromParty(net.corda.core.identity.AbstractParty)
  @NotNull
  public abstract java.util.List notaryIdentities()
  @Nullable
  public abstract net.corda.core.identity.Party notaryPartyFromX500Name(net.corda.core.identity.CordaX500Name)
  @NotNull
  public abstract java.io.InputStream openAttachment(net.corda.core.crypto.SecureHash)
  @NotNull
  public abstract java.util.Set partiesFromName(String, boolean)
  @Nullable
  public abstract net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @NotNull
  public abstract java.util.List queryAttachments(net.corda.core.node.services.vault.AttachmentQueryCriteria, net.corda.core.node.services.vault.AttachmentSort)
  @RPCReturnsObservables
  @Nullable
  public abstract net.corda.core.messaging.FlowHandleWithClientId reattachFlowWithClientId(String)
  public abstract void refreshNetworkMapCache()
  @NotNull
  public abstract java.util.List registeredFlows()
  public abstract boolean removeClientId(String)
  public abstract boolean removeClientIdAsAdmin(String)
  public abstract void setFlowsDrainingModeEnabled(boolean)
  public abstract void shutdown()
  @RPCReturnsObservables
  @NotNull
  public abstract net.corda.core.messaging.FlowHandle startFlowDynamic(Class, Object...)
  @RPCReturnsObservables
  @NotNull
  public abstract net.corda.core.messaging.FlowHandleWithClientId startFlowDynamicWithClientId(String, Class, Object...)
  @RPCReturnsObservables
  @NotNull
  public abstract net.corda.core.messaging.FlowProgressHandle startTrackedFlowDynamic(Class, Object...)
  @RPCReturnsObservables
  @NotNull
  public abstract net.corda.core.messaging.DataFeed stateMachineRecordedTransactionMappingFeed()
  @NotNull
  public abstract java.util.List stateMachineRecordedTransactionMappingSnapshot()
  @RPCReturnsObservables
  @NotNull
  public abstract net.corda.core.messaging.DataFeed stateMachinesFeed()
  @NotNull
  public abstract java.util.List stateMachinesSnapshot()
  public abstract void terminate(boolean)
  @NotNull
  public abstract net.corda.core.crypto.SecureHash uploadAttachment(java.io.InputStream)
  @NotNull
  public abstract net.corda.core.crypto.SecureHash uploadAttachmentWithMetadata(java.io.InputStream, String, String)
  @NotNull
  public abstract net.corda.core.node.services.Vault$Page vaultQuery(Class)
  @RPCReturnsObservables
  @NotNull
  public abstract net.corda.core.node.services.Vault$Page vaultQueryBy(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort, Class)
  @NotNull
  public abstract net.corda.core.node.services.Vault$Page vaultQueryByCriteria(net.corda.core.node.services.vault.QueryCriteria, Class)
  @NotNull
  public abstract net.corda.core.node.services.Vault$Page vaultQueryByWithPagingSpec(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification)
  @NotNull
  public abstract net.corda.core.node.services.Vault$Page vaultQueryByWithSorting(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.Sort)
  @NotNull
  public abstract net.corda.core.messaging.DataFeed vaultTrack(Class)
  @RPCReturnsObservables
  @NotNull
  public abstract net.corda.core.messaging.DataFeed vaultTrackBy(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort, Class)
  @NotNull
  public abstract net.corda.core.messaging.DataFeed vaultTrackByCriteria(Class, net.corda.core.node.services.vault.QueryCriteria)
  @NotNull
  public abstract net.corda.core.messaging.DataFeed vaultTrackByWithPagingSpec(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification)
  @NotNull
  public abstract net.corda.core.messaging.DataFeed vaultTrackByWithSorting(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.Sort)
  @RPCReturnsObservables
  @NotNull
  public abstract net.corda.core.concurrent.CordaFuture waitUntilNetworkReady()
  @Nullable
  public abstract net.corda.core.identity.Party wellKnownPartyFromAnonymous(net.corda.core.identity.AbstractParty)
  @Nullable
  public abstract net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
##
public final class net.corda.core.messaging.CordaRPCOpsKt extends java.lang.Object
  @NotNull
  public static final net.corda.core.messaging.DataFeed pendingFlowsCount(net.corda.core.messaging.CordaRPCOps)
  public static final net.corda.core.messaging.FlowHandle startFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function0)
  public static final net.corda.core.messaging.FlowHandle startFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function1, A)
  public static final net.corda.core.messaging.FlowHandle startFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function2, A, B)
  public static final net.corda.core.messaging.FlowHandle startFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function3, A, B, C)
  public static final net.corda.core.messaging.FlowHandle startFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function4, A, B, C, D)
  public static final net.corda.core.messaging.FlowHandle startFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function5, A, B, C, D, E)
  public static final net.corda.core.messaging.FlowHandle startFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function6, A, B, C, D, E, F)
  public static final net.corda.core.messaging.FlowHandleWithClientId startFlowWithClientId(net.corda.core.messaging.CordaRPCOps, String, kotlin.jvm.functions.Function0)
  public static final net.corda.core.messaging.FlowHandleWithClientId startFlowWithClientId(net.corda.core.messaging.CordaRPCOps, String, kotlin.jvm.functions.Function1, A)
  public static final net.corda.core.messaging.FlowHandleWithClientId startFlowWithClientId(net.corda.core.messaging.CordaRPCOps, String, kotlin.jvm.functions.Function2, A, B)
  public static final net.corda.core.messaging.FlowHandleWithClientId startFlowWithClientId(net.corda.core.messaging.CordaRPCOps, String, kotlin.jvm.functions.Function3, A, B, C)
  public static final net.corda.core.messaging.FlowHandleWithClientId startFlowWithClientId(net.corda.core.messaging.CordaRPCOps, String, kotlin.jvm.functions.Function4, A, B, C, D)
  public static final net.corda.core.messaging.FlowHandleWithClientId startFlowWithClientId(net.corda.core.messaging.CordaRPCOps, String, kotlin.jvm.functions.Function5, A, B, C, D, E)
  public static final net.corda.core.messaging.FlowHandleWithClientId startFlowWithClientId(net.corda.core.messaging.CordaRPCOps, String, kotlin.jvm.functions.Function6, A, B, C, D, E, F)
  public static final net.corda.core.messaging.FlowProgressHandle startTrackedFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function0)
  public static final net.corda.core.messaging.FlowProgressHandle startTrackedFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function1, A)
  public static final net.corda.core.messaging.FlowProgressHandle startTrackedFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function2, A, B)
  public static final net.corda.core.messaging.FlowProgressHandle startTrackedFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function3, A, B, C)
  public static final net.corda.core.messaging.FlowProgressHandle startTrackedFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function4, A, B, C, D)
  public static final net.corda.core.messaging.FlowProgressHandle startTrackedFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function5, A, B, C, D, E)
  public static final net.corda.core.messaging.FlowProgressHandle startTrackedFlow(net.corda.core.messaging.CordaRPCOps, kotlin.jvm.functions.Function6, A, B, C, D, E, F)
  public static final net.corda.core.node.services.Vault$Page vaultQueryBy(net.corda.core.messaging.CordaRPCOps, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort)
  public static final net.corda.core.messaging.DataFeed vaultTrackBy(net.corda.core.messaging.CordaRPCOps, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort)
##
@CordaSerializable
public final class net.corda.core.messaging.DataFeed extends java.lang.Object
  public <init>(A, rx.Observable)
  public final A component1()
  @NotNull
  public final rx.Observable component2()
  @NotNull
  public final net.corda.core.messaging.DataFeed copy(A, rx.Observable)
  public boolean equals(Object)
  public final A getSnapshot()
  @NotNull
  public final rx.Observable getUpdates()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public interface net.corda.core.messaging.FlowHandle extends java.lang.AutoCloseable
  public abstract void close()
  @NotNull
  public abstract net.corda.core.flows.StateMachineRunId getId()
  @NotNull
  public abstract net.corda.core.concurrent.CordaFuture getReturnValue()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.messaging.FlowHandleImpl extends java.lang.Object implements net.corda.core.messaging.FlowHandle
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture)
  public void close()
  @NotNull
  public final net.corda.core.flows.StateMachineRunId component1()
  @NotNull
  public final net.corda.core.concurrent.CordaFuture component2()
  @NotNull
  public final net.corda.core.messaging.FlowHandleImpl copy(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.flows.StateMachineRunId getId()
  @NotNull
  public net.corda.core.concurrent.CordaFuture getReturnValue()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public interface net.corda.core.messaging.FlowHandleWithClientId extends net.corda.core.messaging.FlowHandle
  @NotNull
  public abstract String getClientId()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.messaging.FlowHandleWithClientIdImpl extends java.lang.Object implements net.corda.core.messaging.FlowHandleWithClientId
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture, String)
  public void close()
  @NotNull
  public final net.corda.core.flows.StateMachineRunId component1()
  @NotNull
  public final net.corda.core.concurrent.CordaFuture component2()
  @NotNull
  public final String component3()
  @NotNull
  public final net.corda.core.messaging.FlowHandleWithClientIdImpl copy(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture, String)
  public boolean equals(Object)
  @NotNull
  public String getClientId()
  @NotNull
  public net.corda.core.flows.StateMachineRunId getId()
  @NotNull
  public net.corda.core.concurrent.CordaFuture getReturnValue()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public interface net.corda.core.messaging.FlowProgressHandle extends net.corda.core.messaging.FlowHandle
  public abstract void close()
  @NotNull
  public abstract rx.Observable getProgress()
  @Nullable
  public abstract net.corda.core.messaging.DataFeed getStepsTreeFeed()
  @Nullable
  public abstract net.corda.core.messaging.DataFeed getStepsTreeIndexFeed()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.messaging.FlowProgressHandleImpl extends java.lang.Object implements net.corda.core.messaging.FlowProgressHandle
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture, rx.Observable)
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture, rx.Observable, net.corda.core.messaging.DataFeed)
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture, rx.Observable, net.corda.core.messaging.DataFeed, net.corda.core.messaging.DataFeed)
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture, rx.Observable, net.corda.core.messaging.DataFeed, net.corda.core.messaging.DataFeed, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public void close()
  @NotNull
  public final net.corda.core.flows.StateMachineRunId component1()
  @NotNull
  public final net.corda.core.concurrent.CordaFuture component2()
  @NotNull
  public final rx.Observable component3()
  @Nullable
  public final net.corda.core.messaging.DataFeed component4()
  @Nullable
  public final net.corda.core.messaging.DataFeed component5()
  @NotNull
  public final net.corda.core.messaging.FlowProgressHandleImpl copy(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture, rx.Observable)
  @NotNull
  public final net.corda.core.messaging.FlowProgressHandleImpl copy(net.corda.core.flows.StateMachineRunId, net.corda.core.concurrent.CordaFuture, rx.Observable, net.corda.core.messaging.DataFeed, net.corda.core.messaging.DataFeed)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.flows.StateMachineRunId getId()
  @NotNull
  public rx.Observable getProgress()
  @NotNull
  public net.corda.core.concurrent.CordaFuture getReturnValue()
  @Nullable
  public net.corda.core.messaging.DataFeed getStepsTreeFeed()
  @Nullable
  public net.corda.core.messaging.DataFeed getStepsTreeIndexFeed()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public interface net.corda.core.messaging.MessageRecipientGroup extends net.corda.core.messaging.MessageRecipients
##
@CordaSerializable
public interface net.corda.core.messaging.MessageRecipients
##
@CordaSerializable
public final class net.corda.core.messaging.ParametersUpdateInfo extends java.lang.Object
  public <init>(net.corda.core.crypto.SecureHash, net.corda.core.node.NetworkParameters, String, java.time.Instant)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final net.corda.core.node.NetworkParameters component2()
  @NotNull
  public final String component3()
  @NotNull
  public final java.time.Instant component4()
  @NotNull
  public final net.corda.core.messaging.ParametersUpdateInfo copy(net.corda.core.crypto.SecureHash, net.corda.core.node.NetworkParameters, String, java.time.Instant)
  public boolean equals(Object)
  @NotNull
  public final String getDescription()
  @NotNull
  public final net.corda.core.crypto.SecureHash getHash()
  @NotNull
  public final net.corda.core.node.NetworkParameters getParameters()
  @NotNull
  public final java.time.Instant getUpdateDeadline()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public interface net.corda.core.messaging.RPCOps
  public abstract int getProtocolVersion()
##
public @interface net.corda.core.messaging.RPCReturnsObservables
##
@CordaSerializable
public interface net.corda.core.messaging.SingleMessageRecipient extends net.corda.core.messaging.MessageRecipients
##
@CordaSerializable
public final class net.corda.core.messaging.StateMachineInfo extends java.lang.Object
  public <init>(net.corda.core.flows.StateMachineRunId, String, net.corda.core.flows.FlowInitiator, net.corda.core.messaging.DataFeed)
  public <init>(net.corda.core.flows.StateMachineRunId, String, net.corda.core.flows.FlowInitiator, net.corda.core.messaging.DataFeed, net.corda.core.context.InvocationContext)
  public <init>(net.corda.core.flows.StateMachineRunId, String, net.corda.core.flows.FlowInitiator, net.corda.core.messaging.DataFeed, net.corda.core.context.InvocationContext, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.flows.StateMachineRunId component1()
  @NotNull
  public final String component2()
  @NotNull
  public final net.corda.core.flows.FlowInitiator component3()
  @Nullable
  public final net.corda.core.messaging.DataFeed component4()
  @NotNull
  public final net.corda.core.context.InvocationContext component5()
  @NotNull
  public final net.corda.core.messaging.StateMachineInfo copy(net.corda.core.flows.StateMachineRunId, String, net.corda.core.flows.FlowInitiator, net.corda.core.messaging.DataFeed)
  @NotNull
  public final net.corda.core.messaging.StateMachineInfo copy(net.corda.core.flows.StateMachineRunId, String, net.corda.core.flows.FlowInitiator, net.corda.core.messaging.DataFeed, net.corda.core.context.InvocationContext)
  public boolean equals(Object)
  @NotNull
  public final String getFlowLogicClassName()
  @NotNull
  public final net.corda.core.flows.StateMachineRunId getId()
  @NotNull
  public final net.corda.core.flows.FlowInitiator getInitiator()
  @NotNull
  public final net.corda.core.context.InvocationContext getInvocationContext()
  @Nullable
  public final net.corda.core.messaging.DataFeed getProgressTrackerStepAndUpdates()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.messaging.StateMachineTransactionMapping extends java.lang.Object
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.flows.StateMachineRunId component1()
  @NotNull
  public final net.corda.core.crypto.SecureHash component2()
  @NotNull
  public final net.corda.core.messaging.StateMachineTransactionMapping copy(net.corda.core.flows.StateMachineRunId, net.corda.core.crypto.SecureHash)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.flows.StateMachineRunId getStateMachineRunId()
  @NotNull
  public final net.corda.core.crypto.SecureHash getTransactionId()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public abstract class net.corda.core.messaging.StateMachineUpdate extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public abstract net.corda.core.flows.StateMachineRunId getId()
##
@CordaSerializable
public static final class net.corda.core.messaging.StateMachineUpdate$Added extends net.corda.core.messaging.StateMachineUpdate
  public <init>(net.corda.core.messaging.StateMachineInfo)
  @NotNull
  public final net.corda.core.messaging.StateMachineInfo component1()
  @NotNull
  public final net.corda.core.messaging.StateMachineUpdate$Added copy(net.corda.core.messaging.StateMachineInfo)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.flows.StateMachineRunId getId()
  @NotNull
  public final net.corda.core.messaging.StateMachineInfo getStateMachineInfo()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.messaging.StateMachineUpdate$Removed extends net.corda.core.messaging.StateMachineUpdate
  public <init>(net.corda.core.flows.StateMachineRunId, net.corda.core.utilities.Try)
  @NotNull
  public final net.corda.core.flows.StateMachineRunId component1()
  @NotNull
  public final net.corda.core.utilities.Try component2()
  @NotNull
  public final net.corda.core.messaging.StateMachineUpdate$Removed copy(net.corda.core.flows.StateMachineRunId, net.corda.core.utilities.Try)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.flows.StateMachineRunId getId()
  @NotNull
  public final net.corda.core.utilities.Try getResult()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public interface net.corda.core.messaging.flows.FlowManagerRPCOps extends net.corda.core.messaging.RPCOps
  public abstract void debugCheckpoints()
  public abstract void dumpCheckpoints()
##
@DoNotImplement
public interface net.corda.core.node.AppServiceHub extends net.corda.core.node.ServiceHub
  @NotNull
  public abstract net.corda.core.node.services.vault.CordaTransactionSupport getDatabase()
  public void register(int, kotlin.jvm.functions.Function1)
  public abstract void register(int, net.corda.core.node.services.ServiceLifecycleObserver)
  @NotNull
  public abstract net.corda.core.messaging.FlowHandle startFlow(net.corda.core.flows.FlowLogic)
  @NotNull
  public abstract net.corda.core.messaging.FlowProgressHandle startTrackedFlow(net.corda.core.flows.FlowLogic)
  @NotNull
  public static final net.corda.core.node.AppServiceHub$Companion Companion
  public static final int SERVICE_PRIORITY_HIGH = 200
  public static final int SERVICE_PRIORITY_LOW = 20
  public static final int SERVICE_PRIORITY_NORMAL = 100
##
public static final class net.corda.core.node.AppServiceHub$Companion extends java.lang.Object
  public static final int SERVICE_PRIORITY_HIGH = 200
  public static final int SERVICE_PRIORITY_LOW = 20
  public static final int SERVICE_PRIORITY_NORMAL = 100
##
public @interface net.corda.core.node.AutoAcceptable
##
@CordaSerializable
public final class net.corda.core.node.NetworkParameters extends java.lang.Object
  @DeprecatedConstructorForDeserialization
  public <init>(int, java.util.List, int, int, java.time.Instant, int, java.util.Map)
  @DeprecatedConstructorForDeserialization
  public <init>(int, java.util.List, int, int, java.time.Instant, int, java.util.Map, java.time.Duration)
  @DeprecatedConstructorForDeserialization
  public <init>(int, java.util.List, int, int, java.time.Instant, int, java.util.Map, java.time.Duration, java.util.Map)
  public <init>(int, java.util.List, int, int, java.time.Instant, int, java.util.Map, java.time.Duration, java.util.Map, java.time.Duration, java.time.Duration)
  public <init>(int, java.util.List, int, int, java.time.Instant, int, java.util.Map, java.time.Duration, java.util.Map, java.time.Duration, java.time.Duration, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final int component1()
  @Nullable
  public final java.time.Duration component10()
  @Nullable
  public final java.time.Duration component11()
  @NotNull
  public final java.util.List component2()
  public final int component3()
  public final int component4()
  @NotNull
  public final java.time.Instant component5()
  public final int component6()
  @NotNull
  public final java.util.Map component7()
  @NotNull
  public final java.time.Duration component8()
  @NotNull
  public final java.util.Map component9()
  @NotNull
  public final net.corda.core.node.NetworkParameters copy(int, java.util.List, int, int, java.time.Instant, int, java.util.Map)
  @NotNull
  public final net.corda.core.node.NetworkParameters copy(int, java.util.List, int, int, java.time.Instant, int, java.util.Map, java.time.Duration)
  @NotNull
  public final net.corda.core.node.NetworkParameters copy(int, java.util.List, int, int, java.time.Instant, int, java.util.Map, java.time.Duration, java.util.Map)
  @NotNull
  public final net.corda.core.node.NetworkParameters copy(int, java.util.List, int, int, java.time.Instant, int, java.util.Map, java.time.Duration, java.util.Map, java.time.Duration, java.time.Duration)
  public boolean equals(Object)
  @Nullable
  public final java.time.Duration getConfidentialIdentityMinimumBackupInterval()
  public final int getEpoch()
  @NotNull
  public final java.time.Duration getEventHorizon()
  public final int getMaxMessageSize()
  public final int getMaxTransactionSize()
  public final int getMinimumPlatformVersion()
  @NotNull
  public final java.time.Instant getModifiedTime()
  @NotNull
  public final java.util.List getNotaries()
  @NotNull
  public final java.util.Map getPackageOwnership()
  @Nullable
  public final java.time.Duration getRecoveryMaximumBackupInterval()
  @NotNull
  public final java.util.Map getWhitelistedContractImplementations()
  public int hashCode()
  @NotNull
  public final net.corda.core.node.NetworkParameters toImmutable()
  @NotNull
  public String toString()
##
public final class net.corda.core.node.NetworkParametersKt extends java.lang.Object
##
@CordaSerializable
public final class net.corda.core.node.NodeDiagnosticInfo extends java.lang.Object
  public <init>(String, String, int, String, java.util.List)
  @NotNull
  public final String component1()
  @NotNull
  public final String component2()
  public final int component3()
  @NotNull
  public final String component4()
  @NotNull
  public final java.util.List component5()
  @NotNull
  public final net.corda.core.node.NodeDiagnosticInfo copy(String, String, int, String, java.util.List)
  public boolean equals(Object)
  @NotNull
  public final java.util.List getCordapps()
  public final int getPlatformVersion()
  @NotNull
  public final String getRevision()
  @NotNull
  public final String getVendor()
  @NotNull
  public final String getVersion()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.node.NodeInfo extends java.lang.Object
  public <init>(java.util.List, java.util.List, int, long)
  @NotNull
  public final java.util.List component1()
  @NotNull
  public final java.util.List component2()
  public final int component3()
  public final long component4()
  @NotNull
  public final net.corda.core.node.NodeInfo copy(java.util.List, java.util.List, int, long)
  public boolean equals(Object)
  @NotNull
  public final java.util.List getAddresses()
  @NotNull
  public final java.util.List getLegalIdentities()
  @NotNull
  public final java.util.List getLegalIdentitiesAndCerts()
  public final int getPlatformVersion()
  public final long getSerial()
  public int hashCode()
  @NotNull
  public final net.corda.core.identity.PartyAndCertificate identityAndCertFromX500Name(net.corda.core.identity.CordaX500Name)
  @NotNull
  public final net.corda.core.identity.Party identityFromX500Name(net.corda.core.identity.CordaX500Name)
  public final boolean isLegalIdentity(net.corda.core.identity.CordaX500Name)
  public final boolean isLegalIdentity(net.corda.core.identity.Party)
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.node.NotaryInfo extends java.lang.Object
  public <init>(net.corda.core.identity.Party, boolean)
  @NotNull
  public final net.corda.core.identity.Party component1()
  public final boolean component2()
  @NotNull
  public final net.corda.core.node.NotaryInfo copy(net.corda.core.identity.Party, boolean)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.identity.Party getIdentity()
  public final boolean getValidating()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public interface net.corda.core.node.ServiceHub extends net.corda.core.node.ServicesForResolution
  @NotNull
  public net.corda.core.transactions.SignedTransaction addSignature(net.corda.core.transactions.SignedTransaction)
  @NotNull
  public net.corda.core.transactions.SignedTransaction addSignature(net.corda.core.transactions.SignedTransaction, java.security.PublicKey)
  @NotNull
  public abstract T cordaService(Class)
  @NotNull
  public abstract T cordaTelemetryComponent(Class)
  @NotNull
  public net.corda.core.crypto.TransactionSignature createSignature(net.corda.core.transactions.FilteredTransaction)
  @NotNull
  public net.corda.core.crypto.TransactionSignature createSignature(net.corda.core.transactions.FilteredTransaction, java.security.PublicKey)
  @NotNull
  public net.corda.core.crypto.TransactionSignature createSignature(net.corda.core.transactions.SignedTransaction)
  @NotNull
  public net.corda.core.crypto.TransactionSignature createSignature(net.corda.core.transactions.SignedTransaction, java.security.PublicKey)
  @NotNull
  public net.corda.core.cordapp.CordappContext getAppContext()
  @NotNull
  public abstract java.time.Clock getClock()
  @NotNull
  public abstract net.corda.core.node.services.ContractUpgradeService getContractUpgradeService()
  @NotNull
  public abstract net.corda.core.node.services.diagnostics.DiagnosticsService getDiagnosticsService()
  @NotNull
  public abstract net.corda.core.node.services.KeyManagementService getKeyManagementService()
  @NotNull
  public abstract net.corda.core.node.NodeInfo getMyInfo()
  @NotNull
  public abstract net.corda.core.node.services.NetworkMapCache getNetworkMapCache()
  @NotNull
  public abstract net.corda.core.node.services.TelemetryService getTelemetryService()
  @NotNull
  public abstract net.corda.core.node.services.TransactionStorage getValidatedTransactions()
  @NotNull
  public abstract net.corda.core.node.services.VaultService getVaultService()
  @NotNull
  public abstract java.sql.Connection jdbcSession()
  public void recordTransactions(Iterable)
  public abstract void recordTransactions(net.corda.core.node.StatesToRecord, Iterable)
  public void recordTransactions(net.corda.core.transactions.SignedTransaction, net.corda.core.transactions.SignedTransaction...)
  public void recordTransactions(boolean, Iterable)
  public void recordTransactions(boolean, net.corda.core.transactions.SignedTransaction, net.corda.core.transactions.SignedTransaction...)
  public abstract void registerUnloadHandler(kotlin.jvm.functions.Function0)
  @NotNull
  public net.corda.core.transactions.SignedTransaction signInitialTransaction(net.corda.core.transactions.TransactionBuilder)
  @NotNull
  public net.corda.core.transactions.SignedTransaction signInitialTransaction(net.corda.core.transactions.TransactionBuilder, Iterable)
  @NotNull
  public net.corda.core.transactions.SignedTransaction signInitialTransaction(net.corda.core.transactions.TransactionBuilder, java.security.PublicKey)
  @NotNull
  public net.corda.core.contracts.StateAndRef toStateAndRef(net.corda.core.contracts.StateRef)
  public abstract void withEntityManager(java.util.function.Consumer)
  public abstract T withEntityManager(kotlin.jvm.functions.Function1)
##
@DoNotImplement
public interface net.corda.core.node.ServicesForResolution
  @NotNull
  public abstract net.corda.core.node.services.AttachmentStorage getAttachments()
  @NotNull
  public abstract net.corda.core.cordapp.CordappProvider getCordappProvider()
  @NotNull
  public abstract net.corda.core.node.services.IdentityService getIdentityService()
  @NotNull
  public abstract net.corda.core.node.NetworkParameters getNetworkParameters()
  @NotNull
  public abstract net.corda.core.node.services.NetworkParametersService getNetworkParametersService()
  @NotNull
  public abstract net.corda.core.contracts.Attachment loadContractAttachment(net.corda.core.contracts.StateRef)
  @NotNull
  public abstract net.corda.core.contracts.TransactionState loadState(net.corda.core.contracts.StateRef)
  @NotNull
  public abstract java.util.Set loadStates(java.util.Set)
  @NotNull
  public net.corda.core.transactions.LedgerTransaction specialise(net.corda.core.transactions.LedgerTransaction)
##
@CordaSerializable
public final class net.corda.core.node.StatesToRecord extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.StatesToRecord valueOf(String)
  public static net.corda.core.node.StatesToRecord[] values()
##
@CordaSerializable
public final class net.corda.core.node.ZoneVersionTooLowException extends net.corda.core.CordaRuntimeException
  public <init>(String)
##
@DoNotImplement
public interface net.corda.core.node.services.AttachmentStorage
  @NotNull
  public abstract java.util.List getLatestContractAttachments(String, int)
  public abstract boolean hasAttachment(net.corda.core.crypto.SecureHash)
  @NotNull
  public abstract net.corda.core.crypto.SecureHash importAttachment(java.io.InputStream)
  @NotNull
  public abstract net.corda.core.crypto.SecureHash importAttachment(java.io.InputStream, String, String)
  @NotNull
  public abstract net.corda.core.crypto.SecureHash importOrGetAttachment(java.io.InputStream)
  @Nullable
  public abstract net.corda.core.contracts.Attachment openAttachment(net.corda.core.crypto.SecureHash)
  @NotNull
  public java.util.List queryAttachments(net.corda.core.node.services.vault.AttachmentQueryCriteria)
  @NotNull
  public abstract java.util.List queryAttachments(net.corda.core.node.services.vault.AttachmentQueryCriteria, net.corda.core.node.services.vault.AttachmentSort)
##
public final class net.corda.core.node.services.AttachmentStorageKt extends java.lang.Object
##
@DoNotImplement
public interface net.corda.core.node.services.ContractUpgradeService
  @Nullable
  public abstract String getAuthorisedContractUpgrade(net.corda.core.contracts.StateRef)
  public abstract void removeAuthorisedContractUpgrade(net.corda.core.contracts.StateRef)
  public abstract void storeAuthorisedContractUpgrade(net.corda.core.contracts.StateRef, Class)
##
public @interface net.corda.core.node.services.CordaService
##
public final class net.corda.core.node.services.CordaServiceCriticalFailureException extends java.lang.Exception
  public <init>(String)
  public <init>(String, Throwable)
##
@DoNotImplement
public interface net.corda.core.node.services.IdentityService
  public void assertOwnership(net.corda.core.identity.Party, net.corda.core.identity.AnonymousParty)
  @Nullable
  public abstract net.corda.core.identity.PartyAndCertificate certificateFromKey(java.security.PublicKey)
  @Suspendable
  @Nullable
  public abstract java.util.UUID externalIdForPublicKey(java.security.PublicKey)
  @NotNull
  public abstract Iterable getAllIdentities()
  @NotNull
  public abstract java.security.cert.CertStore getCaCertStore()
  @NotNull
  public abstract java.security.cert.TrustAnchor getTrustAnchor()
  @NotNull
  public abstract java.security.cert.X509Certificate getTrustRoot()
  @NotNull
  public abstract java.util.Set partiesFromName(String, boolean)
  @Nullable
  public abstract net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @NotNull
  public abstract Iterable publicKeysForExternalId(java.util.UUID)
  public abstract void registerKey(java.security.PublicKey, net.corda.core.identity.Party, java.util.UUID)
  @NotNull
  public net.corda.core.identity.Party requireWellKnownPartyFromAnonymous(net.corda.core.identity.AbstractParty)
  @Nullable
  public abstract net.corda.core.identity.PartyAndCertificate verifyAndRegisterIdentity(net.corda.core.identity.PartyAndCertificate)
  @Nullable
  public net.corda.core.identity.Party wellKnownPartyFromAnonymous(net.corda.core.contracts.PartyAndReference)
  @Nullable
  public net.corda.core.identity.Party wellKnownPartyFromAnonymous(net.corda.core.identity.AbstractParty)
  @Nullable
  public abstract net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
  @NotNull
  public static final net.corda.core.node.services.IdentityService$Companion Companion
##
public static final class net.corda.core.node.services.IdentityService$Companion extends java.lang.Object
##
@DoNotImplement
public interface net.corda.core.node.services.KeyManagementService
  @NotNull
  public abstract Iterable filterMyKeys(Iterable)
  @Suspendable
  @NotNull
  public abstract java.security.PublicKey freshKey()
  @Suspendable
  @NotNull
  public abstract java.security.PublicKey freshKey(java.util.UUID)
  @Suspendable
  @NotNull
  public abstract net.corda.core.identity.PartyAndCertificate freshKeyAndCert(net.corda.core.identity.PartyAndCertificate, boolean)
  @Suspendable
  @NotNull
  public abstract net.corda.core.identity.PartyAndCertificate freshKeyAndCert(net.corda.core.identity.PartyAndCertificate, boolean, java.util.UUID)
  @NotNull
  public abstract java.util.Set getKeys()
  @Suspendable
  @NotNull
  public abstract net.corda.core.crypto.TransactionSignature sign(net.corda.core.crypto.SignableData, java.security.PublicKey)
  @Suspendable
  @NotNull
  public abstract net.corda.core.crypto.DigitalSignature$WithKey sign(byte[], java.security.PublicKey)
##
@DoNotImplement
public interface net.corda.core.node.services.NetworkMapCache extends net.corda.core.node.services.NetworkMapCacheBase
  @Nullable
  public abstract net.corda.core.node.NodeInfo getNodeByLegalIdentity(net.corda.core.identity.AbstractParty)
##
@CordaSerializable
public abstract static class net.corda.core.node.services.NetworkMapCache$MapChange extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public abstract net.corda.core.node.NodeInfo getNode()
##
@CordaSerializable
public static final class net.corda.core.node.services.NetworkMapCache$MapChange$Added extends net.corda.core.node.services.NetworkMapCache$MapChange
  public <init>(net.corda.core.node.NodeInfo)
  @NotNull
  public final net.corda.core.node.NodeInfo component1()
  @NotNull
  public final net.corda.core.node.services.NetworkMapCache$MapChange$Added copy(net.corda.core.node.NodeInfo)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.node.NodeInfo getNode()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.NetworkMapCache$MapChange$Modified extends net.corda.core.node.services.NetworkMapCache$MapChange
  public <init>(net.corda.core.node.NodeInfo, net.corda.core.node.NodeInfo)
  @NotNull
  public final net.corda.core.node.NodeInfo component1()
  @NotNull
  public final net.corda.core.node.NodeInfo component2()
  @NotNull
  public final net.corda.core.node.services.NetworkMapCache$MapChange$Modified copy(net.corda.core.node.NodeInfo, net.corda.core.node.NodeInfo)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.node.NodeInfo getNode()
  @NotNull
  public final net.corda.core.node.NodeInfo getPreviousNode()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.NetworkMapCache$MapChange$Removed extends net.corda.core.node.services.NetworkMapCache$MapChange
  public <init>(net.corda.core.node.NodeInfo)
  @NotNull
  public final net.corda.core.node.NodeInfo component1()
  @NotNull
  public final net.corda.core.node.services.NetworkMapCache$MapChange$Removed copy(net.corda.core.node.NodeInfo)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.node.NodeInfo getNode()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public interface net.corda.core.node.services.NetworkMapCacheBase
  public abstract void clearNetworkMapCache()
  @NotNull
  public abstract java.util.List getAllNodes()
  @NotNull
  public abstract rx.Observable getChanged()
  @Nullable
  public abstract net.corda.core.node.NodeInfo getNodeByAddress(net.corda.core.utilities.NetworkHostAndPort)
  @Nullable
  public abstract net.corda.core.node.NodeInfo getNodeByLegalName(net.corda.core.identity.CordaX500Name)
  @NotNull
  public abstract net.corda.core.concurrent.CordaFuture getNodeReady()
  @NotNull
  public abstract java.util.List getNodesByLegalIdentityKey(java.security.PublicKey)
  @NotNull
  public abstract java.util.List getNodesByLegalName(net.corda.core.identity.CordaX500Name)
  @Nullable
  public net.corda.core.identity.Party getNotary(net.corda.core.identity.CordaX500Name)
  @NotNull
  public abstract java.util.List getNotaryIdentities()
  @Nullable
  public abstract net.corda.core.node.services.PartyInfo getPartyInfo(net.corda.core.identity.Party)
  @Nullable
  public net.corda.core.identity.Party getPeerByLegalName(net.corda.core.identity.CordaX500Name)
  @Nullable
  public abstract net.corda.core.identity.PartyAndCertificate getPeerCertificateByLegalName(net.corda.core.identity.CordaX500Name)
  public abstract boolean isNotary(net.corda.core.identity.Party)
  public abstract boolean isValidatingNotary(net.corda.core.identity.Party)
  @NotNull
  public abstract net.corda.core.messaging.DataFeed track()
##
@DoNotImplement
public interface net.corda.core.node.services.NetworkParametersService
  @NotNull
  public abstract net.corda.core.crypto.SecureHash getCurrentHash()
  @NotNull
  public abstract net.corda.core.crypto.SecureHash getDefaultHash()
  @Nullable
  public abstract net.corda.core.node.NetworkParameters lookup(net.corda.core.crypto.SecureHash)
##
public abstract class net.corda.core.node.services.PartyInfo extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public abstract net.corda.core.identity.Party getParty()
##
public static final class net.corda.core.node.services.PartyInfo$DistributedNode extends net.corda.core.node.services.PartyInfo
  public <init>(net.corda.core.identity.Party)
  @NotNull
  public final net.corda.core.identity.Party component1()
  @NotNull
  public final net.corda.core.node.services.PartyInfo$DistributedNode copy(net.corda.core.identity.Party)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.identity.Party getParty()
  public int hashCode()
  @NotNull
  public String toString()
##
public static final class net.corda.core.node.services.PartyInfo$SingleNode extends net.corda.core.node.services.PartyInfo
  public <init>(net.corda.core.identity.Party, java.util.List)
  @NotNull
  public final net.corda.core.identity.Party component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final net.corda.core.node.services.PartyInfo$SingleNode copy(net.corda.core.identity.Party, java.util.List)
  public boolean equals(Object)
  @NotNull
  public final java.util.List getAddresses()
  @NotNull
  public net.corda.core.identity.Party getParty()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.node.services.ServiceLifecycleEvent extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.ServiceLifecycleEvent valueOf(String)
  public static net.corda.core.node.services.ServiceLifecycleEvent[] values()
##
public interface net.corda.core.node.services.ServiceLifecycleObserver
  public abstract void onServiceLifecycleEvent(net.corda.core.node.services.ServiceLifecycleEvent)
##
@CordaSerializable
public final class net.corda.core.node.services.SignedTransactionWithStatus extends java.lang.Object implements net.corda.core.contracts.NamedByHash
  public <init>(net.corda.core.transactions.SignedTransaction, net.corda.core.node.services.TransactionStatus)
  @NotNull
  public final net.corda.core.transactions.SignedTransaction component1()
  @NotNull
  public final net.corda.core.node.services.TransactionStatus component2()
  @NotNull
  public final net.corda.core.node.services.SignedTransactionWithStatus copy(net.corda.core.transactions.SignedTransaction, net.corda.core.node.services.TransactionStatus)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public final net.corda.core.node.services.TransactionStatus getStatus()
  @NotNull
  public final net.corda.core.transactions.SignedTransaction getStx()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.node.services.StatesNotAvailableException extends net.corda.core.flows.FlowException
  public <init>(String, Throwable)
  public <init>(String, Throwable, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public Throwable getCause()
  @Nullable
  public String getMessage()
  @NotNull
  public String toString()
##
@DoNotImplement
public interface net.corda.core.node.services.TelemetryService
  @Nullable
  public abstract T getTelemetryHandle(Class)
##
public final class net.corda.core.node.services.TimeWindowChecker extends java.lang.Object
  public <init>()
  public <init>(java.time.Clock)
  public <init>(java.time.Clock, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.time.Clock getClock()
  public final boolean isValid(net.corda.core.contracts.TimeWindow)
##
@CordaSerializable
public final class net.corda.core.node.services.TransactionStatus extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.TransactionStatus valueOf(String)
  public static net.corda.core.node.services.TransactionStatus[] values()
##
@DoNotImplement
public interface net.corda.core.node.services.TransactionStorage
  @Nullable
  public abstract net.corda.core.transactions.SignedTransaction getTransaction(net.corda.core.crypto.SecureHash)
  @Nullable
  public abstract net.corda.core.node.services.SignedTransactionWithStatus getTransactionWithStatus(net.corda.core.crypto.SecureHash)
  @NotNull
  public abstract rx.Observable getUpdates()
  @NotNull
  public abstract net.corda.core.messaging.DataFeed track()
  @NotNull
  public abstract net.corda.core.concurrent.CordaFuture trackTransaction(net.corda.core.crypto.SecureHash)
##
@CordaSerializable
public final class net.corda.core.node.services.UnknownAnonymousPartyException extends net.corda.core.CordaException
  public <init>(String)
##
@CordaSerializable
public final class net.corda.core.node.services.Vault extends java.lang.Object
  public <init>(Iterable)
  @NotNull
  public final Iterable getStates()
  @NotNull
  public static final net.corda.core.node.services.Vault$Companion Companion
##
public static final class net.corda.core.node.services.Vault$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.node.services.Vault$Update getNoNotaryUpdate()
  @NotNull
  public final net.corda.core.node.services.Vault$Update getNoUpdate()
##
@CordaSerializable
public static final class net.corda.core.node.services.Vault$ConstraintInfo extends java.lang.Object
  public <init>(net.corda.core.contracts.AttachmentConstraint)
  @NotNull
  public final net.corda.core.contracts.AttachmentConstraint component1()
  @NotNull
  public final net.corda.core.node.services.Vault$ConstraintInfo copy(net.corda.core.contracts.AttachmentConstraint)
  @Nullable
  public final byte[] data()
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.contracts.AttachmentConstraint getConstraint()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public final net.corda.core.node.services.Vault$ConstraintInfo$Type type()
  @NotNull
  public static final net.corda.core.node.services.Vault$ConstraintInfo$Companion Companion
##
public static final class net.corda.core.node.services.Vault$ConstraintInfo$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.node.services.Vault$ConstraintInfo constraintInfo(net.corda.core.node.services.Vault$ConstraintInfo$Type, byte[])
##
@CordaSerializable
public static final class net.corda.core.node.services.Vault$ConstraintInfo$Type extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.Vault$ConstraintInfo$Type valueOf(String)
  public static net.corda.core.node.services.Vault$ConstraintInfo$Type[] values()
##
@CordaSerializable
public static final class net.corda.core.node.services.Vault$Page extends java.lang.Object
  public <init>(java.util.List, java.util.List, long, net.corda.core.node.services.Vault$StateStatus, java.util.List)
  public <init>(java.util.List, java.util.List, long, net.corda.core.node.services.Vault$StateStatus, java.util.List, net.corda.core.contracts.StateRef)
  public <init>(java.util.List, java.util.List, long, net.corda.core.node.services.Vault$StateStatus, java.util.List, net.corda.core.contracts.StateRef, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.List component1()
  @NotNull
  public final java.util.List component2()
  public final long component3()
  @NotNull
  public final net.corda.core.node.services.Vault$StateStatus component4()
  @NotNull
  public final java.util.List component5()
  @Nullable
  public final net.corda.core.contracts.StateRef component6()
  @NotNull
  public final net.corda.core.node.services.Vault$Page copy(java.util.List, java.util.List, long, net.corda.core.node.services.Vault$StateStatus, java.util.List)
  @NotNull
  public final net.corda.core.node.services.Vault$Page copy(java.util.List, java.util.List, long, net.corda.core.node.services.Vault$StateStatus, java.util.List, net.corda.core.contracts.StateRef)
  public boolean equals(Object)
  @NotNull
  public final java.util.List getOtherResults()
  @Nullable
  public final net.corda.core.contracts.StateRef getPreviousPageAnchor()
  @NotNull
  public final net.corda.core.node.services.Vault$StateStatus getStateTypes()
  @NotNull
  public final java.util.List getStates()
  @NotNull
  public final java.util.List getStatesMetadata()
  public final long getTotalStatesAvailable()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.Vault$RelevancyStatus extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.Vault$RelevancyStatus valueOf(String)
  public static net.corda.core.node.services.Vault$RelevancyStatus[] values()
##
@CordaSerializable
public static final class net.corda.core.node.services.Vault$StateMetadata extends java.lang.Object
  public <init>(net.corda.core.contracts.StateRef, String, java.time.Instant, java.time.Instant, net.corda.core.node.services.Vault$StateStatus, net.corda.core.identity.AbstractParty, String, java.time.Instant)
  public <init>(net.corda.core.contracts.StateRef, String, java.time.Instant, java.time.Instant, net.corda.core.node.services.Vault$StateStatus, net.corda.core.identity.AbstractParty, String, java.time.Instant, net.corda.core.node.services.Vault$RelevancyStatus)
  public <init>(net.corda.core.contracts.StateRef, String, java.time.Instant, java.time.Instant, net.corda.core.node.services.Vault$StateStatus, net.corda.core.identity.AbstractParty, String, java.time.Instant, net.corda.core.node.services.Vault$RelevancyStatus, net.corda.core.node.services.Vault$ConstraintInfo)
  public <init>(net.corda.core.contracts.StateRef, String, java.time.Instant, java.time.Instant, net.corda.core.node.services.Vault$StateStatus, net.corda.core.identity.AbstractParty, String, java.time.Instant, net.corda.core.node.services.Vault$RelevancyStatus, net.corda.core.node.services.Vault$ConstraintInfo, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.contracts.StateRef component1()
  @Nullable
  public final net.corda.core.node.services.Vault$ConstraintInfo component10()
  @NotNull
  public final String component2()
  @NotNull
  public final java.time.Instant component3()
  @Nullable
  public final java.time.Instant component4()
  @NotNull
  public final net.corda.core.node.services.Vault$StateStatus component5()
  @Nullable
  public final net.corda.core.identity.AbstractParty component6()
  @Nullable
  public final String component7()
  @Nullable
  public final java.time.Instant component8()
  @Nullable
  public final net.corda.core.node.services.Vault$RelevancyStatus component9()
  @NotNull
  public final net.corda.core.node.services.Vault$StateMetadata copy(net.corda.core.contracts.StateRef, String, java.time.Instant, java.time.Instant, net.corda.core.node.services.Vault$StateStatus, net.corda.core.identity.AbstractParty, String, java.time.Instant)
  @NotNull
  public final net.corda.core.node.services.Vault$StateMetadata copy(net.corda.core.contracts.StateRef, String, java.time.Instant, java.time.Instant, net.corda.core.node.services.Vault$StateStatus, net.corda.core.identity.AbstractParty, String, java.time.Instant, net.corda.core.node.services.Vault$RelevancyStatus)
  @NotNull
  public final net.corda.core.node.services.Vault$StateMetadata copy(net.corda.core.contracts.StateRef, String, java.time.Instant, java.time.Instant, net.corda.core.node.services.Vault$StateStatus, net.corda.core.identity.AbstractParty, String, java.time.Instant, net.corda.core.node.services.Vault$RelevancyStatus, net.corda.core.node.services.Vault$ConstraintInfo)
  public boolean equals(Object)
  @Nullable
  public final net.corda.core.node.services.Vault$ConstraintInfo getConstraintInfo()
  @Nullable
  public final java.time.Instant getConsumedTime()
  @NotNull
  public final String getContractStateClassName()
  @Nullable
  public final String getLockId()
  @Nullable
  public final java.time.Instant getLockUpdateTime()
  @Nullable
  public final net.corda.core.identity.AbstractParty getNotary()
  @NotNull
  public final java.time.Instant getRecordedTime()
  @NotNull
  public final net.corda.core.contracts.StateRef getRef()
  @Nullable
  public final net.corda.core.node.services.Vault$RelevancyStatus getRelevancyStatus()
  @NotNull
  public final net.corda.core.node.services.Vault$StateStatus getStatus()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.Vault$StateStatus extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.Vault$StateStatus valueOf(String)
  public static net.corda.core.node.services.Vault$StateStatus[] values()
##
@CordaSerializable
public static final class net.corda.core.node.services.Vault$Update extends java.lang.Object
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.Set, java.util.Set)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.Set, java.util.Set, java.util.UUID)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.Set, java.util.Set, java.util.UUID, net.corda.core.node.services.Vault$UpdateType)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.Set, java.util.Set, java.util.UUID, net.corda.core.node.services.Vault$UpdateType, java.util.Set)
  public <init>(java.util.Set, java.util.Set, java.util.UUID, net.corda.core.node.services.Vault$UpdateType, java.util.Set, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(java.util.Set, java.util.Set, java.util.UUID, net.corda.core.node.services.Vault$UpdateType, java.util.Set, java.util.Map)
  public <init>(java.util.Set, java.util.Set, java.util.UUID, net.corda.core.node.services.Vault$UpdateType, java.util.Set, java.util.Map, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.Set component1()
  @NotNull
  public final java.util.Set component2()
  @Nullable
  public final java.util.UUID component3()
  @NotNull
  public final net.corda.core.node.services.Vault$UpdateType component4()
  @NotNull
  public final java.util.Set component5()
  @NotNull
  public final java.util.Map component6()
  public final boolean containsType()
  public final boolean containsType(Class, net.corda.core.node.services.Vault$StateStatus)
  @NotNull
  public final net.corda.core.node.services.Vault$Update copy(java.util.Set, java.util.Set, java.util.UUID, net.corda.core.node.services.Vault$UpdateType)
  @NotNull
  public final net.corda.core.node.services.Vault$Update copy(java.util.Set, java.util.Set, java.util.UUID, net.corda.core.node.services.Vault$UpdateType, java.util.Set)
  @NotNull
  public final net.corda.core.node.services.Vault$Update copy(java.util.Set, java.util.Set, java.util.UUID, net.corda.core.node.services.Vault$UpdateType, java.util.Set, java.util.Map)
  public boolean equals(Object)
  @NotNull
  public final java.util.Set getConsumed()
  @NotNull
  public final java.util.Map getConsumingTxIds()
  @Nullable
  public final java.util.UUID getFlowId()
  @NotNull
  public final java.util.Set getProduced()
  @NotNull
  public final java.util.Set getReferences()
  @NotNull
  public final net.corda.core.node.services.Vault$UpdateType getType()
  public int hashCode()
  public final boolean isEmpty()
  @NotNull
  public final net.corda.core.node.services.Vault$Update plus(net.corda.core.node.services.Vault$Update)
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.Vault$UpdateType extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.Vault$UpdateType valueOf(String)
  public static net.corda.core.node.services.Vault$UpdateType[] values()
##
@CordaSerializable
public final class net.corda.core.node.services.VaultQueryException extends net.corda.core.flows.FlowException
  public <init>(String)
  public <init>(String, Exception)
  public <init>(String, Exception, int, kotlin.jvm.internal.DefaultConstructorMarker)
##
@DoNotImplement
public interface net.corda.core.node.services.VaultService
  @NotNull
  public abstract net.corda.core.node.services.Vault$Page _queryBy(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort, Class)
  @NotNull
  public abstract net.corda.core.messaging.DataFeed _trackBy(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort, Class)
  public abstract void addNoteToTransaction(net.corda.core.crypto.SecureHash, String)
  @NotNull
  public abstract rx.Observable getRawUpdates()
  @NotNull
  public abstract Iterable getTransactionNotes(net.corda.core.crypto.SecureHash)
  @NotNull
  public abstract rx.Observable getUpdates()
  @NotNull
  public net.corda.core.node.services.Vault$Page queryBy(Class)
  @NotNull
  public net.corda.core.node.services.Vault$Page queryBy(Class, net.corda.core.node.services.vault.PageSpecification)
  @NotNull
  public net.corda.core.node.services.Vault$Page queryBy(Class, net.corda.core.node.services.vault.QueryCriteria)
  @NotNull
  public net.corda.core.node.services.Vault$Page queryBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification)
  @NotNull
  public net.corda.core.node.services.Vault$Page queryBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort)
  @NotNull
  public net.corda.core.node.services.Vault$Page queryBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.Sort)
  public abstract void softLockRelease(java.util.UUID, net.corda.core.utilities.NonEmptySet)
  public abstract void softLockReserve(java.util.UUID, net.corda.core.utilities.NonEmptySet)
  @NotNull
  public net.corda.core.messaging.DataFeed trackBy(Class)
  @NotNull
  public net.corda.core.messaging.DataFeed trackBy(Class, net.corda.core.node.services.vault.PageSpecification)
  @NotNull
  public net.corda.core.messaging.DataFeed trackBy(Class, net.corda.core.node.services.vault.QueryCriteria)
  @NotNull
  public net.corda.core.messaging.DataFeed trackBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification)
  @NotNull
  public net.corda.core.messaging.DataFeed trackBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort)
  @NotNull
  public net.corda.core.messaging.DataFeed trackBy(Class, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.Sort)
  @Suspendable
  @NotNull
  public abstract java.util.List tryLockFungibleStatesForSpending(java.util.UUID, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.contracts.Amount, Class)
  @NotNull
  public net.corda.core.concurrent.CordaFuture whenConsumed(net.corda.core.contracts.StateRef)
##
public final class net.corda.core.node.services.VaultServiceKt extends java.lang.Object
  public static final net.corda.core.node.services.Vault$Page queryBy(net.corda.core.node.services.VaultService)
  public static final net.corda.core.node.services.Vault$Page queryBy(net.corda.core.node.services.VaultService, net.corda.core.node.services.vault.PageSpecification)
  public static final net.corda.core.node.services.Vault$Page queryBy(net.corda.core.node.services.VaultService, net.corda.core.node.services.vault.QueryCriteria)
  public static final net.corda.core.node.services.Vault$Page queryBy(net.corda.core.node.services.VaultService, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification)
  public static final net.corda.core.node.services.Vault$Page queryBy(net.corda.core.node.services.VaultService, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort)
  public static final net.corda.core.node.services.Vault$Page queryBy(net.corda.core.node.services.VaultService, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.Sort)
  public static final net.corda.core.messaging.DataFeed trackBy(net.corda.core.node.services.VaultService)
  public static final net.corda.core.messaging.DataFeed trackBy(net.corda.core.node.services.VaultService, net.corda.core.node.services.vault.PageSpecification)
  public static final net.corda.core.messaging.DataFeed trackBy(net.corda.core.node.services.VaultService, net.corda.core.node.services.vault.QueryCriteria)
  public static final net.corda.core.messaging.DataFeed trackBy(net.corda.core.node.services.VaultService, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification)
  public static final net.corda.core.messaging.DataFeed trackBy(net.corda.core.node.services.VaultService, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.PageSpecification, net.corda.core.node.services.vault.Sort)
  public static final net.corda.core.messaging.DataFeed trackBy(net.corda.core.node.services.VaultService, net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.Sort)
  public static final int MAX_CONSTRAINT_DATA_SIZE = 20000
##
@DoNotImplement
public interface net.corda.core.node.services.diagnostics.DiagnosticsService
  @NotNull
  public abstract net.corda.core.node.services.diagnostics.NodeVersionInfo nodeVersionInfo()
##
public final class net.corda.core.node.services.diagnostics.NodeVersionInfo extends java.lang.Object
  public <init>(String, String, int, String)
  @NotNull
  public final String component1()
  @NotNull
  public final String component2()
  public final int component3()
  @NotNull
  public final String component4()
  @NotNull
  public final net.corda.core.node.services.diagnostics.NodeVersionInfo copy(String, String, int, String)
  public boolean equals(Object)
  public final int getPlatformVersion()
  @NotNull
  public final String getReleaseVersion()
  @NotNull
  public final String getRevision()
  @NotNull
  public final String getVendor()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public final class net.corda.core.node.services.vault.AggregateFunctionType extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.AggregateFunctionType valueOf(String)
  public static net.corda.core.node.services.vault.AggregateFunctionType[] values()
##
@CordaSerializable
public abstract class net.corda.core.node.services.vault.AttachmentQueryCriteria extends java.lang.Object implements net.corda.core.node.services.vault.GenericQueryCriteria, net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public net.corda.core.node.services.vault.AttachmentQueryCriteria and(net.corda.core.node.services.vault.AttachmentQueryCriteria)
  @NotNull
  public net.corda.core.node.services.vault.AttachmentQueryCriteria or(net.corda.core.node.services.vault.AttachmentQueryCriteria)
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.AttachmentQueryCriteria$AndComposition extends net.corda.core.node.services.vault.AttachmentQueryCriteria implements net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$AndVisitor
  public <init>(net.corda.core.node.services.vault.AttachmentQueryCriteria, net.corda.core.node.services.vault.AttachmentQueryCriteria)
  @NotNull
  public net.corda.core.node.services.vault.AttachmentQueryCriteria getA()
  @NotNull
  public net.corda.core.node.services.vault.AttachmentQueryCriteria getB()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria extends net.corda.core.node.services.vault.AttachmentQueryCriteria
  public <init>()
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.vault.ColumnPredicate)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate)
  public <init>(net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate)
  public <init>(net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate component1()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate component2()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate component3()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate component4()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate component5()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate component6()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate component7()
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria copy(net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria copy(net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.vault.ColumnPredicate)
  public boolean equals(Object)
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate getContractClassNamesCondition()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate getFilenameCondition()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate getSignersCondition()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate getUploadDateCondition()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate getUploaderCondition()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate getVersionCondition()
  public int hashCode()
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria isSigned(net.corda.core.node.services.vault.ColumnPredicate)
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate isSignedCondition()
  @NotNull
  public String toString()
  @NotNull
  public java.util.Collection visit(net.corda.core.node.services.vault.AttachmentsQueryCriteriaParser)
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria withContractClassNames(net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria withFilename(net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria withSigners(net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria withUploadDate(net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria withUploader(net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria withVersion(net.corda.core.node.services.vault.ColumnPredicate)
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.AttachmentQueryCriteria$OrComposition extends net.corda.core.node.services.vault.AttachmentQueryCriteria implements net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$OrVisitor
  public <init>(net.corda.core.node.services.vault.AttachmentQueryCriteria, net.corda.core.node.services.vault.AttachmentQueryCriteria)
  @NotNull
  public net.corda.core.node.services.vault.AttachmentQueryCriteria getA()
  @NotNull
  public net.corda.core.node.services.vault.AttachmentQueryCriteria getB()
##
@CordaSerializable
public final class net.corda.core.node.services.vault.AttachmentSort extends net.corda.core.node.services.vault.BaseSort
  public <init>(java.util.Collection)
  @NotNull
  public final java.util.Collection component1()
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentSort copy(java.util.Collection)
  public boolean equals(Object)
  @NotNull
  public final java.util.Collection getColumns()
  public int hashCode()
  @NotNull
  public String toString()
##
public static final class net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute extends java.lang.Enum
  @NotNull
  public final String getColumnName()
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute valueOf(String)
  public static net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute[] values()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.AttachmentSort$AttachmentSortColumn extends java.lang.Object
  public <init>(net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute, net.corda.core.node.services.vault.Sort$Direction)
  public <init>(net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute, net.corda.core.node.services.vault.Sort$Direction, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute component1()
  @NotNull
  public final net.corda.core.node.services.vault.Sort$Direction component2()
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentSort$AttachmentSortColumn copy(net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute, net.corda.core.node.services.vault.Sort$Direction)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.Sort$Direction getDirection()
  @NotNull
  public final net.corda.core.node.services.vault.AttachmentSort$AttachmentSortAttribute getSortAttribute()
  public int hashCode()
  @NotNull
  public String toString()
##
public interface net.corda.core.node.services.vault.AttachmentsQueryCriteriaParser extends net.corda.core.node.services.vault.BaseQueryCriteriaParser
  @NotNull
  public abstract java.util.Collection parseCriteria(net.corda.core.node.services.vault.AttachmentQueryCriteria$AttachmentsQueryCriteria)
##
public interface net.corda.core.node.services.vault.BaseQueryCriteriaParser
  @NotNull
  public abstract java.util.Collection parse(Q, S)
  @NotNull
  public abstract java.util.Collection parseAnd(Q, Q)
  @NotNull
  public abstract java.util.Collection parseOr(Q, Q)
##
public abstract class net.corda.core.node.services.vault.BaseSort extends java.lang.Object
  public <init>()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.node.services.vault.BinaryComparisonOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.BinaryComparisonOperator valueOf(String)
  public static net.corda.core.node.services.vault.BinaryComparisonOperator[] values()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.node.services.vault.BinaryLogicalOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.BinaryLogicalOperator valueOf(String)
  public static net.corda.core.node.services.vault.BinaryLogicalOperator[] values()
##
@CordaSerializable
public final class net.corda.core.node.services.vault.Builder extends java.lang.Object
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression avg(reflect.Field)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression avg(reflect.Field, java.util.List)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression avg(reflect.Field, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression avg(kotlin.reflect.KProperty1, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression avg(net.corda.core.node.services.vault.FieldInfo)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression avg(net.corda.core.node.services.vault.FieldInfo, java.util.List)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression avg(net.corda.core.node.services.vault.FieldInfo, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$Between between(R, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression between(reflect.Field, R, R)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression between(kotlin.reflect.KProperty1, R, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression between(net.corda.core.node.services.vault.FieldInfo, R, R)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison compare(net.corda.core.node.services.vault.BinaryComparisonOperator, R)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression comparePredicate(reflect.Field, net.corda.core.node.services.vault.BinaryComparisonOperator, R)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression comparePredicate(kotlin.reflect.KProperty1, net.corda.core.node.services.vault.BinaryComparisonOperator, R)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression comparePredicate(net.corda.core.node.services.vault.FieldInfo, net.corda.core.node.services.vault.BinaryComparisonOperator, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression count(reflect.Field)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression count(kotlin.reflect.KProperty1)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression count(net.corda.core.node.services.vault.FieldInfo)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$EqualityComparison equal(R)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$EqualityComparison equal(R, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression equal(reflect.Field, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression equal(reflect.Field, R, boolean)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression equal(kotlin.reflect.KProperty1, R)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression equal(kotlin.reflect.KProperty1, R, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression equal(net.corda.core.node.services.vault.FieldInfo, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression equal(net.corda.core.node.services.vault.FieldInfo, R, boolean)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression functionPredicate(reflect.Field, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression functionPredicate(kotlin.reflect.KProperty1, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression functionPredicate(net.corda.core.node.services.vault.FieldInfo, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison greaterThan(R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression greaterThan(reflect.Field, R)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression greaterThan(kotlin.reflect.KProperty1, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression greaterThan(net.corda.core.node.services.vault.FieldInfo, R)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison greaterThanOrEqual(R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression greaterThanOrEqual(reflect.Field, R)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression greaterThanOrEqual(kotlin.reflect.KProperty1, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression greaterThanOrEqual(net.corda.core.node.services.vault.FieldInfo, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression in(reflect.Field, java.util.Collection)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression in(reflect.Field, java.util.Collection, boolean)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$CollectionExpression in(java.util.Collection)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$CollectionExpression in(java.util.Collection, boolean)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression in(kotlin.reflect.KProperty1, java.util.Collection)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression in(kotlin.reflect.KProperty1, java.util.Collection, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression in(net.corda.core.node.services.vault.FieldInfo, java.util.Collection)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression in(net.corda.core.node.services.vault.FieldInfo, java.util.Collection, boolean)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$NullExpression isNotNull()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$NullExpression isNull()
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression isNull(reflect.Field)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression isNull(kotlin.reflect.KProperty1)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression isNull(net.corda.core.node.services.vault.FieldInfo)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison lessThan(R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression lessThan(reflect.Field, R)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression lessThan(kotlin.reflect.KProperty1, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression lessThan(net.corda.core.node.services.vault.FieldInfo, R)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison lessThanOrEqual(R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression lessThanOrEqual(reflect.Field, R)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression lessThanOrEqual(kotlin.reflect.KProperty1, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression lessThanOrEqual(net.corda.core.node.services.vault.FieldInfo, R)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$Likeness like(String)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$Likeness like(String, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression like(reflect.Field, String)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression like(reflect.Field, String, boolean)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression like(kotlin.reflect.KProperty1, String)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression like(kotlin.reflect.KProperty1, String, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression like(net.corda.core.node.services.vault.FieldInfo, String)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression like(net.corda.core.node.services.vault.FieldInfo, String, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression max(reflect.Field)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression max(reflect.Field, java.util.List)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression max(reflect.Field, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression max(kotlin.reflect.KProperty1, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression max(net.corda.core.node.services.vault.FieldInfo)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression max(net.corda.core.node.services.vault.FieldInfo, java.util.List)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression max(net.corda.core.node.services.vault.FieldInfo, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression min(reflect.Field)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression min(reflect.Field, java.util.List)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression min(reflect.Field, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression min(kotlin.reflect.KProperty1, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression min(net.corda.core.node.services.vault.FieldInfo)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression min(net.corda.core.node.services.vault.FieldInfo, java.util.List)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression min(net.corda.core.node.services.vault.FieldInfo, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$EqualityComparison notEqual(R)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$EqualityComparison notEqual(R, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notEqual(reflect.Field, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notEqual(reflect.Field, R, boolean)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notEqual(kotlin.reflect.KProperty1, R)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notEqual(kotlin.reflect.KProperty1, R, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notEqual(net.corda.core.node.services.vault.FieldInfo, R)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notEqual(net.corda.core.node.services.vault.FieldInfo, R, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notIn(reflect.Field, java.util.Collection)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notIn(reflect.Field, java.util.Collection, boolean)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$CollectionExpression notIn(java.util.Collection)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$CollectionExpression notIn(java.util.Collection, boolean)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notIn(kotlin.reflect.KProperty1, java.util.Collection)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notIn(kotlin.reflect.KProperty1, java.util.Collection, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notIn(net.corda.core.node.services.vault.FieldInfo, java.util.Collection)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notIn(net.corda.core.node.services.vault.FieldInfo, java.util.Collection, boolean)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$Likeness notLike(String)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$Likeness notLike(String, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notLike(reflect.Field, String)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notLike(reflect.Field, String, boolean)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notLike(kotlin.reflect.KProperty1, String)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notLike(kotlin.reflect.KProperty1, String, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notLike(net.corda.core.node.services.vault.FieldInfo, String)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notLike(net.corda.core.node.services.vault.FieldInfo, String, boolean)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notNull(reflect.Field)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notNull(kotlin.reflect.KProperty1)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression notNull(net.corda.core.node.services.vault.FieldInfo)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression predicate(reflect.Field, net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression predicate(kotlin.reflect.KProperty1, net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression predicate(net.corda.core.node.services.vault.FieldInfo, net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression sum(reflect.Field)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression sum(reflect.Field, java.util.List)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression sum(reflect.Field, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression sum(kotlin.reflect.KProperty1, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression sum(net.corda.core.node.services.vault.FieldInfo)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression sum(net.corda.core.node.services.vault.FieldInfo, java.util.List)
  @NotNull
  public static final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression sum(net.corda.core.node.services.vault.FieldInfo, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public static final net.corda.core.node.services.vault.Builder INSTANCE
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.node.services.vault.CollectionOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.CollectionOperator valueOf(String)
  public static net.corda.core.node.services.vault.CollectionOperator[] values()
##
@CordaSerializable
public final class net.corda.core.node.services.vault.Column extends java.lang.Object
  public <init>(String, Class)
  public <init>(reflect.Field)
  public <init>(kotlin.reflect.KProperty1)
  public <init>(net.corda.core.node.services.vault.FieldInfo)
  @NotNull
  public final Class getDeclaringClass()
  @NotNull
  public final String getName()
##
@CordaSerializable
public abstract class net.corda.core.node.services.vault.ColumnPredicate extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.ColumnPredicate$AggregateFunction extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.AggregateFunctionType)
  @NotNull
  public final net.corda.core.node.services.vault.AggregateFunctionType component1()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$AggregateFunction copy(net.corda.core.node.services.vault.AggregateFunctionType)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.AggregateFunctionType getType()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.ColumnPredicate$Between extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(C, C)
  @NotNull
  public final C component1()
  @NotNull
  public final C component2()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$Between copy(C, C)
  public boolean equals(Object)
  @NotNull
  public final C getRightFromLiteral()
  @NotNull
  public final C getRightToLiteral()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.BinaryComparisonOperator, C)
  @NotNull
  public final net.corda.core.node.services.vault.BinaryComparisonOperator component1()
  @NotNull
  public final C component2()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$BinaryComparison copy(net.corda.core.node.services.vault.BinaryComparisonOperator, C)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.BinaryComparisonOperator getOperator()
  @NotNull
  public final C getRightLiteral()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.ColumnPredicate$CollectionExpression extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.CollectionOperator, java.util.Collection)
  @NotNull
  public final net.corda.core.node.services.vault.CollectionOperator component1()
  @NotNull
  public final java.util.Collection component2()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$CollectionExpression copy(net.corda.core.node.services.vault.CollectionOperator, java.util.Collection)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.CollectionOperator getOperator()
  @NotNull
  public final java.util.Collection getRightLiteral()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.ColumnPredicate$EqualityComparison extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.EqualityComparisonOperator, C)
  @NotNull
  public final net.corda.core.node.services.vault.EqualityComparisonOperator component1()
  public final C component2()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$EqualityComparison copy(net.corda.core.node.services.vault.EqualityComparisonOperator, C)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.EqualityComparisonOperator getOperator()
  public final C getRightLiteral()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.ColumnPredicate$Likeness extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.LikenessOperator, String)
  @NotNull
  public final net.corda.core.node.services.vault.LikenessOperator component1()
  @NotNull
  public final String component2()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$Likeness copy(net.corda.core.node.services.vault.LikenessOperator, String)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.LikenessOperator getOperator()
  @NotNull
  public final String getRightLiteral()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.ColumnPredicate$NullExpression extends net.corda.core.node.services.vault.ColumnPredicate
  public <init>(net.corda.core.node.services.vault.NullOperator)
  @NotNull
  public final net.corda.core.node.services.vault.NullOperator component1()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate$NullExpression copy(net.corda.core.node.services.vault.NullOperator)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.NullOperator getOperator()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public interface net.corda.core.node.services.vault.CordaTransactionSupport
  public abstract T transaction(kotlin.jvm.functions.Function1)
##
@CordaSerializable
public abstract class net.corda.core.node.services.vault.CriteriaExpression extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression extends net.corda.core.node.services.vault.CriteriaExpression
  public <init>(net.corda.core.node.services.vault.Column, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  @NotNull
  public final net.corda.core.node.services.vault.Column component1()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate component2()
  @Nullable
  public final java.util.List component3()
  @Nullable
  public final net.corda.core.node.services.vault.Sort$Direction component4()
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$AggregateFunctionExpression copy(net.corda.core.node.services.vault.Column, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, net.corda.core.node.services.vault.Sort$Direction)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.Column getColumn()
  @Nullable
  public final java.util.List getGroupByColumns()
  @Nullable
  public final net.corda.core.node.services.vault.Sort$Direction getOrderBy()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate getPredicate()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.CriteriaExpression$BinaryLogical extends net.corda.core.node.services.vault.CriteriaExpression
  public <init>(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.vault.BinaryLogicalOperator)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression component1()
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression component2()
  @NotNull
  public final net.corda.core.node.services.vault.BinaryLogicalOperator component3()
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$BinaryLogical copy(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.vault.BinaryLogicalOperator)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression getLeft()
  @NotNull
  public final net.corda.core.node.services.vault.BinaryLogicalOperator getOperator()
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression getRight()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression extends net.corda.core.node.services.vault.CriteriaExpression
  public <init>(net.corda.core.node.services.vault.Column, net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.Column component1()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate component2()
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$ColumnPredicateExpression copy(net.corda.core.node.services.vault.Column, net.corda.core.node.services.vault.ColumnPredicate)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.Column getColumn()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate getPredicate()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.CriteriaExpression$Not extends net.corda.core.node.services.vault.CriteriaExpression
  public <init>(net.corda.core.node.services.vault.CriteriaExpression)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression component1()
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression$Not copy(net.corda.core.node.services.vault.CriteriaExpression)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression getExpression()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.node.services.vault.EqualityComparisonOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.EqualityComparisonOperator valueOf(String)
  public static net.corda.core.node.services.vault.EqualityComparisonOperator[] values()
##
public final class net.corda.core.node.services.vault.FieldInfo extends java.lang.Object
  public <init>(String, Class)
  @NotNull
  public final Class getEntityClass()
  @NotNull
  public final String getName()
##
public interface net.corda.core.node.services.vault.GenericQueryCriteria
  @NotNull
  public abstract java.util.Collection visit(P)
##
public static interface net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria
  @NotNull
  public abstract Q and(Q)
  @NotNull
  public abstract Q or(Q)
##
public static interface net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$AndVisitor extends net.corda.core.node.services.vault.GenericQueryCriteria
  @NotNull
  public abstract Q getA()
  @NotNull
  public abstract Q getB()
  @NotNull
  public java.util.Collection visit(P)
##
public static interface net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$OrVisitor extends net.corda.core.node.services.vault.GenericQueryCriteria
  @NotNull
  public abstract Q getA()
  @NotNull
  public abstract Q getB()
  @NotNull
  public java.util.Collection visit(P)
##
@DoNotImplement
public interface net.corda.core.node.services.vault.IQueryCriteriaParser extends net.corda.core.node.services.vault.BaseQueryCriteriaParser
  @NotNull
  public abstract java.util.Collection parseCriteria(net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria)
  @NotNull
  public abstract java.util.Collection parseCriteria(net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria)
  @NotNull
  public abstract java.util.Collection parseCriteria(net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria)
  @NotNull
  public abstract java.util.Collection parseCriteria(net.corda.core.node.services.vault.QueryCriteria$VaultCustomQueryCriteria)
  @NotNull
  public abstract java.util.Collection parseCriteria(net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria)
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.node.services.vault.LikenessOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.LikenessOperator valueOf(String)
  public static net.corda.core.node.services.vault.LikenessOperator[] values()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.node.services.vault.NullOperator extends java.lang.Enum implements net.corda.core.node.services.vault.Operator
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.NullOperator valueOf(String)
  public static net.corda.core.node.services.vault.NullOperator[] values()
##
@DoNotImplement
@CordaSerializable
public interface net.corda.core.node.services.vault.Operator
##
@CordaSerializable
public final class net.corda.core.node.services.vault.PageSpecification extends java.lang.Object
  public <init>()
  public <init>(int, int)
  public <init>(int, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final int component1()
  public final int component2()
  @NotNull
  public final net.corda.core.node.services.vault.PageSpecification copy(int, int)
  public boolean equals(Object)
  public final int getPageNumber()
  public final int getPageSize()
  public int hashCode()
  public final boolean isDefault()
  @NotNull
  public String toString()
##
@CordaSerializable
public abstract class net.corda.core.node.services.vault.QueryCriteria extends java.lang.Object implements net.corda.core.node.services.vault.GenericQueryCriteria, net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public net.corda.core.node.services.vault.QueryCriteria and(net.corda.core.node.services.vault.QueryCriteria)
  @NotNull
  public net.corda.core.node.services.vault.QueryCriteria or(net.corda.core.node.services.vault.QueryCriteria)
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.QueryCriteria$AndComposition extends net.corda.core.node.services.vault.QueryCriteria implements net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$AndVisitor
  public <init>(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.QueryCriteria)
  @NotNull
  public net.corda.core.node.services.vault.QueryCriteria getA()
  @NotNull
  public net.corda.core.node.services.vault.QueryCriteria getB()
##
@CordaSerializable
public abstract static class net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria extends net.corda.core.node.services.vault.QueryCriteria
  public <init>()
  @NotNull
  public java.util.Set getConstraintTypes()
  @NotNull
  public java.util.Set getConstraints()
  @Nullable
  public abstract java.util.Set getContractStateTypes()
  @Nullable
  public java.util.List getExactParticipants()
  @NotNull
  public java.util.List getExternalIds()
  @Nullable
  public java.util.List getParticipants()
  @NotNull
  public net.corda.core.node.services.Vault$RelevancyStatus getRelevancyStatus()
  @NotNull
  public abstract net.corda.core.node.services.Vault$StateStatus getStatus()
  @NotNull
  public java.util.Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria extends net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria
  @DeprecatedConstructorForDeserialization
  public <init>()
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, java.util.List)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set)
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus)
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus, java.util.List)
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final java.util.List component1()
  @Nullable
  public final java.util.List component2()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate component3()
  @Nullable
  public final java.util.List component4()
  @Nullable
  public final java.util.List component5()
  @NotNull
  public final net.corda.core.node.services.Vault$StateStatus component6()
  @Nullable
  public final java.util.Set component7()
  @NotNull
  public final net.corda.core.node.services.Vault$RelevancyStatus component8()
  @Nullable
  public final java.util.List component9()
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria copy(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria copy(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria copy(java.util.List, java.util.List, net.corda.core.node.services.vault.ColumnPredicate, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus, java.util.List)
  public boolean equals(Object)
  @Nullable
  public java.util.Set getContractStateTypes()
  @Nullable
  public java.util.List getExactParticipants()
  @Nullable
  public final java.util.List getIssuer()
  @Nullable
  public final java.util.List getIssuerRef()
  @Nullable
  public final java.util.List getOwner()
  @Nullable
  public java.util.List getParticipants()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate getQuantity()
  @NotNull
  public net.corda.core.node.services.Vault$RelevancyStatus getRelevancyStatus()
  @NotNull
  public net.corda.core.node.services.Vault$StateStatus getStatus()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public java.util.Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria withContractStateTypes(java.util.Set)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria withExactParticipants(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria withIssuer(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria withOwner(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria withParticipants(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria withQuantity(net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria withRelevancyStatus(net.corda.core.node.services.Vault$RelevancyStatus)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria withStatus(net.corda.core.node.services.Vault$StateStatus)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleAssetQueryCriteria withissuerRef(java.util.List)
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.QueryCriteria$FungibleStateQueryCriteria extends net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria
  public <init>()
  public <init>(java.util.List, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus)
  public <init>(java.util.List, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final java.util.List component1()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate component2()
  @NotNull
  public final net.corda.core.node.services.Vault$StateStatus component3()
  @Nullable
  public final java.util.Set component4()
  @NotNull
  public final net.corda.core.node.services.Vault$RelevancyStatus component5()
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleStateQueryCriteria copy(java.util.List, net.corda.core.node.services.vault.ColumnPredicate, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus)
  public boolean equals(Object)
  @Nullable
  public java.util.Set getContractStateTypes()
  @Nullable
  public java.util.List getParticipants()
  @Nullable
  public final net.corda.core.node.services.vault.ColumnPredicate getQuantity()
  @NotNull
  public net.corda.core.node.services.Vault$RelevancyStatus getRelevancyStatus()
  @NotNull
  public net.corda.core.node.services.Vault$StateStatus getStatus()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public java.util.Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleStateQueryCriteria withContractStateTypes(java.util.Set)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleStateQueryCriteria withParticipants(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleStateQueryCriteria withQuantity(net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleStateQueryCriteria withRelevancyStatus(net.corda.core.node.services.Vault$RelevancyStatus)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$FungibleStateQueryCriteria withStatus(net.corda.core.node.services.Vault$StateStatus)
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria extends net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria
  @DeprecatedConstructorForDeserialization
  public <init>()
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, java.util.List)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set)
  public <init>(java.util.List, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus)
  public <init>(java.util.List, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(java.util.List, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus, java.util.List)
  public <init>(java.util.List, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set)
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus)
  public <init>(java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final java.util.List component1()
  @Nullable
  public final java.util.List component2()
  @Nullable
  public final java.util.List component3()
  @NotNull
  public final net.corda.core.node.services.Vault$StateStatus component4()
  @Nullable
  public final java.util.Set component5()
  @NotNull
  public final net.corda.core.node.services.Vault$RelevancyStatus component6()
  @Nullable
  public final java.util.List component7()
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria copy(java.util.List, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria copy(java.util.List, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria copy(java.util.List, java.util.List, java.util.List, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus, java.util.List)
  public boolean equals(Object)
  @Nullable
  public java.util.Set getContractStateTypes()
  @Nullable
  public java.util.List getExactParticipants()
  @Nullable
  public final java.util.List getExternalId()
  @Nullable
  public java.util.List getParticipants()
  @NotNull
  public net.corda.core.node.services.Vault$RelevancyStatus getRelevancyStatus()
  @NotNull
  public net.corda.core.node.services.Vault$StateStatus getStatus()
  @Nullable
  public final java.util.List getUuid()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public java.util.Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria withContractStateTypes(java.util.Set)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria withExactParticipants(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria withExternalId(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria withParticipants(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria withRelevancyStatus(net.corda.core.node.services.Vault$RelevancyStatus)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria withStatus(net.corda.core.node.services.Vault$StateStatus)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$LinearStateQueryCriteria withUuid(java.util.List)
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.QueryCriteria$OrComposition extends net.corda.core.node.services.vault.QueryCriteria implements net.corda.core.node.services.vault.GenericQueryCriteria$ChainableQueryCriteria$OrVisitor
  public <init>(net.corda.core.node.services.vault.QueryCriteria, net.corda.core.node.services.vault.QueryCriteria)
  @NotNull
  public net.corda.core.node.services.vault.QueryCriteria getA()
  @NotNull
  public net.corda.core.node.services.vault.QueryCriteria getB()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition extends java.lang.Object
  public <init>(net.corda.core.node.services.vault.QueryCriteria$SoftLockingType, java.util.List)
  public <init>(net.corda.core.node.services.vault.QueryCriteria$SoftLockingType, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$SoftLockingType component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition copy(net.corda.core.node.services.vault.QueryCriteria$SoftLockingType, java.util.List)
  public boolean equals(Object)
  @NotNull
  public final java.util.List getLockIds()
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$SoftLockingType getType()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.QueryCriteria$SoftLockingType extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.QueryCriteria$SoftLockingType valueOf(String)
  public static net.corda.core.node.services.vault.QueryCriteria$SoftLockingType[] values()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.QueryCriteria$TimeCondition extends java.lang.Object
  public <init>(net.corda.core.node.services.vault.QueryCriteria$TimeInstantType, net.corda.core.node.services.vault.ColumnPredicate)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$TimeInstantType component1()
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate component2()
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$TimeCondition copy(net.corda.core.node.services.vault.QueryCriteria$TimeInstantType, net.corda.core.node.services.vault.ColumnPredicate)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.ColumnPredicate getPredicate()
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$TimeInstantType getType()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.QueryCriteria$TimeInstantType extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.QueryCriteria$TimeInstantType valueOf(String)
  public static net.corda.core.node.services.vault.QueryCriteria$TimeInstantType[] values()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.QueryCriteria$VaultCustomQueryCriteria extends net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.vault.CriteriaExpression)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.Vault$StateStatus)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.Vault$StateStatus, java.util.Set)
  public <init>(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.Vault$StateStatus, java.util.Set, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus)
  public <init>(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression component1()
  @NotNull
  public final net.corda.core.node.services.Vault$StateStatus component2()
  @Nullable
  public final java.util.Set component3()
  @NotNull
  public final net.corda.core.node.services.Vault$RelevancyStatus component4()
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultCustomQueryCriteria copy(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.Vault$StateStatus, java.util.Set)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultCustomQueryCriteria copy(net.corda.core.node.services.vault.CriteriaExpression, net.corda.core.node.services.Vault$StateStatus, java.util.Set, net.corda.core.node.services.Vault$RelevancyStatus)
  public boolean equals(Object)
  @Nullable
  public java.util.Set getContractStateTypes()
  @NotNull
  public final net.corda.core.node.services.vault.CriteriaExpression getExpression()
  @NotNull
  public net.corda.core.node.services.Vault$RelevancyStatus getRelevancyStatus()
  @NotNull
  public net.corda.core.node.services.Vault$StateStatus getStatus()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public java.util.Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultCustomQueryCriteria withContractStateTypes(java.util.Set)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultCustomQueryCriteria withExpression(net.corda.core.node.services.vault.CriteriaExpression)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultCustomQueryCriteria withRelevancyStatus(net.corda.core.node.services.Vault$RelevancyStatus)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultCustomQueryCriteria withStatus(net.corda.core.node.services.Vault$StateStatus)
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria extends net.corda.core.node.services.vault.QueryCriteria$CommonQueryCriteria
  public <init>()
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.Vault$StateStatus)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition)
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition, net.corda.core.node.services.Vault$RelevancyStatus, java.util.Set, java.util.Set, java.util.List)
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition, net.corda.core.node.services.Vault$RelevancyStatus, java.util.Set, java.util.Set, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition, net.corda.core.node.services.Vault$RelevancyStatus, java.util.Set, java.util.Set, java.util.List, java.util.List)
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition, net.corda.core.node.services.Vault$RelevancyStatus, java.util.Set, java.util.Set, java.util.List, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition, net.corda.core.node.services.Vault$RelevancyStatus, java.util.Set, java.util.Set, java.util.List, java.util.List, java.util.List)
  public <init>(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition, net.corda.core.node.services.Vault$RelevancyStatus, java.util.Set, java.util.Set, java.util.List, java.util.List, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.node.services.Vault$StateStatus component1()
  @Nullable
  public final java.util.List component10()
  @NotNull
  public final java.util.List component11()
  @Nullable
  public final java.util.List component12()
  @Nullable
  public final java.util.Set component2()
  @Nullable
  public final java.util.List component3()
  @Nullable
  public final java.util.List component4()
  @Nullable
  public final net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition component5()
  @Nullable
  public final net.corda.core.node.services.vault.QueryCriteria$TimeCondition component6()
  @NotNull
  public final net.corda.core.node.services.Vault$RelevancyStatus component7()
  @NotNull
  public final java.util.Set component8()
  @NotNull
  public final java.util.Set component9()
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria copy(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria copy(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition, net.corda.core.node.services.Vault$RelevancyStatus, java.util.Set, java.util.Set, java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria copy(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition, net.corda.core.node.services.Vault$RelevancyStatus, java.util.Set, java.util.Set, java.util.List, java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria copy(net.corda.core.node.services.Vault$StateStatus, java.util.Set, java.util.List, java.util.List, net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition, net.corda.core.node.services.vault.QueryCriteria$TimeCondition, net.corda.core.node.services.Vault$RelevancyStatus, java.util.Set, java.util.Set, java.util.List, java.util.List, java.util.List)
  public boolean equals(Object)
  @NotNull
  public java.util.Set getConstraintTypes()
  @NotNull
  public java.util.Set getConstraints()
  @Nullable
  public java.util.Set getContractStateTypes()
  @Nullable
  public java.util.List getExactParticipants()
  @NotNull
  public java.util.List getExternalIds()
  @Nullable
  public final java.util.List getNotary()
  @Nullable
  public java.util.List getParticipants()
  @NotNull
  public net.corda.core.node.services.Vault$RelevancyStatus getRelevancyStatus()
  @Nullable
  public final net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition getSoftLockingCondition()
  @Nullable
  public final java.util.List getStateRefs()
  @NotNull
  public net.corda.core.node.services.Vault$StateStatus getStatus()
  @Nullable
  public final net.corda.core.node.services.vault.QueryCriteria$TimeCondition getTimeCondition()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public java.util.Collection visit(net.corda.core.node.services.vault.IQueryCriteriaParser)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withConstraintTypes(java.util.Set)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withConstraints(java.util.Set)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withContractStateTypes(java.util.Set)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withExactParticipants(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withExternalIds(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withNotary(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withParticipants(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withRelevancyStatus(net.corda.core.node.services.Vault$RelevancyStatus)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withSoftLockingCondition(net.corda.core.node.services.vault.QueryCriteria$SoftLockingCondition)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withStateRefs(java.util.List)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withStatus(net.corda.core.node.services.Vault$StateStatus)
  @NotNull
  public final net.corda.core.node.services.vault.QueryCriteria$VaultQueryCriteria withTimeCondition(net.corda.core.node.services.vault.QueryCriteria$TimeCondition)
##
public final class net.corda.core.node.services.vault.QueryCriteriaUtils extends java.lang.Object
  public static final A builder(kotlin.jvm.functions.Function1)
  @NotNull
  public static final String getColumnName(net.corda.core.node.services.vault.Column)
  @NotNull
  public static final net.corda.core.node.services.vault.FieldInfo getField(String, Class)
  @NotNull
  public static final Class resolveEnclosingObjectFromColumn(net.corda.core.node.services.vault.Column)
  @NotNull
  public static final Class resolveEnclosingObjectFromExpression(net.corda.core.node.services.vault.CriteriaExpression)
  public static final int DEFAULT_PAGE_NUM = 1
  public static final int DEFAULT_PAGE_SIZE = 200
  public static final int MAX_PAGE_SIZE = 2147483646
##
@DoNotImplement
public interface net.corda.core.node.services.vault.SessionScope
  @NotNull
  public abstract org.hibernate.Session getSession()
##
@CordaSerializable
public final class net.corda.core.node.services.vault.Sort extends net.corda.core.node.services.vault.BaseSort
  public <init>(java.util.Collection)
  @NotNull
  public final java.util.Collection component1()
  @NotNull
  public final net.corda.core.node.services.vault.Sort copy(java.util.Collection)
  public boolean equals(Object)
  @NotNull
  public final java.util.Collection getColumns()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public static interface net.corda.core.node.services.vault.Sort$Attribute
##
@DoNotImplement
@CordaSerializable
public static final class net.corda.core.node.services.vault.Sort$CommonStateAttribute extends java.lang.Enum implements net.corda.core.node.services.vault.Sort$Attribute
  @Nullable
  public final String getAttributeChild()
  @NotNull
  public final String getAttributeParent()
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.Sort$CommonStateAttribute valueOf(String)
  public static net.corda.core.node.services.vault.Sort$CommonStateAttribute[] values()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.Sort$Direction extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.Sort$Direction valueOf(String)
  public static net.corda.core.node.services.vault.Sort$Direction[] values()
##
@DoNotImplement
@CordaSerializable
public static final class net.corda.core.node.services.vault.Sort$FungibleStateAttribute extends java.lang.Enum implements net.corda.core.node.services.vault.Sort$Attribute
  @NotNull
  public final String getAttributeName()
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.Sort$FungibleStateAttribute valueOf(String)
  public static net.corda.core.node.services.vault.Sort$FungibleStateAttribute[] values()
##
@DoNotImplement
@CordaSerializable
public static final class net.corda.core.node.services.vault.Sort$LinearStateAttribute extends java.lang.Enum implements net.corda.core.node.services.vault.Sort$Attribute
  @NotNull
  public final String getAttributeName()
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.Sort$LinearStateAttribute valueOf(String)
  public static net.corda.core.node.services.vault.Sort$LinearStateAttribute[] values()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.Sort$SortColumn extends java.lang.Object
  public <init>(net.corda.core.node.services.vault.SortAttribute, net.corda.core.node.services.vault.Sort$Direction)
  public <init>(net.corda.core.node.services.vault.SortAttribute, net.corda.core.node.services.vault.Sort$Direction, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.node.services.vault.SortAttribute component1()
  @NotNull
  public final net.corda.core.node.services.vault.Sort$Direction component2()
  @NotNull
  public final net.corda.core.node.services.vault.Sort$SortColumn copy(net.corda.core.node.services.vault.SortAttribute, net.corda.core.node.services.vault.Sort$Direction)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.Sort$Direction getDirection()
  @NotNull
  public final net.corda.core.node.services.vault.SortAttribute getSortAttribute()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public static final class net.corda.core.node.services.vault.Sort$VaultStateAttribute extends java.lang.Enum implements net.corda.core.node.services.vault.Sort$Attribute
  @NotNull
  public final String getAttributeName()
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.node.services.vault.Sort$VaultStateAttribute valueOf(String)
  public static net.corda.core.node.services.vault.Sort$VaultStateAttribute[] values()
##
@CordaSerializable
public abstract class net.corda.core.node.services.vault.SortAttribute extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.SortAttribute$Custom extends net.corda.core.node.services.vault.SortAttribute
  public <init>(Class, String)
  @NotNull
  public final Class component1()
  @NotNull
  public final String component2()
  @NotNull
  public final net.corda.core.node.services.vault.SortAttribute$Custom copy(Class, String)
  public boolean equals(Object)
  @NotNull
  public final Class getEntityStateClass()
  @NotNull
  public final String getEntityStateColumnName()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.node.services.vault.SortAttribute$Standard extends net.corda.core.node.services.vault.SortAttribute
  public <init>(net.corda.core.node.services.vault.Sort$Attribute)
  @NotNull
  public final net.corda.core.node.services.vault.Sort$Attribute component1()
  @NotNull
  public final net.corda.core.node.services.vault.SortAttribute$Standard copy(net.corda.core.node.services.vault.Sort$Attribute)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.services.vault.Sort$Attribute getAttribute()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.observable.Observables extends java.lang.Object
  @NotNull
  public static final rx.Observable continueOnError(rx.Observable)
##
public final class net.corda.core.schemas.CommonSchema extends java.lang.Object
  @NotNull
  public static final net.corda.core.schemas.CommonSchema INSTANCE
##
public final class net.corda.core.schemas.CommonSchemaV1 extends net.corda.core.schemas.MappedSchema
  @NotNull
  public String getMigrationResource()
  @NotNull
  public static final net.corda.core.schemas.CommonSchemaV1 INSTANCE
##
@MappedSuperclass
@CordaSerializable
public static class net.corda.core.schemas.CommonSchemaV1$FungibleState extends net.corda.core.schemas.PersistentState
  public <init>()
  public <init>(java.util.Set, net.corda.core.identity.AbstractParty, long, net.corda.core.identity.AbstractParty, byte[])
  public <init>(java.util.Set, net.corda.core.identity.AbstractParty, long, net.corda.core.identity.AbstractParty, byte[], int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public net.corda.core.identity.AbstractParty getIssuer()
  @NotNull
  public byte[] getIssuerRef()
  @NotNull
  public net.corda.core.identity.AbstractParty getOwner()
  @Nullable
  public java.util.Set getParticipants()
  public long getQuantity()
  public void setIssuer(net.corda.core.identity.AbstractParty)
  public void setIssuerRef(byte[])
  public void setOwner(net.corda.core.identity.AbstractParty)
  public void setParticipants(java.util.Set)
  public void setQuantity(long)
##
@MappedSuperclass
@CordaSerializable
public static class net.corda.core.schemas.CommonSchemaV1$LinearState extends net.corda.core.schemas.PersistentState
  public <init>()
  public <init>(java.util.Set, String, java.util.UUID)
  public <init>(java.util.Set, String, java.util.UUID, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.contracts.UniqueIdentifier, java.util.Set)
  @Nullable
  public String getExternalId()
  @Nullable
  public java.util.Set getParticipants()
  @NotNull
  public java.util.UUID getUuid()
  public void setExternalId(String)
  public void setParticipants(java.util.Set)
  public void setUuid(java.util.UUID)
##
public interface net.corda.core.schemas.DirectStatePersistable extends net.corda.core.schemas.StatePersistable
  @Nullable
  public abstract net.corda.core.schemas.PersistentStateRef getStateRef()
##
public interface net.corda.core.schemas.IndirectStatePersistable extends net.corda.core.schemas.StatePersistable
  @NotNull
  public abstract T getCompositeKey()
##
public class net.corda.core.schemas.MappedSchema extends java.lang.Object
  public <init>(Class, int, Iterable)
  public boolean equals(Object)
  @NotNull
  public final Iterable getMappedTypes()
  @Nullable
  public String getMigrationResource()
  @NotNull
  public final String getName()
  public final int getVersion()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.schemas.MappedSchemaValidator extends java.lang.Object
  @NotNull
  public final java.util.List crossReferencesToOtherMappedSchema(net.corda.core.schemas.MappedSchema)
  @NotNull
  public final java.util.List fieldsFromOtherMappedSchema(net.corda.core.schemas.MappedSchema)
  @NotNull
  public final java.util.List methodsFromOtherMappedSchema(net.corda.core.schemas.MappedSchema)
  @NotNull
  public static final net.corda.core.schemas.MappedSchemaValidator INSTANCE
##
public static final class net.corda.core.schemas.MappedSchemaValidator$SchemaCrossReferenceReport extends java.lang.Object
  public <init>(String, String, String, String, String)
  @NotNull
  public String toString()
  @NotNull
  public final String toWarning()
##
@MappedSuperclass
@CordaSerializable
public class net.corda.core.schemas.PersistentState extends java.lang.Object implements net.corda.core.schemas.DirectStatePersistable
  public <init>()
  public <init>(net.corda.core.schemas.PersistentStateRef)
  public <init>(net.corda.core.schemas.PersistentStateRef, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public net.corda.core.schemas.PersistentStateRef getStateRef()
  public void setStateRef(net.corda.core.schemas.PersistentStateRef)
##
@Embeddable
@Immutable
public class net.corda.core.schemas.PersistentStateRef extends java.lang.Object implements java.io.Serializable
  public <init>()
  public <init>(String, int)
  public <init>(net.corda.core.contracts.StateRef)
  @NotNull
  public final String component1()
  public final int component2()
  @NotNull
  public final net.corda.core.schemas.PersistentStateRef copy(String, int)
  public boolean equals(Object)
  public int getIndex()
  @NotNull
  public String getTxId()
  public int hashCode()
  public void setIndex(int)
  public void setTxId(String)
  @NotNull
  public String toString()
##
@CordaSerializable
public interface net.corda.core.schemas.QueryableState extends net.corda.core.contracts.ContractState
  @NotNull
  public abstract net.corda.core.schemas.PersistentState generateMappedObject(net.corda.core.schemas.MappedSchema)
  @NotNull
  public abstract Iterable supportedSchemas()
##
public interface net.corda.core.schemas.StatePersistable
##
public interface net.corda.core.serialization.CheckpointCustomSerializer
  public abstract OBJ fromProxy(PROXY)
  public abstract PROXY toProxy(OBJ)
##
public interface net.corda.core.serialization.ClassWhitelist
  public abstract boolean hasListed(Class)
##
public @interface net.corda.core.serialization.ConstructorForDeserialization
##
public final class net.corda.core.serialization.ContextPropertyKeys extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.serialization.ContextPropertyKeys valueOf(String)
  public static net.corda.core.serialization.ContextPropertyKeys[] values()
##
public @interface net.corda.core.serialization.CordaSerializable
##
public @interface net.corda.core.serialization.CordaSerializationTransformEnumDefault
  public abstract String new()
  public abstract String old()
##
public @interface net.corda.core.serialization.CordaSerializationTransformEnumDefaults
  public abstract net.corda.core.serialization.CordaSerializationTransformEnumDefault[] value()
##
public @interface net.corda.core.serialization.CordaSerializationTransformRename
  public abstract String from()
  public abstract String to()
##
public @interface net.corda.core.serialization.CordaSerializationTransformRenames
  public abstract net.corda.core.serialization.CordaSerializationTransformRename[] value()
##
public interface net.corda.core.serialization.CustomSerializationScheme
  @NotNull
  public abstract T deserialize(net.corda.core.utilities.ByteSequence, Class, net.corda.core.serialization.SerializationSchemeContext)
  public abstract int getSchemeId()
  @NotNull
  public abstract net.corda.core.utilities.ByteSequence serialize(T, net.corda.core.serialization.SerializationSchemeContext)
##
public @interface net.corda.core.serialization.DeprecatedConstructorForDeserialization
  public abstract int version()
##
@DoNotImplement
public interface net.corda.core.serialization.EncodingWhitelist
  public abstract boolean acceptEncoding(net.corda.core.serialization.SerializationEncoding)
##
@CordaSerializable
public final class net.corda.core.serialization.MissingAttachmentsException extends net.corda.core.CordaException
  public <init>(java.util.List)
  public <init>(java.util.List, String)
  @NotNull
  public final java.util.List getIds()
##
@CordaSerializable
public final class net.corda.core.serialization.MissingAttachmentsRuntimeException extends net.corda.core.CordaRuntimeException
  public <init>(java.util.List)
  public <init>(java.util.List, String)
  public <init>(java.util.List, String, Throwable)
  @NotNull
  public final java.util.List getIds()
##
public final class net.corda.core.serialization.ObjectWithCompatibleContext extends java.lang.Object
  public <init>(T, net.corda.core.serialization.SerializationContext)
  @NotNull
  public final T component1()
  @NotNull
  public final net.corda.core.serialization.SerializationContext component2()
  @NotNull
  public final net.corda.core.serialization.ObjectWithCompatibleContext copy(T, net.corda.core.serialization.SerializationContext)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.serialization.SerializationContext getContext()
  @NotNull
  public final T getObj()
  public int hashCode()
  @NotNull
  public String toString()
##
public @interface net.corda.core.serialization.SerializableCalculatedProperty
##
public final class net.corda.core.serialization.SerializationAPIKt extends java.lang.Object
  public static final T deserialize(java.sql.Blob, net.corda.core.serialization.SerializationFactory, net.corda.core.serialization.SerializationContext)
  public static final T deserialize(net.corda.core.serialization.SerializedBytes, net.corda.core.serialization.SerializationFactory, net.corda.core.serialization.SerializationContext)
  public static final T deserialize(net.corda.core.utilities.ByteSequence, net.corda.core.serialization.SerializationFactory, net.corda.core.serialization.SerializationContext)
  public static final T deserialize(byte[], net.corda.core.serialization.SerializationFactory, net.corda.core.serialization.SerializationContext)
  public static final net.corda.core.serialization.ObjectWithCompatibleContext deserializeWithCompatibleContext(net.corda.core.utilities.ByteSequence, net.corda.core.serialization.SerializationFactory, net.corda.core.serialization.SerializationContext)
  @NotNull
  public static final net.corda.core.serialization.SerializedBytes serialize(T, net.corda.core.serialization.SerializationFactory, net.corda.core.serialization.SerializationContext)
  @NotNull
  public static final net.corda.core.serialization.SerializationContext withWhitelist(net.corda.core.serialization.SerializationContext, java.util.List)
  public static final int AMQP_ENVELOPE_CACHE_INITIAL_CAPACITY = 256
  @NotNull
  public static final String AMQP_ENVELOPE_CACHE_PROPERTY = "AMQP_ENVELOPE_CACHE"
  @NotNull
  public static final String DESERIALIZATION_CACHE_PROPERTY = "DESERIALIZATION_CACHE"
##
@DoNotImplement
public interface net.corda.core.serialization.SerializationContext
  public abstract boolean getCarpenterDisabled()
  @NotNull
  public abstract java.util.Set getCustomSerializers()
  @NotNull
  public abstract ClassLoader getDeserializationClassLoader()
  @Nullable
  public abstract net.corda.core.serialization.SerializationEncoding getEncoding()
  @NotNull
  public abstract net.corda.core.serialization.EncodingWhitelist getEncodingWhitelist()
  public abstract boolean getLenientCarpenterEnabled()
  public abstract boolean getObjectReferencesEnabled()
  @NotNull
  public abstract net.corda.core.utilities.ByteSequence getPreferredSerializationVersion()
  public abstract boolean getPreventDataLoss()
  @NotNull
  public abstract java.util.Map getProperties()
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext$UseCase getUseCase()
  @NotNull
  public abstract net.corda.core.serialization.ClassWhitelist getWhitelist()
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withAttachmentsClassLoader(java.util.List)
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withClassLoader(ClassLoader)
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withCustomSerializers(java.util.Set)
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withEncoding(net.corda.core.serialization.SerializationEncoding)
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withEncodingWhitelist(net.corda.core.serialization.EncodingWhitelist)
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withLenientCarpenter()
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withPreferredSerializationVersion(net.corda.core.utilities.ByteSequence)
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withPreventDataLoss()
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withProperties(java.util.Map)
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withProperty(Object, Object)
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withWhitelisted(Class)
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withoutCarpenter()
  @NotNull
  public abstract net.corda.core.serialization.SerializationContext withoutReferences()
##
public static final class net.corda.core.serialization.SerializationContext$UseCase extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.serialization.SerializationContext$UseCase valueOf(String)
  public static net.corda.core.serialization.SerializationContext$UseCase[] values()
##
public interface net.corda.core.serialization.SerializationCustomSerializer
  public abstract OBJ fromProxy(PROXY)
  public abstract PROXY toProxy(OBJ)
##
public final class net.corda.core.serialization.SerializationDefaults extends java.lang.Object
  @NotNull
  public final net.corda.core.serialization.SerializationContext getP2P_CONTEXT()
  @NotNull
  public final net.corda.core.serialization.SerializationContext getRPC_CLIENT_CONTEXT()
  @NotNull
  public final net.corda.core.serialization.SerializationContext getRPC_SERVER_CONTEXT()
  @NotNull
  public final net.corda.core.serialization.SerializationFactory getSERIALIZATION_FACTORY()
  @NotNull
  public final net.corda.core.serialization.SerializationContext getSTORAGE_CONTEXT()
  @NotNull
  public static final net.corda.core.serialization.SerializationDefaults INSTANCE
##
@DoNotImplement
public interface net.corda.core.serialization.SerializationEncoding
##
public abstract class net.corda.core.serialization.SerializationFactory extends java.lang.Object
  public <init>()
  public final T asCurrent(kotlin.jvm.functions.Function1)
  @NotNull
  public abstract T deserialize(net.corda.core.utilities.ByteSequence, Class, net.corda.core.serialization.SerializationContext)
  @NotNull
  public abstract net.corda.core.serialization.ObjectWithCompatibleContext deserializeWithCompatibleContext(net.corda.core.utilities.ByteSequence, Class, net.corda.core.serialization.SerializationContext)
  @Nullable
  public final net.corda.core.serialization.SerializationContext getCurrentContext()
  @NotNull
  public final net.corda.core.serialization.SerializationContext getDefaultContext()
  @NotNull
  public abstract net.corda.core.serialization.SerializedBytes serialize(T, net.corda.core.serialization.SerializationContext)
  public final T withCurrentContext(net.corda.core.serialization.SerializationContext, kotlin.jvm.functions.Function0)
  @NotNull
  public static final net.corda.core.serialization.SerializationFactory$Companion Companion
##
public static final class net.corda.core.serialization.SerializationFactory$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final net.corda.core.serialization.SerializationFactory getCurrentFactory()
  @NotNull
  public final net.corda.core.serialization.SerializationFactory getDefaultFactory()
##
@DoNotImplement
public interface net.corda.core.serialization.SerializationSchemeContext
  @NotNull
  public abstract ClassLoader getDeserializationClassLoader()
  @NotNull
  public abstract java.util.Map getProperties()
  @NotNull
  public abstract net.corda.core.serialization.ClassWhitelist getWhitelist()
##
public interface net.corda.core.serialization.SerializationToken
  @NotNull
  public abstract Object fromToken(net.corda.core.serialization.SerializeAsTokenContext)
##
public interface net.corda.core.serialization.SerializationWhitelist
  @NotNull
  public abstract java.util.List getWhitelist()
##
@CordaSerializable
public interface net.corda.core.serialization.SerializeAsToken
  @NotNull
  public abstract net.corda.core.serialization.SerializationToken toToken(net.corda.core.serialization.SerializeAsTokenContext)
##
public interface net.corda.core.serialization.SerializeAsTokenContext
  @NotNull
  public abstract net.corda.core.node.ServiceHub getServiceHub()
  @NotNull
  public abstract net.corda.core.serialization.SerializeAsToken getSingleton(String)
  public abstract void putSingleton(net.corda.core.serialization.SerializeAsToken)
##
@CordaSerializable
public final class net.corda.core.serialization.SerializedBytes extends net.corda.core.utilities.OpaqueBytes
  public <init>(byte[])
  @NotNull
  public static final net.corda.core.serialization.SerializedBytes from(T)
  @NotNull
  public static final net.corda.core.serialization.SerializedBytes from(T, net.corda.core.serialization.SerializationFactory)
  @NotNull
  public static final net.corda.core.serialization.SerializedBytes from(T, net.corda.core.serialization.SerializationFactory, net.corda.core.serialization.SerializationContext)
  @NotNull
  public final net.corda.core.crypto.SecureHash getHash()
  @NotNull
  public static final net.corda.core.serialization.SerializedBytes$Companion Companion
##
public static final class net.corda.core.serialization.SerializedBytes$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.serialization.SerializedBytes from(T)
  @NotNull
  public final net.corda.core.serialization.SerializedBytes from(T, net.corda.core.serialization.SerializationFactory)
  @NotNull
  public final net.corda.core.serialization.SerializedBytes from(T, net.corda.core.serialization.SerializationFactory, net.corda.core.serialization.SerializationContext)
##
public final class net.corda.core.serialization.SingletonSerializationToken extends java.lang.Object implements net.corda.core.serialization.SerializationToken
  public <init>(String, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public net.corda.core.serialization.SerializeAsToken fromToken(net.corda.core.serialization.SerializeAsTokenContext)
  @NotNull
  public final net.corda.core.serialization.SingletonSerializationToken registerWithContext(net.corda.core.serialization.SerializeAsTokenContext, net.corda.core.serialization.SerializeAsToken)
  @NotNull
  public static final net.corda.core.serialization.SingletonSerializationToken$Companion Companion
##
public static final class net.corda.core.serialization.SingletonSerializationToken$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.serialization.SingletonSerializationToken singletonSerializationToken(Class)
##
@CordaSerializable
public abstract class net.corda.core.serialization.SingletonSerializeAsToken extends java.lang.Object implements net.corda.core.serialization.SerializeAsToken
  public <init>()
  @NotNull
  public net.corda.core.serialization.SingletonSerializationToken toToken(net.corda.core.serialization.SerializeAsTokenContext)
##
@DoNotImplement
public abstract class net.corda.core.transactions.BaseTransaction extends java.lang.Object implements net.corda.core.contracts.NamedByHash
  public <init>()
  protected void checkBaseInvariants()
  @NotNull
  public final java.util.List filterOutRefs(Class, java.util.function.Predicate)
  public final java.util.List filterOutRefs(kotlin.jvm.functions.Function1)
  @NotNull
  public final java.util.List filterOutputs(Class, java.util.function.Predicate)
  public final java.util.List filterOutputs(kotlin.jvm.functions.Function1)
  @NotNull
  public final net.corda.core.contracts.StateAndRef findOutRef(Class, java.util.function.Predicate)
  public final net.corda.core.contracts.StateAndRef findOutRef(kotlin.jvm.functions.Function1)
  @NotNull
  public final T findOutput(Class, java.util.function.Predicate)
  public final T findOutput(kotlin.jvm.functions.Function1)
  @NotNull
  public abstract java.util.List getInputs()
  @Nullable
  public abstract net.corda.core.identity.Party getNotary()
  @NotNull
  public final net.corda.core.contracts.ContractState getOutput(int)
  @NotNull
  public final java.util.List getOutputStates()
  @NotNull
  public abstract java.util.List getOutputs()
  @NotNull
  public abstract java.util.List getReferences()
  @NotNull
  public final net.corda.core.contracts.StateAndRef outRef(int)
  @NotNull
  public final net.corda.core.contracts.StateAndRef outRef(net.corda.core.contracts.ContractState)
  public final java.util.List outRefsOfType()
  @NotNull
  public final java.util.List outRefsOfType(Class)
  public final java.util.List outputsOfType()
  @NotNull
  public final java.util.List outputsOfType(Class)
  @NotNull
  public String toString()
##
@CordaSerializable
public class net.corda.core.transactions.ComponentGroup extends java.lang.Object
  public <init>(int, java.util.List)
  @NotNull
  public java.util.List getComponents()
  public int getGroupIndex()
##
@CordaSerializable
public final class net.corda.core.transactions.ComponentVisibilityException extends net.corda.core.CordaException
  public <init>(net.corda.core.crypto.SecureHash, String)
  @NotNull
  public final net.corda.core.crypto.SecureHash getId()
  @NotNull
  public final String getReason()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.transactions.ContractUpgradeFilteredTransaction extends net.corda.core.transactions.CoreTransaction
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.Map, java.util.Map)
  public <init>(java.util.Map, java.util.Map, net.corda.core.crypto.DigestService)
  @NotNull
  public final java.util.Map component1()
  @NotNull
  public final java.util.Map component2()
  @NotNull
  public final net.corda.core.crypto.DigestService component3()
  @NotNull
  public final net.corda.core.transactions.ContractUpgradeFilteredTransaction copy(java.util.Map, java.util.Map)
  @NotNull
  public final net.corda.core.transactions.ContractUpgradeFilteredTransaction copy(java.util.Map, java.util.Map, net.corda.core.crypto.DigestService)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.DigestService getDigestService()
  @NotNull
  public final java.util.Map getHiddenComponents()
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public java.util.List getInputs()
  @Nullable
  public net.corda.core.crypto.SecureHash getNetworkParametersHash()
  @NotNull
  public net.corda.core.identity.Party getNotary()
  @NotNull
  public java.util.List getOutputs()
  @NotNull
  public java.util.List getReferences()
  @NotNull
  public final java.util.Map getVisibleComponents()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.transactions.ContractUpgradeFilteredTransaction$FilteredComponent extends java.lang.Object
  public <init>(net.corda.core.utilities.OpaqueBytes, net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.utilities.OpaqueBytes getComponent()
  @NotNull
  public final net.corda.core.crypto.SecureHash getNonce()
##
@DoNotImplement
public final class net.corda.core.transactions.ContractUpgradeLedgerTransaction extends net.corda.core.transactions.FullTransaction implements net.corda.core.transactions.TransactionWithSignatures
  public <init>(java.util.List, net.corda.core.identity.Party, net.corda.core.contracts.Attachment, String, net.corda.core.contracts.Attachment, net.corda.core.crypto.SecureHash, net.corda.core.contracts.PrivacySalt, java.util.List, net.corda.core.node.NetworkParameters)
  public <init>(java.util.List, net.corda.core.identity.Party, net.corda.core.contracts.Attachment, net.corda.core.contracts.Attachment, net.corda.core.crypto.SecureHash, net.corda.core.contracts.PrivacySalt, java.util.List, net.corda.core.node.NetworkParameters, net.corda.core.contracts.UpgradedContract, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.List component1()
  @NotNull
  public final net.corda.core.identity.Party component2()
  @NotNull
  public final net.corda.core.contracts.Attachment component3()
  @NotNull
  public final String component4()
  @NotNull
  public final net.corda.core.contracts.Attachment component5()
  @NotNull
  public final net.corda.core.crypto.SecureHash component6()
  @NotNull
  public final net.corda.core.contracts.PrivacySalt component7()
  @NotNull
  public final java.util.List component8()
  @NotNull
  public final net.corda.core.node.NetworkParameters component9()
  @NotNull
  public final net.corda.core.transactions.ContractUpgradeLedgerTransaction copy(java.util.List, net.corda.core.identity.Party, net.corda.core.contracts.Attachment, String, net.corda.core.contracts.Attachment, net.corda.core.crypto.SecureHash, net.corda.core.contracts.PrivacySalt, java.util.List, net.corda.core.node.NetworkParameters)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public java.util.List getInputs()
  @NotNull
  public java.util.List getKeyDescriptions(java.util.Set)
  @NotNull
  public final net.corda.core.contracts.Attachment getLegacyContractAttachment()
  @NotNull
  public net.corda.core.node.NetworkParameters getNetworkParameters()
  @NotNull
  public net.corda.core.identity.Party getNotary()
  @NotNull
  public java.util.List getOutputs()
  @NotNull
  public final net.corda.core.contracts.PrivacySalt getPrivacySalt()
  @NotNull
  public java.util.List getReferences()
  @NotNull
  public java.util.Set getRequiredSigningKeys()
  @NotNull
  public java.util.List getSigs()
  @NotNull
  public final net.corda.core.contracts.Attachment getUpgradedContractAttachment()
  @NotNull
  public final String getUpgradedContractClassName()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.transactions.ContractUpgradeLedgerTransaction$Companion Companion
##
public static final class net.corda.core.transactions.ContractUpgradeLedgerTransaction$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.transactions.ContractUpgradeWireTransaction extends net.corda.core.transactions.CoreTransaction
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, net.corda.core.contracts.PrivacySalt)
  public <init>(java.util.List, net.corda.core.contracts.PrivacySalt, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(java.util.List, net.corda.core.contracts.PrivacySalt, net.corda.core.crypto.DigestService)
  @NotNull
  public final net.corda.core.transactions.ContractUpgradeFilteredTransaction buildFilteredTransaction()
  @NotNull
  public final java.util.List component1()
  @NotNull
  public final net.corda.core.contracts.PrivacySalt component2()
  @NotNull
  public final net.corda.core.crypto.DigestService component3()
  @NotNull
  public final net.corda.core.transactions.ContractUpgradeWireTransaction copy(java.util.List, net.corda.core.contracts.PrivacySalt)
  @NotNull
  public final net.corda.core.transactions.ContractUpgradeWireTransaction copy(java.util.List, net.corda.core.contracts.PrivacySalt, net.corda.core.crypto.DigestService)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.DigestService getDigestService()
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public java.util.List getInputs()
  @NotNull
  public final net.corda.core.crypto.SecureHash getLegacyContractAttachmentId()
  @Nullable
  public net.corda.core.crypto.SecureHash getNetworkParametersHash()
  @NotNull
  public net.corda.core.identity.Party getNotary()
  @NotNull
  public java.util.List getOutputs()
  @NotNull
  public final net.corda.core.contracts.PrivacySalt getPrivacySalt()
  @NotNull
  public java.util.List getReferences()
  @NotNull
  public final java.util.List getSerializedComponents()
  @NotNull
  public final net.corda.core.crypto.SecureHash getUpgradedContractAttachmentId()
  @NotNull
  public final String getUpgradedContractClassName()
  public int hashCode()
  @NotNull
  public final net.corda.core.transactions.ContractUpgradeLedgerTransaction resolve(net.corda.core.node.ServicesForResolution, java.util.List)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.transactions.ContractUpgradeWireTransaction$Companion Companion
##
public static final class net.corda.core.transactions.ContractUpgradeWireTransaction$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
public static final class net.corda.core.transactions.ContractUpgradeWireTransaction$Component extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.transactions.ContractUpgradeWireTransaction$Component valueOf(String)
  public static net.corda.core.transactions.ContractUpgradeWireTransaction$Component[] values()
##
@DoNotImplement
@CordaSerializable
public abstract class net.corda.core.transactions.CoreTransaction extends net.corda.core.transactions.BaseTransaction
  public <init>()
  @NotNull
  public abstract java.util.List getInputs()
  @Nullable
  public abstract net.corda.core.crypto.SecureHash getNetworkParametersHash()
  @NotNull
  public abstract java.util.List getReferences()
##
@CordaSerializable
public final class net.corda.core.transactions.FilteredComponentGroup extends net.corda.core.transactions.ComponentGroup
  public <init>(int, java.util.List, java.util.List, net.corda.core.crypto.PartialMerkleTree)
  public final int component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final java.util.List component3()
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree component4()
  @NotNull
  public final net.corda.core.transactions.FilteredComponentGroup copy(int, java.util.List, java.util.List, net.corda.core.crypto.PartialMerkleTree)
  public boolean equals(Object)
  @NotNull
  public java.util.List getComponents()
  public int getGroupIndex()
  @NotNull
  public final java.util.List getNonces()
  @NotNull
  public final net.corda.core.crypto.PartialMerkleTree getPartialMerkleTree()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.transactions.FilteredTransaction extends net.corda.core.transactions.TraversableTransaction
  @DeprecatedConstructorForDeserialization
  public <init>(net.corda.core.crypto.SecureHash, java.util.List, java.util.List)
  public <init>(net.corda.core.crypto.SecureHash, java.util.List, java.util.List, net.corda.core.crypto.DigestService)
  @NotNull
  public static final net.corda.core.transactions.FilteredTransaction buildFilteredTransaction(net.corda.core.transactions.WireTransaction, java.util.function.Predicate)
  public final void checkAllComponentsVisible(net.corda.core.contracts.ComponentGroupEnum)
  public final void checkCommandVisibility(java.security.PublicKey)
  public final boolean checkWithFun(kotlin.jvm.functions.Function1)
  @NotNull
  public final java.util.List getFilteredComponentGroups()
  @NotNull
  public final java.util.List getGroupHashes()
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  public final void verify()
  @NotNull
  public static final net.corda.core.transactions.FilteredTransaction$Companion Companion
##
public static final class net.corda.core.transactions.FilteredTransaction$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.transactions.FilteredTransaction buildFilteredTransaction(net.corda.core.transactions.WireTransaction, java.util.function.Predicate)
##
@CordaSerializable
public final class net.corda.core.transactions.FilteredTransactionVerificationException extends net.corda.core.CordaException
  public <init>(net.corda.core.crypto.SecureHash, String)
  @NotNull
  public final net.corda.core.crypto.SecureHash getId()
  @NotNull
  public final String getReason()
##
@DoNotImplement
public abstract class net.corda.core.transactions.FullTransaction extends net.corda.core.transactions.BaseTransaction
  public <init>()
  protected void checkBaseInvariants()
  protected final void checkNotaryWhitelisted()
  @NotNull
  public abstract java.util.List getInputs()
  @Nullable
  public abstract net.corda.core.node.NetworkParameters getNetworkParameters()
  @NotNull
  public abstract java.util.List getReferences()
##
@DoNotImplement
public final class net.corda.core.transactions.LedgerTransaction extends net.corda.core.transactions.FullTransaction
  public <init>(java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.crypto.SecureHash, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt)
  public <init>(java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.crypto.SecureHash, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt, net.corda.core.node.NetworkParameters)
  public <init>(java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.crypto.SecureHash, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt, net.corda.core.node.NetworkParameters, java.util.List, java.util.List, java.util.List, java.util.List, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, net.corda.core.serialization.internal.AttachmentsClassLoaderCache, net.corda.core.crypto.DigestService, kotlin.jvm.internal.DefaultConstructorMarker)
  public final java.util.List commandsOfType()
  @NotNull
  public final java.util.List commandsOfType(Class)
  @NotNull
  public final java.util.List component1()
  @NotNull
  public final java.util.List component10()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final java.util.List component3()
  @NotNull
  public final java.util.List component4()
  @NotNull
  public final net.corda.core.crypto.SecureHash component5()
  @Nullable
  public final net.corda.core.identity.Party component6()
  @Nullable
  public final net.corda.core.contracts.TimeWindow component7()
  @NotNull
  public final net.corda.core.contracts.PrivacySalt component8()
  @Nullable
  public final net.corda.core.node.NetworkParameters component9()
  @NotNull
  public final net.corda.core.transactions.LedgerTransaction copy(java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.crypto.SecureHash, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt)
  @NotNull
  public final net.corda.core.transactions.LedgerTransaction copy(java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.crypto.SecureHash, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt, net.corda.core.node.NetworkParameters)
  public boolean equals(Object)
  @NotNull
  public final java.util.List filterCommands(Class, java.util.function.Predicate)
  public final java.util.List filterCommands(kotlin.jvm.functions.Function1)
  @NotNull
  public final java.util.List filterInRefs(Class, java.util.function.Predicate)
  public final java.util.List filterInRefs(kotlin.jvm.functions.Function1)
  @NotNull
  public final java.util.List filterInputs(Class, java.util.function.Predicate)
  public final java.util.List filterInputs(kotlin.jvm.functions.Function1)
  @NotNull
  public final java.util.List filterReferenceInputRefs(Class, java.util.function.Predicate)
  public final java.util.List filterReferenceInputRefs(kotlin.jvm.functions.Function1)
  @NotNull
  public final java.util.List filterReferenceInputs(Class, java.util.function.Predicate)
  public final java.util.List filterReferenceInputs(kotlin.jvm.functions.Function1)
  @NotNull
  public final net.corda.core.contracts.Command findCommand(Class, java.util.function.Predicate)
  public final net.corda.core.contracts.Command findCommand(kotlin.jvm.functions.Function1)
  @NotNull
  public final net.corda.core.contracts.StateAndRef findInRef(Class, java.util.function.Predicate)
  public final net.corda.core.contracts.StateAndRef findInRef(kotlin.jvm.functions.Function1)
  @NotNull
  public final T findInput(Class, java.util.function.Predicate)
  public final T findInput(kotlin.jvm.functions.Function1)
  @NotNull
  public final T findReference(Class, java.util.function.Predicate)
  public final T findReference(kotlin.jvm.functions.Function1)
  @NotNull
  public final net.corda.core.contracts.StateAndRef findReferenceInputRef(Class, java.util.function.Predicate)
  public final net.corda.core.contracts.StateAndRef findReferenceInputRef(kotlin.jvm.functions.Function1)
  @NotNull
  public final net.corda.core.contracts.Attachment getAttachment(int)
  @NotNull
  public final net.corda.core.contracts.Attachment getAttachment(net.corda.core.crypto.SecureHash)
  @NotNull
  public final java.util.List getAttachments()
  @NotNull
  public final net.corda.core.contracts.Command getCommand(int)
  @NotNull
  public final java.util.List getCommands()
  @NotNull
  public final net.corda.core.crypto.DigestService getDigestService()
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public final net.corda.core.contracts.ContractState getInput(int)
  @NotNull
  public final java.util.List getInputStates()
  @NotNull
  public java.util.List getInputs()
  @Nullable
  public net.corda.core.node.NetworkParameters getNetworkParameters()
  @Nullable
  public net.corda.core.identity.Party getNotary()
  @NotNull
  public java.util.List getOutputs()
  @NotNull
  public final net.corda.core.contracts.PrivacySalt getPrivacySalt()
  @NotNull
  public final net.corda.core.contracts.ContractState getReferenceInput(int)
  @NotNull
  public final java.util.List getReferenceStates()
  @NotNull
  public java.util.List getReferences()
  @Nullable
  public final net.corda.core.contracts.TimeWindow getTimeWindow()
  @NotNull
  public final java.util.List groupStates(Class, kotlin.jvm.functions.Function1)
  public final java.util.List groupStates(kotlin.jvm.functions.Function1)
  public int hashCode()
  @NotNull
  public final net.corda.core.contracts.StateAndRef inRef(int)
  public final java.util.List inRefsOfType()
  @NotNull
  public final java.util.List inRefsOfType(Class)
  public final java.util.List inputsOfType()
  @NotNull
  public final java.util.List inputsOfType(Class)
  public final java.util.List referenceInputRefsOfType()
  @NotNull
  public final java.util.List referenceInputRefsOfType(Class)
  public final java.util.List referenceInputsOfType()
  @NotNull
  public final java.util.List referenceInputsOfType(Class)
  @NotNull
  public String toString()
  public final void verify()
  @NotNull
  public static final net.corda.core.transactions.LedgerTransaction$Companion Companion
##
public static final class net.corda.core.transactions.LedgerTransaction$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
public static final class net.corda.core.transactions.LedgerTransaction$InOutGroup extends java.lang.Object
  public <init>(java.util.List, java.util.List, K)
  @NotNull
  public final java.util.List component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final K component3()
  @NotNull
  public final net.corda.core.transactions.LedgerTransaction$InOutGroup copy(java.util.List, java.util.List, K)
  public boolean equals(Object)
  @NotNull
  public final K getGroupingKey()
  @NotNull
  public final java.util.List getInputs()
  @NotNull
  public final java.util.List getOutputs()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.core.transactions.LedgerTransactionKt extends java.lang.Object
##
@CordaSerializable
public final class net.corda.core.transactions.MissingContractAttachments extends net.corda.core.flows.FlowException
  public <init>(java.util.List)
  public <init>(java.util.List, String)
  public <init>(java.util.List, String, Integer)
  public <init>(java.util.List, String, Integer, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.List getStates()
##
@CordaSerializable
public final class net.corda.core.transactions.NetworkParametersHash extends java.lang.Object
  public <init>(net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.crypto.SecureHash component1()
  @NotNull
  public final net.corda.core.transactions.NetworkParametersHash copy(net.corda.core.crypto.SecureHash)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.SecureHash getHash()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public final class net.corda.core.transactions.NotaryChangeLedgerTransaction extends net.corda.core.transactions.FullTransaction implements net.corda.core.transactions.TransactionWithSignatures
  public <init>(java.util.List, net.corda.core.identity.Party, net.corda.core.identity.Party, net.corda.core.crypto.SecureHash, java.util.List)
  public <init>(java.util.List, net.corda.core.identity.Party, net.corda.core.identity.Party, net.corda.core.crypto.SecureHash, java.util.List, net.corda.core.node.NetworkParameters, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.List component1()
  @NotNull
  public final net.corda.core.identity.Party component2()
  @NotNull
  public final net.corda.core.identity.Party component3()
  @NotNull
  public final net.corda.core.crypto.SecureHash component4()
  @NotNull
  public final java.util.List component5()
  @Nullable
  public final net.corda.core.node.NetworkParameters component6()
  @NotNull
  public final net.corda.core.transactions.NotaryChangeLedgerTransaction copy(java.util.List, net.corda.core.identity.Party, net.corda.core.identity.Party, net.corda.core.crypto.SecureHash, java.util.List)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public java.util.List getInputs()
  @NotNull
  public java.util.List getKeyDescriptions(java.util.Set)
  @Nullable
  public net.corda.core.node.NetworkParameters getNetworkParameters()
  @NotNull
  public final net.corda.core.identity.Party getNewNotary()
  @NotNull
  public net.corda.core.identity.Party getNotary()
  @NotNull
  public java.util.List getOutputs()
  @NotNull
  public java.util.List getReferences()
  @NotNull
  public java.util.Set getRequiredSigningKeys()
  @NotNull
  public java.util.List getSigs()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.transactions.NotaryChangeLedgerTransaction$Companion Companion
##
public static final class net.corda.core.transactions.NotaryChangeLedgerTransaction$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.transactions.NotaryChangeWireTransaction extends net.corda.core.transactions.CoreTransaction
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List)
  public <init>(java.util.List, net.corda.core.crypto.DigestService)
  public <init>(java.util.List, net.corda.core.identity.Party, net.corda.core.identity.Party)
  @NotNull
  public final java.util.List component1()
  @NotNull
  public final net.corda.core.crypto.DigestService component2()
  @NotNull
  public final net.corda.core.transactions.NotaryChangeWireTransaction copy(java.util.List)
  @NotNull
  public final net.corda.core.transactions.NotaryChangeWireTransaction copy(java.util.List, net.corda.core.crypto.DigestService)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.crypto.DigestService getDigestService()
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public java.util.List getInputs()
  @Nullable
  public net.corda.core.crypto.SecureHash getNetworkParametersHash()
  @NotNull
  public final net.corda.core.identity.Party getNewNotary()
  @NotNull
  public net.corda.core.identity.Party getNotary()
  @NotNull
  public java.util.List getOutputs()
  @NotNull
  public java.util.List getReferences()
  @NotNull
  public final java.util.List getSerializedComponents()
  public int hashCode()
  @NotNull
  public final net.corda.core.transactions.NotaryChangeLedgerTransaction resolve(net.corda.core.node.ServiceHub, java.util.List)
  @NotNull
  public final net.corda.core.transactions.NotaryChangeLedgerTransaction resolve(net.corda.core.node.ServicesForResolution, java.util.List)
  @NotNull
  public String toString()
##
public static final class net.corda.core.transactions.NotaryChangeWireTransaction$Component extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.core.transactions.NotaryChangeWireTransaction$Component valueOf(String)
  public static net.corda.core.transactions.NotaryChangeWireTransaction$Component[] values()
##
@CordaSerializable
public final class net.corda.core.transactions.ReferenceStateRef extends java.lang.Object
  public <init>(net.corda.core.contracts.StateRef)
  @NotNull
  public final net.corda.core.contracts.StateRef component1()
  @NotNull
  public final net.corda.core.transactions.ReferenceStateRef copy(net.corda.core.contracts.StateRef)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.contracts.StateRef getStateRef()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.transactions.SignedTransaction extends java.lang.Object implements net.corda.core.transactions.TransactionWithSignatures
  public <init>(net.corda.core.serialization.SerializedBytes, java.util.List)
  public <init>(net.corda.core.transactions.CoreTransaction, java.util.List)
  @NotNull
  public final net.corda.core.transactions.FilteredTransaction buildFilteredTransaction(java.util.function.Predicate)
  @NotNull
  public final net.corda.core.serialization.SerializedBytes component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final net.corda.core.transactions.SignedTransaction copy(net.corda.core.serialization.SerializedBytes, java.util.List)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.transactions.CoreTransaction getCoreTransaction()
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public final java.util.List getInputs()
  @NotNull
  public java.util.ArrayList getKeyDescriptions(java.util.Set)
  @Nullable
  public final net.corda.core.crypto.SecureHash getNetworkParametersHash()
  @Nullable
  public final net.corda.core.identity.Party getNotary()
  @NotNull
  public final net.corda.core.transactions.NotaryChangeWireTransaction getNotaryChangeTx()
  @NotNull
  public final java.util.List getReferences()
  @NotNull
  public java.util.Set getRequiredSigningKeys()
  @NotNull
  public java.util.List getSigs()
  @NotNull
  public final net.corda.core.transactions.WireTransaction getTx()
  @NotNull
  public final net.corda.core.serialization.SerializedBytes getTxBits()
  public int hashCode()
  public final boolean isNotaryChangeTransaction()
  @NotNull
  public final net.corda.core.transactions.SignedTransaction plus(java.util.Collection)
  @NotNull
  public final net.corda.core.transactions.SignedTransaction plus(net.corda.core.crypto.TransactionSignature)
  @NotNull
  public final net.corda.core.transactions.BaseTransaction resolveBaseTransaction(net.corda.core.node.ServicesForResolution)
  @NotNull
  public final net.corda.core.transactions.ContractUpgradeLedgerTransaction resolveContractUpgradeTransaction(net.corda.core.node.ServicesForResolution)
  @NotNull
  public final net.corda.core.transactions.NotaryChangeLedgerTransaction resolveNotaryChangeTransaction(net.corda.core.node.ServiceHub)
  @NotNull
  public final net.corda.core.transactions.NotaryChangeLedgerTransaction resolveNotaryChangeTransaction(net.corda.core.node.ServicesForResolution)
  @NotNull
  public final net.corda.core.transactions.TransactionWithSignatures resolveTransactionWithSignatures(net.corda.core.node.ServicesForResolution)
  @NotNull
  public final net.corda.core.transactions.LedgerTransaction toLedgerTransaction(net.corda.core.node.ServiceHub)
  @NotNull
  public final net.corda.core.transactions.LedgerTransaction toLedgerTransaction(net.corda.core.node.ServiceHub, boolean)
  @NotNull
  public String toString()
  public final void verify(net.corda.core.node.ServiceHub)
  public final void verify(net.corda.core.node.ServiceHub, boolean)
  @NotNull
  public final net.corda.core.transactions.SignedTransaction withAdditionalSignature(java.security.KeyPair, net.corda.core.crypto.SignatureMetadata)
  @NotNull
  public final net.corda.core.transactions.SignedTransaction withAdditionalSignature(net.corda.core.crypto.TransactionSignature)
  @NotNull
  public final net.corda.core.transactions.SignedTransaction withAdditionalSignatures(Iterable)
##
@CordaSerializable
public static final class net.corda.core.transactions.SignedTransaction$SignaturesMissingException extends java.security.SignatureException implements net.corda.core.CordaThrowable, net.corda.core.contracts.NamedByHash
  public <init>(java.util.Set, java.util.List, net.corda.core.crypto.SecureHash)
  public void addSuppressed(Throwable[])
  @NotNull
  public final java.util.List getDescriptions()
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public final java.util.Set getMissing()
  @Nullable
  public String getOriginalExceptionClassName()
  @Nullable
  public String getOriginalMessage()
  public void setCause(Throwable)
  public void setMessage(String)
  public void setOriginalExceptionClassName(String)
##
public class net.corda.core.transactions.TransactionBuilder extends java.lang.Object
  public <init>()
  public <init>(net.corda.core.identity.Party)
  public <init>(net.corda.core.identity.Party, java.util.UUID, java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt)
  public <init>(net.corda.core.identity.Party, java.util.UUID, java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.Party, java.util.UUID, java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt, java.util.List, net.corda.core.node.ServiceHub)
  public <init>(net.corda.core.identity.Party, java.util.UUID, java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt, java.util.List, net.corda.core.node.ServiceHub, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addAttachment(net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addCommand(net.corda.core.contracts.Command)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addCommand(net.corda.core.contracts.CommandData, java.util.List)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addCommand(net.corda.core.contracts.CommandData, java.security.PublicKey...)
  @NotNull
  public net.corda.core.transactions.TransactionBuilder addInputState(net.corda.core.contracts.StateAndRef)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, String)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, String, net.corda.core.contracts.AttachmentConstraint)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, String, net.corda.core.identity.Party)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, String, net.corda.core.identity.Party, Integer)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, net.corda.core.contracts.AttachmentConstraint)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.ContractState, net.corda.core.identity.Party)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder addOutputState(net.corda.core.contracts.TransactionState)
  @NotNull
  public net.corda.core.transactions.TransactionBuilder addReferenceState(net.corda.core.contracts.ReferencedStateAndRef)
  @NotNull
  public final java.util.List attachments()
  @NotNull
  public final java.util.List commands()
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder copy()
  @NotNull
  protected final java.util.List getAttachments()
  @NotNull
  protected final java.util.List getCommands()
  @NotNull
  protected final java.util.List getInputs()
  @NotNull
  public final java.util.UUID getLockId()
  @Nullable
  public final net.corda.core.identity.Party getNotary()
  @NotNull
  protected final java.util.List getOutputs()
  @NotNull
  protected final net.corda.core.contracts.PrivacySalt getPrivacySalt()
  @NotNull
  protected final java.util.List getReferences()
  @Nullable
  protected final net.corda.core.node.ServiceHub getServiceHub()
  @Nullable
  protected final net.corda.core.contracts.TimeWindow getWindow()
  @NotNull
  public final java.util.List inputStates()
  @NotNull
  public final java.util.List outputStates()
  @NotNull
  public final java.util.List referenceStates()
  public final void setLockId(java.util.UUID)
  public final void setNotary(net.corda.core.identity.Party)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder setPrivacySalt(net.corda.core.contracts.PrivacySalt)
  protected final void setPrivacySalt(net.corda.core.contracts.PrivacySalt)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder setTimeWindow(java.time.Instant, java.time.Duration)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder setTimeWindow(net.corda.core.contracts.TimeWindow)
  protected final void setWindow(net.corda.core.contracts.TimeWindow)
  @NotNull
  public final net.corda.core.transactions.LedgerTransaction toLedgerTransaction(net.corda.core.node.ServiceHub)
  @NotNull
  public final net.corda.core.transactions.SignedTransaction toSignedTransaction(net.corda.core.node.services.KeyManagementService, java.security.PublicKey, net.corda.core.crypto.SignatureMetadata, net.corda.core.node.ServicesForResolution)
  @NotNull
  public final net.corda.core.transactions.WireTransaction toWireTransaction(net.corda.core.node.ServicesForResolution)
  @NotNull
  public final net.corda.core.transactions.WireTransaction toWireTransaction(net.corda.core.node.ServicesForResolution, int)
  @NotNull
  public final net.corda.core.transactions.WireTransaction toWireTransaction(net.corda.core.node.ServicesForResolution, int, java.util.Map)
  public final void verify(net.corda.core.node.ServiceHub)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder withItems(Object...)
##
@DoNotImplement
public interface net.corda.core.transactions.TransactionWithSignatures extends net.corda.core.contracts.NamedByHash
  public void checkSignaturesAreValid()
  @NotNull
  public abstract java.util.List getKeyDescriptions(java.util.Set)
  @NotNull
  public java.util.Set getMissingSigners()
  @NotNull
  public abstract java.util.Set getRequiredSigningKeys()
  @NotNull
  public abstract java.util.List getSigs()
  public void verifyRequiredSignatures()
  public void verifySignaturesExcept(java.util.Collection)
  public void verifySignaturesExcept(java.security.PublicKey...)
##
@DoNotImplement
@CordaSerializable
public abstract class net.corda.core.transactions.TraversableTransaction extends net.corda.core.transactions.CoreTransaction
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List)
  public <init>(java.util.List, net.corda.core.crypto.DigestService)
  @NotNull
  public final java.util.List getAttachments()
  @NotNull
  public final java.util.List getAvailableComponentGroups()
  @NotNull
  public final java.util.List getCommands()
  @NotNull
  public java.util.List getComponentGroups()
  @NotNull
  public final net.corda.core.crypto.DigestService getDigestService()
  @NotNull
  public java.util.List getInputs()
  @NotNull
  public final java.util.List getLegacyAttachments()
  @Nullable
  public net.corda.core.crypto.SecureHash getNetworkParametersHash()
  @Nullable
  public net.corda.core.identity.Party getNotary()
  @NotNull
  public java.util.List getOutputs()
  @NotNull
  public java.util.List getReferences()
  @Nullable
  public final net.corda.core.contracts.TimeWindow getTimeWindow()
##
@DoNotImplement
@CordaSerializable
public final class net.corda.core.transactions.WireTransaction extends net.corda.core.transactions.TraversableTransaction
  public <init>(java.util.List)
  public <init>(java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow)
  public <init>(java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt)
  public <init>(java.util.List, java.util.List, java.util.List, java.util.List, net.corda.core.identity.Party, net.corda.core.contracts.TimeWindow, net.corda.core.contracts.PrivacySalt, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @DeprecatedConstructorForDeserialization
  public <init>(java.util.List, net.corda.core.contracts.PrivacySalt)
  public <init>(java.util.List, net.corda.core.contracts.PrivacySalt, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(java.util.List, net.corda.core.contracts.PrivacySalt, net.corda.core.crypto.DigestService)
  @NotNull
  public final net.corda.core.transactions.FilteredTransaction buildFilteredTransaction(java.util.function.Predicate)
  public final void checkSignature(net.corda.core.crypto.TransactionSignature)
  public boolean equals(Object)
  @NotNull
  public net.corda.core.crypto.SecureHash getId()
  @NotNull
  public final net.corda.core.crypto.MerkleTree getMerkleTree()
  @NotNull
  public final net.corda.core.contracts.PrivacySalt getPrivacySalt()
  @NotNull
  public final java.util.Set getRequiredSigningKeys()
  public int hashCode()
  @NotNull
  public final net.corda.core.transactions.LedgerTransaction toLedgerTransaction(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
  @NotNull
  public final net.corda.core.transactions.LedgerTransaction toLedgerTransaction(net.corda.core.node.ServicesForResolution)
  @NotNull
  public String toString()
##
public final class net.corda.core.utilities.ByteArrays extends java.lang.Object
  @NotNull
  public static final byte[] parseAsHex(String)
  @NotNull
  public static final net.corda.core.utilities.ByteSequence sequence(byte[], int, int)
  @NotNull
  public static final String toHexString(byte[])
##
public abstract class net.corda.core.utilities.ByteSequence extends java.lang.Object implements java.lang.Comparable
  public <init>(byte[], int, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public int compareTo(net.corda.core.utilities.ByteSequence)
  @NotNull
  public final net.corda.core.utilities.ByteSequence copy()
  @NotNull
  public final byte[] copyBytes()
  public boolean equals(Object)
  @NotNull
  public abstract byte[] getBytes()
  public final int getOffset()
  public final int getSize()
  public int hashCode()
  @NotNull
  public static final net.corda.core.utilities.ByteSequence of(byte[])
  @NotNull
  public static final net.corda.core.utilities.ByteSequence of(byte[], int)
  @NotNull
  public static final net.corda.core.utilities.ByteSequence of(byte[], int, int)
  @NotNull
  public final java.io.ByteArrayInputStream open()
  @NotNull
  public final java.nio.ByteBuffer putTo(java.nio.ByteBuffer)
  @NotNull
  public final java.nio.ByteBuffer slice(int, int)
  @NotNull
  public final net.corda.core.utilities.ByteSequence subSequence(int, int)
  @NotNull
  public final net.corda.core.utilities.ByteSequence take(int)
  @NotNull
  public String toString()
  public final void writeTo(java.io.OutputStream)
  @NotNull
  public static final net.corda.core.utilities.ByteSequence$Companion Companion
##
public static final class net.corda.core.utilities.ByteSequence$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.ByteSequence of(byte[])
  @NotNull
  public final net.corda.core.utilities.ByteSequence of(byte[], int)
  @NotNull
  public final net.corda.core.utilities.ByteSequence of(byte[], int, int)
##
public final class net.corda.core.utilities.EncodingUtils extends java.lang.Object
  @NotNull
  public static final byte[] base58ToByteArray(String)
  @NotNull
  public static final String base58ToRealString(String)
  @NotNull
  public static final String base58toBase64(String)
  @NotNull
  public static final String base58toHex(String)
  @NotNull
  public static final byte[] base64ToByteArray(String)
  @NotNull
  public static final String base64ToRealString(String)
  @NotNull
  public static final String base64toBase58(String)
  @NotNull
  public static final String base64toHex(String)
  @NotNull
  public static final String hexToBase58(String)
  @NotNull
  public static final String hexToBase64(String)
  @NotNull
  public static final byte[] hexToByteArray(String)
  @NotNull
  public static final String hexToRealString(String)
  @NotNull
  public static final java.security.PublicKey parsePublicKeyBase58(String)
  @NotNull
  public static final String toBase58(byte[])
  @NotNull
  public static final String toBase58String(java.security.PublicKey)
  @NotNull
  public static final String toBase64(byte[])
  @NotNull
  public static final String toHex(byte[])
  @NotNull
  public static final byte[] toSHA256Bytes(java.security.PublicKey)
  public static final int MAX_HASH_HEX_SIZE = 130
##
public class net.corda.core.utilities.Id extends java.lang.Object
  public <init>(VALUE, String, java.time.Instant)
  public final boolean equals(Object)
  @Nullable
  public final String getEntityType()
  @NotNull
  public final java.time.Instant getTimestamp()
  @NotNull
  public final VALUE getValue()
  public final int hashCode()
  @NotNull
  public static final net.corda.core.utilities.Id newInstance(V, String, java.time.Instant)
  @NotNull
  public final String toString()
  @NotNull
  public static final net.corda.core.utilities.Id$Companion Companion
##
public static final class net.corda.core.utilities.Id$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.Id newInstance(V, String, java.time.Instant)
##
public final class net.corda.core.utilities.KotlinUtilsKt extends java.lang.Object
  @NotNull
  public static final org.slf4j.Logger contextLogger(Object)
  public static final void debug(org.slf4j.Logger, kotlin.jvm.functions.Function0)
  @NotNull
  public static final org.slf4j.Logger detailedLogger()
  public static final int exactAdd(int, int)
  public static final long exactAdd(long, long)
  @NotNull
  public static final java.time.Duration getDays(int)
  @NotNull
  public static final java.time.Duration getHours(int)
  @NotNull
  public static final java.time.Duration getMillis(int)
  @NotNull
  public static final java.time.Duration getMinutes(int)
  public static final V getOrThrow(java.util.concurrent.Future, java.time.Duration)
  @NotNull
  public static final java.time.Duration getSeconds(int)
  public static final org.slf4j.Logger loggerFor()
  @NotNull
  public static final net.corda.core.utilities.NonEmptySet toNonEmptySet(java.util.Collection)
  public static final void trace(org.slf4j.Logger, kotlin.jvm.functions.Function0)
  @NotNull
  public static final net.corda.core.utilities.PropertyDelegate transient(kotlin.jvm.functions.Function0)
##
@CordaSerializable
public final class net.corda.core.utilities.NetworkHostAndPort extends java.lang.Object
  public <init>(String, int)
  @NotNull
  public final String component1()
  public final int component2()
  @NotNull
  public final net.corda.core.utilities.NetworkHostAndPort copy(String, int)
  public boolean equals(Object)
  @NotNull
  public final String getHost()
  public final int getPort()
  public int hashCode()
  @NotNull
  public static final net.corda.core.utilities.NetworkHostAndPort parse(String)
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.utilities.NetworkHostAndPort$Companion Companion
  @NotNull
  public static final String INVALID_PORT_FORMAT = "Invalid port: %s"
  @NotNull
  public static final String MISSING_PORT_FORMAT = "Missing port: %s"
  @NotNull
  public static final String UNPARSEABLE_ADDRESS_FORMAT = "Unparseable address: %s"
##
public static final class net.corda.core.utilities.NetworkHostAndPort$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.NetworkHostAndPort parse(String)
##
public final class net.corda.core.utilities.NonEmptySet extends java.lang.Object implements java.util.Set, kotlin.jvm.internal.markers.KMappedMarker
  public <init>(java.util.Set, kotlin.jvm.internal.DefaultConstructorMarker)
  public boolean add(T)
  public boolean addAll(java.util.Collection)
  public void clear()
  public boolean contains(Object)
  public boolean containsAll(java.util.Collection)
  @NotNull
  public static final net.corda.core.utilities.NonEmptySet copyOf(java.util.Collection)
  public boolean equals(Object)
  public void forEach(java.util.function.Consumer)
  public int getSize()
  public int hashCode()
  public final T head()
  public boolean isEmpty()
  @NotNull
  public java.util.Iterator iterator()
  @NotNull
  public static final net.corda.core.utilities.NonEmptySet of(T)
  @NotNull
  public static final net.corda.core.utilities.NonEmptySet of(T, T, T...)
  @NotNull
  public java.util.stream.Stream parallelStream()
  public boolean remove(Object)
  public boolean removeAll(java.util.Collection)
  public boolean retainAll(java.util.Collection)
  @NotNull
  public java.util.Spliterator spliterator()
  @NotNull
  public java.util.stream.Stream stream()
  public Object[] toArray()
  public T[] toArray(T[])
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.core.utilities.NonEmptySet$Companion Companion
##
public static final class net.corda.core.utilities.NonEmptySet$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.NonEmptySet copyOf(java.util.Collection)
  @NotNull
  public final net.corda.core.utilities.NonEmptySet of(T)
  @NotNull
  public final net.corda.core.utilities.NonEmptySet of(T, T, T...)
##
@CordaSerializable
public class net.corda.core.utilities.OpaqueBytes extends net.corda.core.utilities.ByteSequence
  public <init>(byte[])
  @NotNull
  public final byte[] getBytes()
  @NotNull
  public static final net.corda.core.utilities.OpaqueBytes of(byte...)
  @NotNull
  public static final net.corda.core.utilities.OpaqueBytes$Companion Companion
##
public static final class net.corda.core.utilities.OpaqueBytes$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.OpaqueBytes of(byte...)
##
public final class net.corda.core.utilities.OpaqueBytesSubSequence extends net.corda.core.utilities.ByteSequence
  public <init>(byte[], int, int)
  @NotNull
  public byte[] getBytes()
##
@CordaSerializable
public final class net.corda.core.utilities.ProgressTracker extends java.lang.Object
  public <init>(net.corda.core.utilities.ProgressTracker$Step...)
  public final void endWithError(Throwable)
  @NotNull
  public final java.util.List getAllSteps()
  @NotNull
  public final java.util.List getAllStepsLabels()
  @NotNull
  public final rx.Observable getChanges()
  @Nullable
  public final net.corda.core.utilities.ProgressTracker getChildProgressTracker(net.corda.core.utilities.ProgressTracker$Step)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Step getCurrentStep()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Step getCurrentStepRecursive()
  public final boolean getHasEnded()
  @Nullable
  public final net.corda.core.utilities.ProgressTracker getParent()
  public final int getStepIndex()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Step[] getSteps()
  @NotNull
  public final rx.Observable getStepsTreeChanges()
  public final int getStepsTreeIndex()
  @NotNull
  public final rx.Observable getStepsTreeIndexChanges()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker getTopLevelTracker()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Step nextStep()
  public final void setChildProgressTracker(net.corda.core.utilities.ProgressTracker$Step, net.corda.core.utilities.ProgressTracker)
  public final void setCurrentStep(net.corda.core.utilities.ProgressTracker$Step)
##
@CordaSerializable
public abstract static class net.corda.core.utilities.ProgressTracker$Change extends java.lang.Object
  public <init>(net.corda.core.utilities.ProgressTracker, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker getProgressTracker()
##
@CordaSerializable
public static final class net.corda.core.utilities.ProgressTracker$Change$Position extends net.corda.core.utilities.ProgressTracker$Change
  public <init>(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker component1()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Step component2()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Change$Position copy(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Step getNewStep()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker getTracker()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.utilities.ProgressTracker$Change$Rendering extends net.corda.core.utilities.ProgressTracker$Change
  public <init>(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker component1()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Step component2()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Change$Rendering copy(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Step getOfStep()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker getTracker()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.utilities.ProgressTracker$Change$Structural extends net.corda.core.utilities.ProgressTracker$Change
  public <init>(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker component1()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Step component2()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Change$Structural copy(net.corda.core.utilities.ProgressTracker, net.corda.core.utilities.ProgressTracker$Step)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.utilities.ProgressTracker$Step getParent()
  @NotNull
  public final net.corda.core.utilities.ProgressTracker getTracker()
  public int hashCode()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.utilities.ProgressTracker$DONE extends net.corda.core.utilities.ProgressTracker$Step
  public boolean equals(Object)
  @NotNull
  public static final net.corda.core.utilities.ProgressTracker$DONE INSTANCE
##
@CordaSerializable
public static final class net.corda.core.utilities.ProgressTracker$STARTING extends net.corda.core.utilities.ProgressTracker$Step
  public boolean equals(Object)
  @NotNull
  public static final net.corda.core.utilities.ProgressTracker$STARTING INSTANCE
##
@CordaSerializable
public static class net.corda.core.utilities.ProgressTracker$Step extends java.lang.Object
  public <init>(String)
  @Nullable
  public net.corda.core.utilities.ProgressTracker childProgressTracker()
  public boolean equals(Object)
  @NotNull
  public rx.Observable getChanges()
  @NotNull
  public java.util.Map getExtraAuditData()
  @NotNull
  public String getLabel()
  public int hashCode()
##
@CordaSerializable
public static final class net.corda.core.utilities.ProgressTracker$UNSTARTED extends net.corda.core.utilities.ProgressTracker$Step
  public boolean equals(Object)
  @NotNull
  public static final net.corda.core.utilities.ProgressTracker$UNSTARTED INSTANCE
##
public interface net.corda.core.utilities.PropertyDelegate
  public abstract T getValue(Object, kotlin.reflect.KProperty)
##
public final class net.corda.core.utilities.ThreadDumpUtilsKt extends java.lang.Object
  @NotNull
  public static final String asString(management.ThreadInfo, int)
  @NotNull
  public static final String threadDumpAsString()
##
@CordaSerializable
public abstract class net.corda.core.utilities.Try extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.Try combine(net.corda.core.utilities.Try, kotlin.jvm.functions.Function2)
  @NotNull
  public final net.corda.core.utilities.Try doOnFailure(java.util.function.Consumer)
  @NotNull
  public final net.corda.core.utilities.Try doOnSuccess(java.util.function.Consumer)
  @NotNull
  public final net.corda.core.utilities.Try flatMap(kotlin.jvm.functions.Function1)
  public abstract A getOrThrow()
  public abstract boolean isFailure()
  public abstract boolean isSuccess()
  @NotNull
  public final net.corda.core.utilities.Try map(kotlin.jvm.functions.Function1)
  @NotNull
  public static final net.corda.core.utilities.Try on(kotlin.jvm.functions.Function0)
  @NotNull
  public final net.corda.core.utilities.Try throwError()
  @NotNull
  public static final net.corda.core.utilities.Try$Companion Companion
##
public static final class net.corda.core.utilities.Try$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.utilities.Try on(kotlin.jvm.functions.Function0)
##
@CordaSerializable
public static final class net.corda.core.utilities.Try$Failure extends net.corda.core.utilities.Try
  public <init>(Throwable)
  @NotNull
  public final Throwable component1()
  @NotNull
  public final net.corda.core.utilities.Try$Failure copy(Throwable)
  public boolean equals(Object)
  @NotNull
  public final Throwable getException()
  public A getOrThrow()
  public int hashCode()
  public boolean isFailure()
  public boolean isSuccess()
  @NotNull
  public String toString()
##
@CordaSerializable
public static final class net.corda.core.utilities.Try$Success extends net.corda.core.utilities.Try
  public <init>(A)
  public final A component1()
  @NotNull
  public final net.corda.core.utilities.Try$Success copy(A)
  public boolean equals(Object)
  public A getOrThrow()
  public final A getValue()
  public int hashCode()
  public boolean isFailure()
  public boolean isSuccess()
  @NotNull
  public String toString()
##
public final class net.corda.core.utilities.UntrustworthyData extends java.lang.Object
  public <init>(T)
  public final T getFromUntrustedWorld()
  @Suspendable
  public final R unwrap(net.corda.core.utilities.UntrustworthyData$Validator)
##
public static interface net.corda.core.utilities.UntrustworthyData$Validator extends java.io.Serializable
  @Suspendable
  public abstract R validate(T)
##
public final class net.corda.core.utilities.UntrustworthyDataKt extends java.lang.Object
  public static final R unwrap(net.corda.core.utilities.UntrustworthyData, kotlin.jvm.functions.Function1)
##
public final class net.corda.core.utilities.UuidGenerator extends java.lang.Object
  public <init>()
  @NotNull
  public static final net.corda.core.utilities.UuidGenerator$Companion Companion
##
public static final class net.corda.core.utilities.UuidGenerator$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.UUID next()
##
public interface net.corda.core.utilities.VariablePropertyDelegate extends net.corda.core.utilities.PropertyDelegate
  public abstract void setValue(Object, kotlin.reflect.KProperty, T)
##
public final class net.corda.testing.contracts.DummyContract extends java.lang.Object implements net.corda.core.contracts.Contract
  public <init>()
  public <init>(Object)
  public <init>(Object, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final Object component1()
  @NotNull
  public final net.corda.testing.contracts.DummyContract copy(Object)
  public boolean equals(Object)
  @NotNull
  public static final net.corda.core.transactions.TransactionBuilder generateInitial(int, net.corda.core.identity.Party, net.corda.core.contracts.PartyAndReference, net.corda.core.contracts.PartyAndReference...)
  @Nullable
  public final Object getBlank()
  @NotNull
  public final String getPROGRAM_ID()
  public int hashCode()
  @NotNull
  public static final net.corda.core.transactions.TransactionBuilder move(java.util.List, net.corda.core.identity.AbstractParty)
  @NotNull
  public static final net.corda.core.transactions.TransactionBuilder move(net.corda.core.contracts.StateAndRef, net.corda.core.identity.AbstractParty)
  @NotNull
  public String toString()
  public void verify(net.corda.core.transactions.LedgerTransaction)
  @NotNull
  public static final net.corda.testing.contracts.DummyContract$Companion Companion
  @NotNull
  public static final String PROGRAM_ID = "net.corda.testing.contracts.DummyContract"
##
public static interface net.corda.testing.contracts.DummyContract$Commands extends net.corda.core.contracts.CommandData
##
public static final class net.corda.testing.contracts.DummyContract$Commands$Create extends net.corda.core.contracts.TypeOnlyCommandData implements net.corda.testing.contracts.DummyContract$Commands
  public <init>()
##
public static final class net.corda.testing.contracts.DummyContract$Commands$Move extends net.corda.core.contracts.TypeOnlyCommandData implements net.corda.testing.contracts.DummyContract$Commands
  public <init>()
##
public static final class net.corda.testing.contracts.DummyContract$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder generateInitial(int, net.corda.core.identity.Party, net.corda.core.contracts.PartyAndReference, net.corda.core.contracts.PartyAndReference...)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder move(java.util.List, net.corda.core.identity.AbstractParty)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder move(net.corda.core.contracts.StateAndRef, net.corda.core.identity.AbstractParty)
##
@DoNotImplement
public static final class net.corda.testing.contracts.DummyContract$MultiOwnerState extends java.lang.Object implements net.corda.testing.contracts.DummyContract$State
  public <init>(int, java.util.List)
  public <init>(int, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final int component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final net.corda.testing.contracts.DummyContract$MultiOwnerState copy(int, java.util.List)
  public boolean equals(Object)
  public int getMagicNumber()
  @NotNull
  public final java.util.List getOwners()
  @NotNull
  public java.util.List getParticipants()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public static final class net.corda.testing.contracts.DummyContract$SingleOwnerState extends java.lang.Object implements net.corda.core.contracts.OwnableState, net.corda.testing.contracts.DummyContract$State
  public <init>(int, net.corda.core.identity.AbstractParty)
  public <init>(int, net.corda.core.identity.AbstractParty, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final int component1()
  @NotNull
  public final net.corda.core.identity.AbstractParty component2()
  @NotNull
  public final net.corda.testing.contracts.DummyContract$SingleOwnerState copy(int, net.corda.core.identity.AbstractParty)
  public boolean equals(Object)
  public int getMagicNumber()
  @NotNull
  public net.corda.core.identity.AbstractParty getOwner()
  @NotNull
  public java.util.List getParticipants()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public net.corda.core.contracts.CommandAndState withNewOwner(net.corda.core.identity.AbstractParty)
##
@DoNotImplement
public static interface net.corda.testing.contracts.DummyContract$State extends net.corda.core.contracts.ContractState
  public abstract int getMagicNumber()
##
public final class net.corda.testing.contracts.DummyContractV2 extends java.lang.Object implements net.corda.core.contracts.UpgradedContractWithLegacyConstraint
  public <init>()
  @NotNull
  public String getLegacyContract()
  @NotNull
  public net.corda.core.contracts.AttachmentConstraint getLegacyContractConstraint()
  @NotNull
  public static final net.corda.core.transactions.TransactionBuilder move(java.util.List, net.corda.core.identity.AbstractParty)
  @NotNull
  public static final net.corda.core.transactions.TransactionBuilder move(net.corda.core.contracts.StateAndRef, net.corda.core.identity.AbstractParty)
  @NotNull
  public net.corda.testing.contracts.DummyContractV2$State upgrade(net.corda.testing.contracts.DummyContract$State)
  public void verify(net.corda.core.transactions.LedgerTransaction)
  @NotNull
  public static final net.corda.testing.contracts.DummyContractV2$Companion Companion
  @NotNull
  public static final String PROGRAM_ID = "net.corda.testing.contracts.DummyContractV2"
##
public static interface net.corda.testing.contracts.DummyContractV2$Commands extends net.corda.core.contracts.CommandData
##
public static final class net.corda.testing.contracts.DummyContractV2$Commands$Create extends net.corda.core.contracts.TypeOnlyCommandData implements net.corda.testing.contracts.DummyContractV2$Commands
  public <init>()
##
public static final class net.corda.testing.contracts.DummyContractV2$Commands$Move extends net.corda.core.contracts.TypeOnlyCommandData implements net.corda.testing.contracts.DummyContractV2$Commands
  public <init>()
##
public static final class net.corda.testing.contracts.DummyContractV2$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder move(java.util.List, net.corda.core.identity.AbstractParty)
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder move(net.corda.core.contracts.StateAndRef, net.corda.core.identity.AbstractParty)
##
public static final class net.corda.testing.contracts.DummyContractV2$State extends java.lang.Object implements net.corda.core.contracts.ContractState
  public <init>(int, java.util.List)
  public <init>(int, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final int component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final net.corda.testing.contracts.DummyContractV2$State copy(int, java.util.List)
  public boolean equals(Object)
  public final int getMagicNumber()
  @NotNull
  public final java.util.List getOwners()
  @NotNull
  public java.util.List getParticipants()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public final kotlin.Pair withNewOwner(net.corda.core.identity.AbstractParty)
##
public final class net.corda.testing.contracts.DummyContractV3 extends java.lang.Object implements net.corda.core.contracts.UpgradedContractWithLegacyConstraint
  public <init>()
  @NotNull
  public String getLegacyContract()
  @NotNull
  public net.corda.core.contracts.AttachmentConstraint getLegacyContractConstraint()
  @NotNull
  public net.corda.testing.contracts.DummyContractV3$State upgrade(net.corda.testing.contracts.DummyContractV2$State)
  public void verify(net.corda.core.transactions.LedgerTransaction)
  @NotNull
  public static final net.corda.testing.contracts.DummyContractV3$Companion Companion
  @NotNull
  public static final String PROGRAM_ID = "net.corda.testing.contracts.DummyContractV3"
##
public static interface net.corda.testing.contracts.DummyContractV3$Commands extends net.corda.core.contracts.CommandData
##
public static final class net.corda.testing.contracts.DummyContractV3$Commands$Create extends net.corda.core.contracts.TypeOnlyCommandData implements net.corda.testing.contracts.DummyContractV3$Commands
  public <init>()
##
public static final class net.corda.testing.contracts.DummyContractV3$Commands$Move extends net.corda.core.contracts.TypeOnlyCommandData implements net.corda.testing.contracts.DummyContractV3$Commands
  public <init>()
##
public static final class net.corda.testing.contracts.DummyContractV3$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
public static final class net.corda.testing.contracts.DummyContractV3$State extends java.lang.Object implements net.corda.core.contracts.ContractState
  public <init>(int, java.util.List)
  public <init>(int, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final int component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final net.corda.testing.contracts.DummyContractV3$State copy(int, java.util.List)
  public boolean equals(Object)
  public final int getMagicNumber()
  @NotNull
  public final java.util.List getOwners()
  @NotNull
  public java.util.List getParticipants()
  public int hashCode()
  @NotNull
  public String toString()
##
@BelongsToContract
public final class net.corda.testing.contracts.DummyState extends java.lang.Object implements net.corda.core.contracts.ContractState
  public <init>()
  public <init>(int)
  public <init>(int, java.util.List)
  public <init>(int, java.util.List, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final int component1()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final net.corda.testing.contracts.DummyState copy(int)
  @NotNull
  public final net.corda.testing.contracts.DummyState copy(int, java.util.List)
  public boolean equals(Object)
  public final int getMagicNumber()
  @NotNull
  public java.util.List getParticipants()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.testing.core.DummyCommandData extends net.corda.core.contracts.TypeOnlyCommandData
  @NotNull
  public static final net.corda.testing.core.DummyCommandData INSTANCE
##
public final class net.corda.testing.core.Expect extends java.lang.Object
  public <init>(Class, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
  @NotNull
  public final Class component1()
  @NotNull
  public final kotlin.jvm.functions.Function1 component2()
  @NotNull
  public final kotlin.jvm.functions.Function1 component3()
  @NotNull
  public final net.corda.testing.core.Expect copy(Class, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
  public boolean equals(Object)
  @NotNull
  public final Class getClazz()
  @NotNull
  public final kotlin.jvm.functions.Function1 getExpectClosure()
  @NotNull
  public final kotlin.jvm.functions.Function1 getMatch()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public abstract class net.corda.testing.core.ExpectCompose extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@DoNotImplement
public static final class net.corda.testing.core.ExpectCompose$Parallel extends net.corda.testing.core.ExpectCompose
  public <init>(java.util.List)
  @NotNull
  public final java.util.List getParallel()
##
@DoNotImplement
public static final class net.corda.testing.core.ExpectCompose$Sequential extends net.corda.testing.core.ExpectCompose
  public <init>(java.util.List)
  @NotNull
  public final java.util.List getSequence()
##
@DoNotImplement
public static final class net.corda.testing.core.ExpectCompose$Single extends net.corda.testing.core.ExpectCompose
  public <init>(net.corda.testing.core.Expect)
  @NotNull
  public final net.corda.testing.core.Expect getExpect()
##
public static final class net.corda.testing.core.ExpectComposeState$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.testing.core.ExpectComposeState fromExpectCompose(net.corda.testing.core.ExpectCompose)
##
public static final class net.corda.testing.core.ExpectComposeState$Finished extends net.corda.testing.core.ExpectComposeState
  public <init>()
  @NotNull
  public java.util.List getExpectedEvents()
  @Nullable
  public Void nextState(E)
##
public static final class net.corda.testing.core.ExpectComposeState$Parallel extends net.corda.testing.core.ExpectComposeState
  public <init>(net.corda.testing.core.ExpectCompose$Parallel, java.util.List)
  @NotNull
  public java.util.List getExpectedEvents()
  @NotNull
  public final net.corda.testing.core.ExpectCompose$Parallel getParallel()
  @NotNull
  public final java.util.List getStates()
  @Nullable
  public kotlin.Pair nextState(E)
##
public static final class net.corda.testing.core.ExpectComposeState$Sequential extends net.corda.testing.core.ExpectComposeState
  public <init>(net.corda.testing.core.ExpectCompose$Sequential, int, net.corda.testing.core.ExpectComposeState)
  @NotNull
  public java.util.List getExpectedEvents()
  public final int getIndex()
  @NotNull
  public final net.corda.testing.core.ExpectCompose$Sequential getSequential()
  @NotNull
  public final net.corda.testing.core.ExpectComposeState getState()
  @Nullable
  public kotlin.Pair nextState(E)
##
public static final class net.corda.testing.core.ExpectComposeState$Single extends net.corda.testing.core.ExpectComposeState
  public <init>(net.corda.testing.core.ExpectCompose$Single)
  @NotNull
  public java.util.List getExpectedEvents()
  @NotNull
  public final net.corda.testing.core.ExpectCompose$Single getSingle()
  @Nullable
  public kotlin.Pair nextState(E)
##
public final class net.corda.testing.core.ExpectKt extends java.lang.Object
  @NotNull
  public static final net.corda.testing.core.ExpectCompose expect(Class, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
  public static final net.corda.testing.core.ExpectCompose expect(E, kotlin.jvm.functions.Function1)
  public static final net.corda.testing.core.ExpectCompose expect(kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1)
  public static final void expectEvents(Iterable, boolean, kotlin.jvm.functions.Function0)
  public static final void expectEvents(rx.Observable, boolean, kotlin.jvm.functions.Function0)
  public static final void genericExpectEvents(S, boolean, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function0)
  @NotNull
  public static final net.corda.testing.core.ExpectCompose parallel(java.util.List)
  @NotNull
  public static final net.corda.testing.core.ExpectCompose parallel(net.corda.testing.core.ExpectCompose<? extends E>...)
  @NotNull
  public static final net.corda.testing.core.ExpectCompose replicate(int, kotlin.jvm.functions.Function1)
  @NotNull
  public static final net.corda.testing.core.ExpectCompose sequence(java.util.List)
  @NotNull
  public static final net.corda.testing.core.ExpectCompose sequence(net.corda.testing.core.ExpectCompose<? extends E>...)
##
public final class net.corda.testing.core.SerializationEnvironmentRule extends java.lang.Object implements org.junit.rules.TestRule
  public <init>()
  public <init>(boolean)
  public <init>(boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public org.junit.runners.model.Statement apply(org.junit.runners.model.Statement, org.junit.runner.Description)
  @NotNull
  public final net.corda.core.serialization.SerializationFactory getSerializationFactory()
  @NotNull
  public static final net.corda.testing.core.SerializationEnvironmentRule$Companion Companion
##
public static final class net.corda.testing.core.SerializationEnvironmentRule$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
public final class net.corda.testing.core.TestConstants extends java.lang.Object
  @NotNull
  public static final net.corda.core.contracts.Command dummyCommand(java.security.PublicKey...)
  @NotNull
  public static final net.corda.core.identity.CordaX500Name ALICE_NAME
  @NotNull
  public static final net.corda.core.identity.CordaX500Name BOB_NAME
  @NotNull
  public static final net.corda.core.identity.CordaX500Name BOC_NAME
  @NotNull
  public static final net.corda.core.identity.CordaX500Name CHARLIE_NAME
  @NotNull
  public static final net.corda.core.identity.CordaX500Name DAVE_NAME
  @NotNull
  public static final net.corda.core.identity.CordaX500Name DUMMY_BANK_A_NAME
  @NotNull
  public static final net.corda.core.identity.CordaX500Name DUMMY_BANK_B_NAME
  @NotNull
  public static final net.corda.core.identity.CordaX500Name DUMMY_BANK_C_NAME
  @NotNull
  public static final net.corda.core.identity.CordaX500Name DUMMY_NOTARY_NAME
  public static final int MAX_MESSAGE_SIZE = 10485760
##
public final class net.corda.testing.core.TestIdentity extends java.lang.Object
  public <init>(net.corda.core.identity.CordaX500Name)
  public <init>(net.corda.core.identity.CordaX500Name, long)
  public <init>(net.corda.core.identity.CordaX500Name, long, net.corda.core.crypto.SignatureScheme)
  public <init>(net.corda.core.identity.CordaX500Name, long, net.corda.core.crypto.SignatureScheme, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.CordaX500Name, java.security.KeyPair)
  public <init>(net.corda.core.identity.CordaX500Name, net.corda.core.crypto.SignatureScheme)
  public <init>(net.corda.core.identity.CordaX500Name, net.corda.core.crypto.SignatureScheme, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public static final net.corda.testing.core.TestIdentity fresh(String)
  @NotNull
  public static final net.corda.testing.core.TestIdentity fresh(String, net.corda.core.crypto.SignatureScheme)
  @NotNull
  public final net.corda.core.identity.PartyAndCertificate getIdentity()
  @NotNull
  public final java.security.KeyPair getKeyPair()
  @NotNull
  public final net.corda.core.identity.CordaX500Name getName()
  @NotNull
  public final net.corda.core.identity.Party getParty()
  @NotNull
  public final java.security.PublicKey getPublicKey()
  @NotNull
  public final net.corda.core.contracts.PartyAndReference ref(byte...)
  @NotNull
  public static final net.corda.testing.core.TestIdentity$Companion Companion
##
public static final class net.corda.testing.core.TestIdentity$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.testing.core.TestIdentity fresh(String)
  @NotNull
  public final net.corda.testing.core.TestIdentity fresh(String, net.corda.core.crypto.SignatureScheme)
##
public final class net.corda.testing.core.TestUtils extends java.lang.Object
  @NotNull
  public static final java.security.cert.X509CRL createCRL(net.corda.nodeapi.internal.crypto.CertificateAndKeyPair, java.util.List, java.net.URI, java.time.Instant, java.time.Instant, boolean, java.time.Instant, int, String)
  public static final T executeTest(java.time.Duration, kotlin.jvm.functions.Function0, java.time.Duration, kotlin.jvm.functions.Function0)
  @NotNull
  public static final net.corda.core.utilities.NetworkHostAndPort freeLocalHostAndPort()
  public static final int freePort()
  @NotNull
  public static final net.corda.core.contracts.StateRef generateStateRef()
  @NotNull
  public static final java.util.List getFreeLocalPorts(String, int)
  @NotNull
  public static final net.corda.core.identity.PartyAndCertificate getTestPartyAndCertificate(net.corda.core.identity.CordaX500Name, java.security.PublicKey)
  @NotNull
  public static final net.corda.core.identity.PartyAndCertificate getTestPartyAndCertificate(net.corda.core.identity.Party)
  @NotNull
  public static final net.corda.core.identity.CordaX500Name makeUnique(net.corda.core.identity.CordaX500Name)
  @NotNull
  public static final net.corda.core.identity.Party singleIdentity(net.corda.core.node.NodeInfo)
  @NotNull
  public static final net.corda.core.identity.PartyAndCertificate singleIdentityAndCert(net.corda.core.node.NodeInfo)
##
public final class net.corda.client.jackson.JacksonSupport extends java.lang.Object
  @NotNull
  public static final com.fasterxml.jackson.databind.ObjectMapper createDefaultMapper(net.corda.core.messaging.CordaRPCOps)
  @NotNull
  public static final com.fasterxml.jackson.databind.ObjectMapper createDefaultMapper(net.corda.core.messaging.CordaRPCOps, com.fasterxml.jackson.core.JsonFactory)
  @NotNull
  public static final com.fasterxml.jackson.databind.ObjectMapper createDefaultMapper(net.corda.core.messaging.CordaRPCOps, com.fasterxml.jackson.core.JsonFactory, boolean)
  @NotNull
  public static final com.fasterxml.jackson.databind.ObjectMapper createDefaultMapper(net.corda.core.messaging.CordaRPCOps, com.fasterxml.jackson.core.JsonFactory, boolean, boolean)
  @NotNull
  public static final com.fasterxml.jackson.databind.ObjectMapper createInMemoryMapper(net.corda.core.node.services.IdentityService)
  @NotNull
  public static final com.fasterxml.jackson.databind.ObjectMapper createInMemoryMapper(net.corda.core.node.services.IdentityService, com.fasterxml.jackson.core.JsonFactory)
  @NotNull
  public static final com.fasterxml.jackson.databind.ObjectMapper createInMemoryMapper(net.corda.core.node.services.IdentityService, com.fasterxml.jackson.core.JsonFactory, boolean)
  @NotNull
  public static final com.fasterxml.jackson.databind.ObjectMapper createInMemoryMapper(net.corda.core.node.services.IdentityService, com.fasterxml.jackson.core.JsonFactory, boolean, boolean)
  @NotNull
  public static final com.fasterxml.jackson.databind.ObjectMapper createNonRpcMapper()
  @NotNull
  public static final com.fasterxml.jackson.databind.ObjectMapper createNonRpcMapper(com.fasterxml.jackson.core.JsonFactory)
  @NotNull
  public static final com.fasterxml.jackson.databind.ObjectMapper createNonRpcMapper(com.fasterxml.jackson.core.JsonFactory, boolean)
  @NotNull
  public final com.fasterxml.jackson.databind.Module getCordaModule()
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$AmountDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @NotNull
  public net.corda.core.contracts.Amount deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$AmountDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$AmountSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.contracts.Amount, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$AmountSerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$AnonymousPartyDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @NotNull
  public net.corda.core.identity.AnonymousParty deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$AnonymousPartyDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$AnonymousPartySerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.identity.AnonymousParty, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$AnonymousPartySerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$CordaX500NameDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @NotNull
  public net.corda.core.identity.CordaX500Name deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$CordaX500NameDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$CordaX500NameSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.identity.CordaX500Name, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$CordaX500NameSerializer INSTANCE
##
@DoNotImplement
public static final class net.corda.client.jackson.JacksonSupport$IdentityObjectMapper extends com.fasterxml.jackson.databind.ObjectMapper implements net.corda.client.jackson.JacksonSupport$PartyObjectMapper
  public <init>(net.corda.core.node.services.IdentityService, com.fasterxml.jackson.core.JsonFactory, boolean)
  public <init>(net.corda.core.node.services.IdentityService, com.fasterxml.jackson.core.JsonFactory, boolean, boolean)
  public <init>(net.corda.core.node.services.IdentityService, com.fasterxml.jackson.core.JsonFactory, boolean, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final boolean getFuzzyIdentityMatch()
  @NotNull
  public final net.corda.core.node.services.IdentityService getIdentityService()
  public boolean isFullParties()
  @Nullable
  public net.corda.core.node.NodeInfo nodeInfoFromParty(net.corda.core.identity.AbstractParty)
  @NotNull
  public java.util.Set partiesFromName(String)
  @Nullable
  public net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @Nullable
  public net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
##
@DoNotImplement
public static final class net.corda.client.jackson.JacksonSupport$NoPartyObjectMapper extends com.fasterxml.jackson.databind.ObjectMapper implements net.corda.client.jackson.JacksonSupport$PartyObjectMapper
  public <init>(com.fasterxml.jackson.core.JsonFactory)
  public <init>(com.fasterxml.jackson.core.JsonFactory, boolean)
  public <init>(com.fasterxml.jackson.core.JsonFactory, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public boolean isFullParties()
  @Nullable
  public net.corda.core.node.NodeInfo nodeInfoFromParty(net.corda.core.identity.AbstractParty)
  @NotNull
  public java.util.Set partiesFromName(String)
  @Nullable
  public net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @Nullable
  public net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
##
public static final class net.corda.client.jackson.JacksonSupport$NodeInfoDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @NotNull
  public net.corda.core.node.NodeInfo deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$NodeInfoDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$NodeInfoSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.node.NodeInfo, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$NodeInfoSerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$OpaqueBytesDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @NotNull
  public net.corda.core.utilities.OpaqueBytes deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$OpaqueBytesDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$OpaqueBytesSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.utilities.OpaqueBytes, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$OpaqueBytesSerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$PartyDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @NotNull
  public net.corda.core.identity.Party deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$PartyDeserializer INSTANCE
##
@DoNotImplement
public static interface net.corda.client.jackson.JacksonSupport$PartyObjectMapper
  public abstract boolean isFullParties()
  @Nullable
  public abstract net.corda.core.node.NodeInfo nodeInfoFromParty(net.corda.core.identity.AbstractParty)
  @NotNull
  public abstract java.util.Set partiesFromName(String)
  @Nullable
  public abstract net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @Nullable
  public abstract net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
##
public static final class net.corda.client.jackson.JacksonSupport$PartySerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.identity.Party, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$PartySerializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$PublicKeyDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  @NotNull
  public java.security.PublicKey deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$PublicKeyDeserializer INSTANCE
##
public static final class net.corda.client.jackson.JacksonSupport$PublicKeySerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(java.security.PublicKey, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$PublicKeySerializer INSTANCE
##
@DoNotImplement
public static final class net.corda.client.jackson.JacksonSupport$RpcObjectMapper extends com.fasterxml.jackson.databind.ObjectMapper implements net.corda.client.jackson.JacksonSupport$PartyObjectMapper
  public <init>(net.corda.core.messaging.CordaRPCOps, com.fasterxml.jackson.core.JsonFactory, boolean)
  public <init>(net.corda.core.messaging.CordaRPCOps, com.fasterxml.jackson.core.JsonFactory, boolean, boolean)
  public <init>(net.corda.core.messaging.CordaRPCOps, com.fasterxml.jackson.core.JsonFactory, boolean, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final boolean getFuzzyIdentityMatch()
  @NotNull
  public final net.corda.core.messaging.CordaRPCOps getRpc()
  public boolean isFullParties()
  @Nullable
  public net.corda.core.node.NodeInfo nodeInfoFromParty(net.corda.core.identity.AbstractParty)
  @NotNull
  public java.util.Set partiesFromName(String)
  @Nullable
  public net.corda.core.identity.Party partyFromKey(java.security.PublicKey)
  @Nullable
  public net.corda.core.identity.Party wellKnownPartyFromX500Name(net.corda.core.identity.CordaX500Name)
##
public static final class net.corda.client.jackson.JacksonSupport$SecureHashDeserializer extends com.fasterxml.jackson.databind.JsonDeserializer
  public <init>()
  @NotNull
  public T deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext)
##
public static final class net.corda.client.jackson.JacksonSupport$SecureHashSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(net.corda.core.crypto.SecureHash, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$SecureHashSerializer INSTANCE
##
public abstract static class net.corda.client.jackson.JacksonSupport$SignedTransactionMixin extends java.lang.Object
  public <init>()
  @JsonIgnore
  @NotNull
  public abstract net.corda.core.crypto.SecureHash getId()
  @JsonIgnore
  @NotNull
  public abstract java.util.List getInputs()
  @JsonIgnore
  @Nullable
  public abstract net.corda.core.identity.Party getNotary()
  @JsonIgnore
  @NotNull
  public abstract net.corda.core.transactions.NotaryChangeWireTransaction getNotaryChangeTx()
  @JsonIgnore
  @NotNull
  public abstract java.util.Set getRequiredSigningKeys()
  @JsonProperty
  @NotNull
  protected abstract java.util.List getSigs()
  @JsonProperty
  @NotNull
  protected abstract net.corda.core.transactions.CoreTransaction getTransaction()
  @JsonIgnore
  @NotNull
  public abstract net.corda.core.transactions.WireTransaction getTx()
  @JsonIgnore
  @NotNull
  public abstract net.corda.core.serialization.SerializedBytes getTxBits()
##
public static final class net.corda.client.jackson.JacksonSupport$ToStringSerializer extends com.fasterxml.jackson.databind.JsonSerializer
  public void serialize(Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider)
  @NotNull
  public static final net.corda.client.jackson.JacksonSupport$ToStringSerializer INSTANCE
##
public abstract static class net.corda.client.jackson.JacksonSupport$WireTransactionMixin extends java.lang.Object
  public <init>()
  @JsonIgnore
  @NotNull
  public abstract java.util.List getAvailableComponentHashes()
  @JsonIgnore
  @NotNull
  public abstract java.util.List getAvailableComponents()
  @JsonIgnore
  @NotNull
  public abstract net.corda.core.crypto.MerkleTree getMerkleTree()
  @JsonIgnore
  @NotNull
  public abstract java.util.List getOutputStates()
##
@ThreadSafe
public class net.corda.client.jackson.StringToMethodCallParser extends java.lang.Object
  public <init>(Class)
  public <init>(Class, com.fasterxml.jackson.databind.ObjectMapper)
  public <init>(Class, com.fasterxml.jackson.databind.ObjectMapper, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(kotlin.reflect.KClass)
  @NotNull
  public final java.util.Map getAvailableCommands()
  @NotNull
  protected final com.google.common.collect.Multimap getMethodMap()
  @NotNull
  public final java.util.Map getMethodParamNames()
  @NotNull
  public java.util.List paramNamesFromConstructor(reflect.Constructor)
  @NotNull
  public java.util.List paramNamesFromMethod(reflect.Method)
  @NotNull
  public final net.corda.client.jackson.StringToMethodCallParser$ParsedMethodCall parse(T, String)
  @NotNull
  public final Object[] parseArguments(String, java.util.List, String)
  public final void validateIsMatchingCtor(String, java.util.List, String)
  @NotNull
  public static final net.corda.client.jackson.StringToMethodCallParser$Companion Companion
##
public static final class net.corda.client.jackson.StringToMethodCallParser$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
public final class net.corda.client.jackson.StringToMethodCallParser$ParsedMethodCall extends java.lang.Object implements java.util.concurrent.Callable
  public <init>(net.corda.client.jackson.StringToMethodCallParser, T, reflect.Method, Object[])
  @Nullable
  public Object call()
  @NotNull
  public final Object[] getArgs()
  @NotNull
  public final reflect.Method getMethod()
  @Nullable
  public final Object invoke()
##
public static class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException extends net.corda.core.CordaException
  public <init>(String, Throwable)
  public <init>(String, Throwable, int, kotlin.jvm.internal.DefaultConstructorMarker)
##
public static final class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException$FailedParse extends net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException
  public <init>(Exception)
##
public static final class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException$MissingParameter extends net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException
  public <init>(String, String, String)
  @NotNull
  public final String getParamName()
##
public static final class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException$NoSuchFile extends net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException
  public <init>(String)
##
public static final class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException$ReflectionDataMissing extends net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException
  public <init>(String, int)
##
public static final class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException$TooManyParameters extends net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException
  public <init>(String, String)
##
public static final class net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException$UnknownMethod extends net.corda.client.jackson.StringToMethodCallParser$UnparseableCallException
  public <init>(String)
  @NotNull
  public final String getMethodName()
##
public final class net.corda.testing.driver.Driver extends java.lang.Object
  public static final A driver(net.corda.testing.driver.DriverParameters, kotlin.jvm.functions.Function1)
  @NotNull
  public static final java.io.File logFile(net.corda.testing.driver.NodeHandle)
##
@DoNotImplement
public interface net.corda.testing.driver.DriverDSL
  @NotNull
  public abstract java.nio.file.Path baseDirectory(net.corda.core.identity.CordaX500Name)
  @NotNull
  public net.corda.testing.driver.NotaryHandle getDefaultNotaryHandle()
  @NotNull
  public net.corda.core.identity.Party getDefaultNotaryIdentity()
  @NotNull
  public net.corda.core.concurrent.CordaFuture getDefaultNotaryNode()
  @NotNull
  public abstract java.util.List getNotaryHandles()
  public int nextPort()
  @NotNull
  public net.corda.core.concurrent.CordaFuture startNode()
  @NotNull
  public abstract net.corda.core.concurrent.CordaFuture startNode(net.corda.testing.driver.NodeParameters)
  @NotNull
  public net.corda.core.concurrent.CordaFuture startNode(net.corda.testing.driver.NodeParameters, net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String)
  @NotNull
  public net.corda.core.concurrent.CordaFuture startNode(net.corda.testing.driver.NodeParameters, net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, String)
  @NotNull
  public net.corda.core.concurrent.CordaFuture startWebserver(net.corda.testing.driver.NodeHandle)
  @NotNull
  public abstract net.corda.core.concurrent.CordaFuture startWebserver(net.corda.testing.driver.NodeHandle, String)
##
public final class net.corda.testing.driver.DriverParameters extends java.lang.Object
  public <init>()
  public <init>(java.util.Collection)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection, java.util.Map, boolean)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection, java.util.Map, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection, java.util.Map, boolean, boolean)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection, java.util.Map, boolean, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection, java.util.Map, boolean, boolean, java.time.Duration)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection, java.util.Map, boolean, boolean, java.time.Duration, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, boolean)
  public final boolean component1()
  @NotNull
  public final java.util.List component10()
  @NotNull
  public final net.corda.testing.driver.JmxPolicy component11()
  @NotNull
  public final net.corda.core.node.NetworkParameters component12()
  @NotNull
  public final java.util.Map component13()
  public final boolean component14()
  @Nullable
  public final java.util.Collection component15()
  @NotNull
  public final java.util.Map component16()
  public final boolean component17()
  public final boolean component18()
  @NotNull
  public final java.time.Duration component19()
  @NotNull
  public final java.nio.file.Path component2()
  @NotNull
  public final net.corda.testing.driver.PortAllocation component3()
  @NotNull
  public final net.corda.testing.driver.PortAllocation component4()
  @NotNull
  public final java.util.Map component5()
  public final boolean component6()
  public final boolean component7()
  public final boolean component8()
  @NotNull
  public final java.util.List component9()
  @NotNull
  public final net.corda.testing.driver.DriverParameters copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters)
  @NotNull
  public final net.corda.testing.driver.DriverParameters copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection)
  @NotNull
  public final net.corda.testing.driver.DriverParameters copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection, java.util.Map, boolean)
  @NotNull
  public final net.corda.testing.driver.DriverParameters copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection, java.util.Map, boolean, boolean)
  @NotNull
  public final net.corda.testing.driver.DriverParameters copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Map, boolean, java.util.Collection, java.util.Map, boolean, boolean, java.time.Duration)
  @NotNull
  public final net.corda.testing.driver.DriverParameters copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation, java.util.Map, boolean, boolean, boolean, java.util.List, java.util.List, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters, java.util.Set)
  public boolean equals(Object)
  public final boolean getAllowHibernateToManageAppSchema()
  @Nullable
  public final java.util.Collection getCordappsForAllNodes()
  @NotNull
  public final net.corda.testing.driver.PortAllocation getDebugPortAllocation()
  @NotNull
  public final java.nio.file.Path getDriverDirectory()
  @NotNull
  public final java.util.Map getEnvironmentVariables()
  @NotNull
  public final java.util.List getExtraCordappPackagesToScan()
  public final boolean getInMemoryDB()
  @NotNull
  public final net.corda.testing.driver.JmxPolicy getJmxPolicy()
  @NotNull
  public final net.corda.core.node.NetworkParameters getNetworkParameters()
  @NotNull
  public final java.util.Map getNotaryCustomOverrides()
  @NotNull
  public final java.time.Duration getNotaryHandleTimeout()
  @NotNull
  public final java.util.List getNotarySpecs()
  @NotNull
  public final net.corda.testing.driver.PortAllocation getPortAllocation()
  public final boolean getPremigrateH2Database()
  public final boolean getStartNodesInProcess()
  @NotNull
  public final java.util.Map getSystemProperties()
  public final boolean getUseTestClock()
  public final boolean getWaitForAllNodesToFinish()
  public int hashCode()
  public final boolean isDebug()
  @NotNull
  public String toString()
  @NotNull
  public final net.corda.testing.driver.DriverParameters withAllowHibernateToManageAppSchema(boolean)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withCordappsForAllNodes(java.util.Collection)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withDebugPortAllocation(net.corda.testing.driver.PortAllocation)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withDriverDirectory(java.nio.file.Path)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withEnvironmentVariables(java.util.Map)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withExtraCordappPackagesToScan(java.util.List)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withInMemoryDB(boolean)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withIsDebug(boolean)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withJmxPolicy(net.corda.testing.driver.JmxPolicy)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withNetworkParameters(net.corda.core.node.NetworkParameters)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withNotaryCustomOverrides(java.util.Map)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withNotaryHandleTimeout(java.time.Duration)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withNotarySpecs(java.util.List)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withPortAllocation(net.corda.testing.driver.PortAllocation)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withStartNodesInProcess(boolean)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withSystemProperties(java.util.Map)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withUseTestClock(boolean)
  @NotNull
  public final net.corda.testing.driver.DriverParameters withWaitForAllNodesToFinish(boolean)
##
@DoNotImplement
public interface net.corda.testing.driver.InProcess extends net.corda.testing.driver.NodeHandle
  @NotNull
  public abstract net.corda.core.node.ServiceHub getServices()
  @NotNull
  public abstract rx.Observable registerInitiatedFlow(Class)
  @NotNull
  public net.corda.core.concurrent.CordaFuture startFlow(net.corda.core.flows.FlowLogic)
##
public final class net.corda.testing.driver.JmxPolicy extends java.lang.Object
  public <init>()
  public <init>(net.corda.testing.driver.PortAllocation)
  public <init>(boolean, net.corda.testing.driver.PortAllocation)
  public <init>(boolean, net.corda.testing.driver.PortAllocation, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final boolean component1()
  @NotNull
  public final net.corda.testing.driver.PortAllocation component2()
  @NotNull
  public final net.corda.testing.driver.JmxPolicy copy(boolean, net.corda.testing.driver.PortAllocation)
  @NotNull
  public static final net.corda.testing.driver.JmxPolicy defaultEnabled()
  public boolean equals(Object)
  @NotNull
  public final net.corda.testing.driver.PortAllocation getJmxHttpServerPortAllocation()
  public final boolean getStartJmxHttpServer()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.testing.driver.JmxPolicy$Companion Companion
##
public static final class net.corda.testing.driver.JmxPolicy$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.testing.driver.JmxPolicy defaultEnabled()
##
@DoNotImplement
public interface net.corda.testing.driver.NodeHandle extends java.lang.AutoCloseable
  @NotNull
  public abstract java.nio.file.Path getBaseDirectory()
  @Nullable
  public abstract net.corda.core.utilities.NetworkHostAndPort getJmxAddress()
  @NotNull
  public abstract net.corda.core.node.NodeInfo getNodeInfo()
  @NotNull
  public abstract net.corda.core.utilities.NetworkHostAndPort getP2pAddress()
  @NotNull
  public abstract net.corda.core.messaging.CordaRPCOps getRpc()
  @NotNull
  public abstract net.corda.core.utilities.NetworkHostAndPort getRpcAddress()
  @NotNull
  public abstract net.corda.core.utilities.NetworkHostAndPort getRpcAdminAddress()
  @NotNull
  public abstract java.util.List getRpcUsers()
  public abstract void stop()
##
public final class net.corda.testing.driver.NodeParameters extends java.lang.Object
  public <init>()
  public <init>(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String)
  public <init>(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map)
  public <init>(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String)
  public <init>(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String, net.corda.core.utilities.NetworkHostAndPort)
  public <init>(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String, net.corda.core.utilities.NetworkHostAndPort, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String, net.corda.core.utilities.NetworkHostAndPort, java.util.Map)
  public <init>(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String, net.corda.core.utilities.NetworkHostAndPort, java.util.Map, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String, net.corda.core.utilities.NetworkHostAndPort, java.util.Map, java.util.Collection)
  public <init>(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String, net.corda.core.utilities.NetworkHostAndPort, java.util.Map, java.util.Collection, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final net.corda.core.identity.CordaX500Name component1()
  @Nullable
  public final net.corda.core.utilities.NetworkHostAndPort component10()
  @NotNull
  public final java.util.Map component11()
  @NotNull
  public final java.util.Collection component12()
  @NotNull
  public final java.util.List component2()
  @NotNull
  public final net.corda.testing.driver.VerifierType component3()
  @NotNull
  public final java.util.Map component4()
  @Nullable
  public final Boolean component5()
  @NotNull
  public final String component6()
  @NotNull
  public final java.util.Collection component7()
  @NotNull
  public final java.util.Map component8()
  @Nullable
  public final String component9()
  @NotNull
  public final net.corda.testing.driver.NodeParameters copy(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String)
  @NotNull
  public final net.corda.testing.driver.NodeParameters copy(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map)
  @NotNull
  public final net.corda.testing.driver.NodeParameters copy(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String)
  @NotNull
  public final net.corda.testing.driver.NodeParameters copy(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String, net.corda.core.utilities.NetworkHostAndPort)
  @NotNull
  public final net.corda.testing.driver.NodeParameters copy(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String, net.corda.core.utilities.NetworkHostAndPort, java.util.Map)
  @NotNull
  public final net.corda.testing.driver.NodeParameters copy(net.corda.core.identity.CordaX500Name, java.util.List, net.corda.testing.driver.VerifierType, java.util.Map, Boolean, String, java.util.Collection, java.util.Map, String, net.corda.core.utilities.NetworkHostAndPort, java.util.Map, java.util.Collection)
  public boolean equals(Object)
  @NotNull
  public final java.util.Collection getAdditionalCordapps()
  @NotNull
  public final java.util.Map getCustomOverrides()
  @NotNull
  public final java.util.Map getFlowOverrides()
  @NotNull
  public final java.util.Collection getLegacyContracts()
  @Nullable
  public final String getLogLevelOverride()
  @NotNull
  public final String getMaximumHeapSize()
  @Nullable
  public final net.corda.core.identity.CordaX500Name getProvidedName()
  @Nullable
  public final net.corda.core.utilities.NetworkHostAndPort getRpcAddress()
  @NotNull
  public final java.util.List getRpcUsers()
  @Nullable
  public final Boolean getStartInSameProcess()
  @NotNull
  public final java.util.Map getSystemProperties()
  @NotNull
  public final net.corda.testing.driver.VerifierType getVerifierType()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public final net.corda.testing.driver.NodeParameters withAdditionalCordapps(java.util.Set)
  @NotNull
  public final net.corda.testing.driver.NodeParameters withCustomOverrides(java.util.Map)
  @NotNull
  public final net.corda.testing.driver.NodeParameters withFlowOverrides(java.util.Map)
  @NotNull
  public final net.corda.testing.driver.NodeParameters withLegacyContracts(java.util.Collection)
  @NotNull
  public final net.corda.testing.driver.NodeParameters withLogLevelOverride(String)
  @NotNull
  public final net.corda.testing.driver.NodeParameters withMaximumHeapSize(String)
  @NotNull
  public final net.corda.testing.driver.NodeParameters withProvidedName(net.corda.core.identity.CordaX500Name)
  @NotNull
  public final net.corda.testing.driver.NodeParameters withRpcAddress(net.corda.core.utilities.NetworkHostAndPort)
  @NotNull
  public final net.corda.testing.driver.NodeParameters withRpcUsers(java.util.List)
  @NotNull
  public final net.corda.testing.driver.NodeParameters withStartInSameProcess(Boolean)
  @NotNull
  public final net.corda.testing.driver.NodeParameters withSystemProperties(java.util.Map)
  @NotNull
  public final net.corda.testing.driver.NodeParameters withVerifierType(net.corda.testing.driver.VerifierType)
##
public final class net.corda.testing.driver.NotaryHandle extends java.lang.Object
  public <init>(net.corda.core.identity.Party, boolean, net.corda.core.concurrent.CordaFuture)
  @NotNull
  public final net.corda.core.identity.Party component1()
  public final boolean component2()
  @NotNull
  public final net.corda.core.concurrent.CordaFuture component3()
  @NotNull
  public final net.corda.testing.driver.NotaryHandle copy(net.corda.core.identity.Party, boolean, net.corda.core.concurrent.CordaFuture)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.identity.Party getIdentity()
  @NotNull
  public final net.corda.core.concurrent.CordaFuture getNodeHandles()
  public final boolean getValidating()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public interface net.corda.testing.driver.OutOfProcess extends net.corda.testing.driver.NodeHandle
  @NotNull
  public abstract Process getProcess()
##
@DoNotImplement
public abstract class net.corda.testing.driver.PortAllocation extends java.lang.Object
  public <init>()
  @NotNull
  public static final net.corda.testing.driver.PortAllocation getDefaultAllocator()
  @NotNull
  public final net.corda.core.utilities.NetworkHostAndPort nextHostAndPort()
  public abstract int nextPort()
  @NotNull
  public static final net.corda.testing.driver.PortAllocation$Companion Companion
  public static final int DEFAULT_START_PORT = 10000
  public static final int FIRST_EPHEMERAL_PORT = 30000
##
public static final class net.corda.testing.driver.PortAllocation$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.testing.driver.PortAllocation getDefaultAllocator()
##
@DoNotImplement
public static class net.corda.testing.driver.PortAllocation$Incremental extends net.corda.testing.driver.PortAllocation
  public <init>(int)
  @NotNull
  public final java.util.concurrent.atomic.AtomicInteger getPortCounter()
  public int nextPort()
##
@DoNotImplement
public class net.corda.testing.driver.SharedMemoryIncremental extends net.corda.testing.driver.PortAllocation
  public int nextPort()
  public static net.corda.testing.driver.SharedMemoryIncremental INSTANCE
##
public final class net.corda.testing.driver.VerifierType extends java.lang.Enum
  @NotNull
  public static kotlin.enums.EnumEntries getEntries()
  public static net.corda.testing.driver.VerifierType valueOf(String)
  public static net.corda.testing.driver.VerifierType[] values()
##
public final class net.corda.testing.driver.WebserverHandle extends java.lang.Object
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Process)
  @NotNull
  public final net.corda.core.utilities.NetworkHostAndPort component1()
  @NotNull
  public final Process component2()
  @NotNull
  public final net.corda.testing.driver.WebserverHandle copy(net.corda.core.utilities.NetworkHostAndPort, Process)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.utilities.NetworkHostAndPort getListenAddress()
  @NotNull
  public final Process getProcess()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.testing.flows.FlowTestsUtilsKt extends java.lang.Object
  @NotNull
  public static final kotlin.Pair from(T, net.corda.core.flows.FlowSession)
  @NotNull
  public static final R from(java.util.Map, net.corda.core.flows.FlowSession)
  @NotNull
  public static final kotlin.Pair from(kotlin.reflect.KClass, net.corda.core.flows.FlowSession)
  @Suspendable
  @NotNull
  public static final java.util.List receiveAll(net.corda.core.flows.FlowLogic, Class, net.corda.core.flows.FlowSession, net.corda.core.flows.FlowSession...)
  @Suspendable
  @NotNull
  public static final java.util.Map receiveAll(net.corda.core.flows.FlowLogic, kotlin.Pair, kotlin.Pair<? extends net.corda.core.flows.FlowSession, ? extends Class<?>>...)
  @Suspendable
  public static final java.util.List receiveAll(net.corda.core.flows.FlowLogic, net.corda.core.flows.FlowSession, net.corda.core.flows.FlowSession...)
  public static final net.corda.core.concurrent.CordaFuture registerCordappFlowFactory(net.corda.testing.node.internal.TestStartedNode, kotlin.reflect.KClass, int, kotlin.jvm.functions.Function1)
  @NotNull
  public static final rx.Observable registerCoreFlowFactory(net.corda.testing.node.internal.TestStartedNode, Class, Class, kotlin.jvm.functions.Function1, boolean)
  public static final void waitForAllFlowsToComplete(net.corda.testing.driver.NodeHandle, int, long)
##
@DoNotImplement
public abstract class net.corda.testing.node.ClusterSpec extends java.lang.Object
  public <init>()
  public abstract int getClusterSize()
##
@DoNotImplement
public static final class net.corda.testing.node.ClusterSpec$Raft extends net.corda.testing.node.ClusterSpec
  public <init>(int)
  public final int component1()
  @NotNull
  public final net.corda.testing.node.ClusterSpec$Raft copy(int)
  public boolean equals(Object)
  public int getClusterSize()
  public int hashCode()
  @NotNull
  public String toString()
##
public final class net.corda.testing.node.DatabaseSnapshot extends java.lang.Object
  public final void copyDatabaseSnapshot(java.nio.file.Path)
  public final java.nio.file.Path databaseFilename(java.nio.file.Path)
  @NotNull
  public static final net.corda.testing.node.DatabaseSnapshot INSTANCE
##
@ThreadSafe
public final class net.corda.testing.node.InMemoryMessagingNetwork extends net.corda.core.serialization.SingletonSerializeAsToken
  public <init>(boolean, net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy, org.apache.activemq.artemis.utils.ReusableLatch, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final synchronized java.util.List getEndpointsExternal()
  @NotNull
  public final rx.Observable getReceivedMessages()
  @NotNull
  public final rx.Observable getSentMessages()
  @Nullable
  public final net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer pumpSend(boolean)
  public final void stop()
  @NotNull
  public static final net.corda.testing.node.InMemoryMessagingNetwork$Companion Companion
##
public static final class net.corda.testing.node.InMemoryMessagingNetwork$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public static final class net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle extends java.lang.Object implements net.corda.core.messaging.MessageRecipientGroup
  public <init>(net.corda.core.identity.Party)
  @NotNull
  public final net.corda.core.identity.Party component1()
  @NotNull
  public final net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle copy(net.corda.core.identity.Party)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.identity.Party getParty()
  public int hashCode()
  @NotNull
  public String toString()
##
public static interface net.corda.testing.node.InMemoryMessagingNetwork$LatencyCalculator
  @NotNull
  public abstract java.time.Duration between(net.corda.core.messaging.SingleMessageRecipient, net.corda.core.messaging.SingleMessageRecipient)
##
@CordaSerializable
public static final class net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer extends java.lang.Object
  @NotNull
  public final net.corda.core.utilities.ByteSequence getMessageData()
  @NotNull
  public final net.corda.core.messaging.MessageRecipients getRecipients()
  @NotNull
  public final net.corda.testing.node.InMemoryMessagingNetwork$PeerHandle getSender()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer$Companion Companion
##
public static final class net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
public static final class net.corda.testing.node.InMemoryMessagingNetwork$MockMessagingService extends java.lang.Object
  public <init>(net.corda.testing.node.internal.MockNodeMessagingService, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer pumpReceive(boolean)
  @NotNull
  public static final net.corda.testing.node.InMemoryMessagingNetwork$MockMessagingService$Companion Companion
##
public static final class net.corda.testing.node.InMemoryMessagingNetwork$MockMessagingService$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@CordaSerializable
public static final class net.corda.testing.node.InMemoryMessagingNetwork$PeerHandle extends java.lang.Object implements net.corda.core.messaging.SingleMessageRecipient
  public <init>(int, net.corda.core.identity.CordaX500Name)
  public final int component1()
  @NotNull
  public final net.corda.core.identity.CordaX500Name component2()
  @NotNull
  public final net.corda.testing.node.InMemoryMessagingNetwork$PeerHandle copy(int, net.corda.core.identity.CordaX500Name)
  public boolean equals(Object)
  public final int getId()
  @NotNull
  public final net.corda.core.identity.CordaX500Name getName()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public abstract static class net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  public abstract A pickNext(net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle, java.util.List)
##
@DoNotImplement
public static final class net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy$Random extends net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy
  public <init>()
  public <init>(java.util.SplittableRandom)
  public <init>(java.util.SplittableRandom, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.SplittableRandom getRandom()
  public A pickNext(net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle, java.util.List)
##
@DoNotImplement
public static final class net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy$RoundRobin extends net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy
  public <init>()
  public A pickNext(net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle, java.util.List)
##
public final class net.corda.testing.node.MockNetFlowTimeOut extends java.lang.Object
  public <init>(java.time.Duration, int, double)
  public final double getBackoffBase()
  public final int getMaxRestartCount()
  @NotNull
  public final java.time.Duration getTimeout()
##
public final class net.corda.testing.node.MockNetNotaryConfig extends java.lang.Object
  public <init>(boolean, com.typesafe.config.Config, String, net.corda.core.identity.CordaX500Name)
  public <init>(boolean, com.typesafe.config.Config, String, net.corda.core.identity.CordaX500Name, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final String getClassName()
  @Nullable
  public final com.typesafe.config.Config getExtraConfig()
  @Nullable
  public final net.corda.core.identity.CordaX500Name getServiceLegalName()
  public final boolean getValidating()
##
public class net.corda.testing.node.MockNetwork extends java.lang.Object
  public <init>(java.util.List)
  public <init>(java.util.List, net.corda.testing.node.MockNetworkParameters)
  public <init>(java.util.List, net.corda.testing.node.MockNetworkParameters, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(java.util.List, net.corda.testing.node.MockNetworkParameters, boolean, boolean, net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy, java.util.List, net.corda.core.node.NetworkParameters)
  public <init>(java.util.List, net.corda.testing.node.MockNetworkParameters, boolean, boolean, net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy, java.util.List, net.corda.core.node.NetworkParameters, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.testing.node.MockNetworkParameters)
  @NotNull
  public final java.nio.file.Path baseDirectory(int)
  @NotNull
  public final net.corda.testing.node.StartedMockNode createNode()
  @NotNull
  public final net.corda.testing.node.StartedMockNode createNode(net.corda.core.identity.CordaX500Name)
  @NotNull
  public final net.corda.testing.node.StartedMockNode createNode(net.corda.core.identity.CordaX500Name, Integer)
  @NotNull
  public final net.corda.testing.node.StartedMockNode createNode(net.corda.core.identity.CordaX500Name, Integer, java.math.BigInteger)
  @NotNull
  public final net.corda.testing.node.StartedMockNode createNode(net.corda.core.identity.CordaX500Name, Integer, java.math.BigInteger, net.corda.testing.node.MockNodeConfigOverrides)
  @NotNull
  public final net.corda.testing.node.StartedMockNode createNode(net.corda.testing.node.MockNodeParameters)
  @NotNull
  public final net.corda.testing.node.StartedMockNode createPartyNode(net.corda.core.identity.CordaX500Name)
  @NotNull
  public final net.corda.testing.node.UnstartedMockNode createUnstartedNode()
  @NotNull
  public final net.corda.testing.node.UnstartedMockNode createUnstartedNode(net.corda.core.identity.CordaX500Name)
  @NotNull
  public final net.corda.testing.node.UnstartedMockNode createUnstartedNode(net.corda.core.identity.CordaX500Name, Integer)
  @NotNull
  public final net.corda.testing.node.UnstartedMockNode createUnstartedNode(net.corda.core.identity.CordaX500Name, Integer, java.math.BigInteger)
  @NotNull
  public final net.corda.testing.node.UnstartedMockNode createUnstartedNode(net.corda.core.identity.CordaX500Name, Integer, java.math.BigInteger, net.corda.testing.node.MockNodeConfigOverrides)
  @NotNull
  public final net.corda.testing.node.UnstartedMockNode createUnstartedNode(net.corda.testing.node.MockNodeParameters)
  @NotNull
  public final java.util.List getCordappPackages()
  @NotNull
  public final net.corda.core.identity.Party getDefaultNotaryIdentity()
  @NotNull
  public final net.corda.testing.node.StartedMockNode getDefaultNotaryNode()
  @NotNull
  public final net.corda.testing.node.MockNetworkParameters getDefaultParameters()
  @NotNull
  public final net.corda.core.node.NetworkParameters getNetworkParameters()
  public final boolean getNetworkSendManuallyPumped()
  public final int getNextNodeId()
  @NotNull
  public final java.util.List getNotaryNodes()
  @NotNull
  public final java.util.List getNotarySpecs()
  @NotNull
  public final net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy getServicePeerAllocationStrategy()
  public final boolean getThreadPerNode()
  public final void runNetwork()
  public final void runNetwork(int)
  public final void startNodes()
  public final void stopNodes()
  public final void waitQuiescent()
##
public final class net.corda.testing.node.MockNetworkNotarySpec extends java.lang.Object
  public <init>(net.corda.core.identity.CordaX500Name)
  public <init>(net.corda.core.identity.CordaX500Name, boolean)
  public <init>(net.corda.core.identity.CordaX500Name, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.CordaX500Name, boolean, String)
  public <init>(net.corda.core.identity.CordaX500Name, boolean, String, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.identity.CordaX500Name component1()
  public final boolean component2()
  @NotNull
  public final net.corda.testing.node.MockNetworkNotarySpec copy(net.corda.core.identity.CordaX500Name, boolean)
  public boolean equals(Object)
  @Nullable
  public final String getClassName()
  @NotNull
  public final net.corda.core.identity.CordaX500Name getName()
  public final boolean getValidating()
  public int hashCode()
  public final void setClassName(String)
  @NotNull
  public String toString()
##
public final class net.corda.testing.node.MockNetworkParameters extends java.lang.Object
  public <init>()
  public <init>(java.util.Collection)
  public <init>(boolean, boolean, net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy, java.util.List, net.corda.core.node.NetworkParameters)
  public <init>(boolean, boolean, net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy, java.util.List, net.corda.core.node.NetworkParameters, java.util.Collection)
  public <init>(boolean, boolean, net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy, java.util.List, net.corda.core.node.NetworkParameters, java.util.Collection, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final boolean component1()
  public final boolean component2()
  @NotNull
  public final net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy component3()
  @NotNull
  public final java.util.List component4()
  @NotNull
  public final net.corda.core.node.NetworkParameters component5()
  @NotNull
  public final java.util.Collection component6()
  @NotNull
  public final net.corda.testing.node.MockNetworkParameters copy(boolean, boolean, net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy, java.util.List, net.corda.core.node.NetworkParameters)
  @NotNull
  public final net.corda.testing.node.MockNetworkParameters copy(boolean, boolean, net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy, java.util.List, net.corda.core.node.NetworkParameters, java.util.Collection)
  public boolean equals(Object)
  @NotNull
  public final java.util.Collection getCordappsForAllNodes()
  @NotNull
  public final net.corda.core.node.NetworkParameters getNetworkParameters()
  public final boolean getNetworkSendManuallyPumped()
  @NotNull
  public final java.util.List getNotarySpecs()
  @NotNull
  public final net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy getServicePeerAllocationStrategy()
  public final boolean getThreadPerNode()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public final net.corda.testing.node.MockNetworkParameters withCordappsForAllNodes(java.util.Collection)
  @NotNull
  public final net.corda.testing.node.MockNetworkParameters withNetworkParameters(net.corda.core.node.NetworkParameters)
  @NotNull
  public final net.corda.testing.node.MockNetworkParameters withNetworkSendManuallyPumped(boolean)
  @NotNull
  public final net.corda.testing.node.MockNetworkParameters withNotarySpecs(java.util.List)
  @NotNull
  public final net.corda.testing.node.MockNetworkParameters withServicePeerAllocationStrategy(net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy)
  @NotNull
  public final net.corda.testing.node.MockNetworkParameters withThreadPerNode(boolean)
##
public final class net.corda.testing.node.MockNodeConfigOverrides extends java.lang.Object
  public <init>()
  public <init>(java.util.Map, net.corda.testing.node.MockNetNotaryConfig, net.corda.testing.node.MockNetFlowTimeOut)
  public <init>(java.util.Map, net.corda.testing.node.MockNetNotaryConfig, net.corda.testing.node.MockNetFlowTimeOut, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final java.util.Map getExtraDataSourceProperties()
  @Nullable
  public final net.corda.testing.node.MockNetFlowTimeOut getFlowTimeout()
  @Nullable
  public final net.corda.testing.node.MockNetNotaryConfig getNotary()
##
public final class net.corda.testing.node.MockNodeParameters extends java.lang.Object
  public <init>()
  public <init>(Integer, net.corda.core.identity.CordaX500Name, java.math.BigInteger, net.corda.testing.node.MockNodeConfigOverrides)
  public <init>(Integer, net.corda.core.identity.CordaX500Name, java.math.BigInteger, net.corda.testing.node.MockNodeConfigOverrides, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(Integer, net.corda.core.identity.CordaX500Name, java.math.BigInteger, net.corda.testing.node.MockNodeConfigOverrides, java.util.Collection)
  public <init>(Integer, net.corda.core.identity.CordaX500Name, java.math.BigInteger, net.corda.testing.node.MockNodeConfigOverrides, java.util.Collection, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @Nullable
  public final Integer component1()
  @Nullable
  public final net.corda.core.identity.CordaX500Name component2()
  @NotNull
  public final java.math.BigInteger component3()
  @Nullable
  public final net.corda.testing.node.MockNodeConfigOverrides component4()
  @NotNull
  public final java.util.Collection component5()
  @NotNull
  public final net.corda.testing.node.MockNodeParameters copy(Integer, net.corda.core.identity.CordaX500Name, java.math.BigInteger, net.corda.testing.node.MockNodeConfigOverrides)
  @NotNull
  public final net.corda.testing.node.MockNodeParameters copy(Integer, net.corda.core.identity.CordaX500Name, java.math.BigInteger, net.corda.testing.node.MockNodeConfigOverrides, java.util.Collection)
  public boolean equals(Object)
  @NotNull
  public final java.util.Collection getAdditionalCordapps()
  @Nullable
  public final net.corda.testing.node.MockNodeConfigOverrides getConfigOverrides()
  @NotNull
  public final java.math.BigInteger getEntropyRoot()
  @Nullable
  public final Integer getForcedID()
  @Nullable
  public final net.corda.core.identity.CordaX500Name getLegalName()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public final net.corda.testing.node.MockNodeParameters withAdditionalCordapps(java.util.Collection)
  @NotNull
  public final net.corda.testing.node.MockNodeParameters withConfigOverrides(net.corda.testing.node.MockNodeConfigOverrides)
  @NotNull
  public final net.corda.testing.node.MockNodeParameters withEntropyRoot(java.math.BigInteger)
  @NotNull
  public final net.corda.testing.node.MockNodeParameters withForcedID(Integer)
  @NotNull
  public final net.corda.testing.node.MockNodeParameters withLegalName(net.corda.core.identity.CordaX500Name)
##
public class net.corda.testing.node.MockServices extends java.lang.Object implements net.corda.core.node.ServiceHub
  public <init>()
  public <init>(Iterable)
  public <init>(Iterable, net.corda.core.identity.CordaX500Name)
  public <init>(Iterable, net.corda.core.identity.CordaX500Name, java.security.KeyPair, java.security.KeyPair...)
  public <init>(Iterable, net.corda.core.identity.CordaX500Name, net.corda.core.node.services.IdentityService)
  public <init>(Iterable, net.corda.core.identity.CordaX500Name, net.corda.core.node.services.IdentityService, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(Iterable, net.corda.core.identity.CordaX500Name, net.corda.core.node.services.IdentityService, java.security.KeyPair, java.security.KeyPair...)
  public <init>(Iterable, net.corda.core.identity.CordaX500Name, net.corda.core.node.services.IdentityService, java.security.KeyPair, java.security.KeyPair[], int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(Iterable, net.corda.testing.core.TestIdentity, net.corda.core.node.services.IdentityService, net.corda.core.node.NetworkParameters, java.security.KeyPair...)
  public <init>(Iterable, net.corda.testing.core.TestIdentity, net.corda.core.node.services.IdentityService, net.corda.core.node.NetworkParameters, java.security.KeyPair[], net.corda.core.node.services.KeyManagementService)
  public <init>(Iterable, net.corda.testing.core.TestIdentity, net.corda.core.node.services.IdentityService, java.security.KeyPair...)
  public <init>(Iterable, net.corda.testing.core.TestIdentity, net.corda.core.node.services.IdentityService, java.security.KeyPair[], int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(Iterable, net.corda.testing.core.TestIdentity, java.security.KeyPair...)
  public <init>(java.util.List, net.corda.core.identity.CordaX500Name, net.corda.core.node.services.IdentityService, net.corda.core.node.NetworkParameters)
  public <init>(java.util.List, net.corda.core.identity.CordaX500Name, net.corda.core.node.services.IdentityService, net.corda.core.node.NetworkParameters, java.security.KeyPair)
  public <init>(java.util.List, net.corda.testing.core.TestIdentity, net.corda.core.node.NetworkParameters, net.corda.testing.core.TestIdentity...)
  public <init>(java.util.List, net.corda.testing.core.TestIdentity, net.corda.testing.core.TestIdentity...)
  public <init>(net.corda.core.identity.CordaX500Name)
  public <init>(net.corda.core.identity.CordaX500Name, java.security.KeyPair, java.security.KeyPair...)
  public <init>(net.corda.core.identity.CordaX500Name, net.corda.core.node.services.IdentityService)
  public <init>(net.corda.core.identity.CordaX500Name, net.corda.core.node.services.IdentityService, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.CordaX500Name, net.corda.core.node.services.IdentityService, java.security.KeyPair, java.security.KeyPair...)
  public <init>(net.corda.core.identity.CordaX500Name, net.corda.core.node.services.IdentityService, java.security.KeyPair, java.security.KeyPair[], int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.nodeapi.internal.cordapp.CordappLoader, net.corda.core.node.services.IdentityService, net.corda.core.node.NetworkParameters, net.corda.testing.core.TestIdentity, java.security.KeyPair[], net.corda.core.node.services.KeyManagementService, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.testing.core.TestIdentity, net.corda.core.node.NetworkParameters, net.corda.testing.core.TestIdentity...)
  public <init>(net.corda.testing.core.TestIdentity, net.corda.testing.core.TestIdentity...)
  public final void addMockCordapp(String)
  @NotNull
  public T cordaService(Class)
  @NotNull
  public T cordaTelemetryComponent(Class)
  @NotNull
  public final net.corda.testing.services.MockAttachmentStorage getAttachments()
  @NotNull
  public net.corda.testing.node.TestClock getClock()
  @NotNull
  public net.corda.core.node.services.ContractUpgradeService getContractUpgradeService()
  @NotNull
  public final ClassLoader getCordappClassloader()
  @NotNull
  public net.corda.core.cordapp.CordappProvider getCordappProvider()
  @NotNull
  public net.corda.core.node.services.diagnostics.DiagnosticsService getDiagnosticsService()
  @NotNull
  public net.corda.core.node.services.IdentityService getIdentityService()
  @NotNull
  public net.corda.core.node.services.KeyManagementService getKeyManagementService()
  @NotNull
  public net.corda.core.node.NodeInfo getMyInfo()
  @NotNull
  public net.corda.core.node.services.NetworkMapCache getNetworkMapCache()
  @NotNull
  public net.corda.core.node.NetworkParameters getNetworkParameters()
  @NotNull
  public net.corda.core.node.services.NetworkParametersService getNetworkParametersService()
  @NotNull
  protected final net.corda.core.node.ServicesForResolution getServicesForResolution()
  @NotNull
  public net.corda.core.internal.telemetry.TelemetryServiceImpl getTelemetryService()
  @NotNull
  public net.corda.core.node.services.TransactionStorage getValidatedTransactions()
  @NotNull
  public net.corda.core.node.services.VaultService getVaultService()
  @NotNull
  public java.sql.Connection jdbcSession()
  @NotNull
  public net.corda.core.contracts.Attachment loadContractAttachment(net.corda.core.contracts.StateRef)
  @NotNull
  public net.corda.core.contracts.TransactionState loadState(net.corda.core.contracts.StateRef)
  @NotNull
  public java.util.Set loadStates(java.util.Set)
  @NotNull
  public static final java.util.Properties makeTestDataSourceProperties(String)
  @NotNull
  public static final kotlin.Pair makeTestDatabaseAndMockServices(java.util.List, net.corda.core.node.services.IdentityService, net.corda.testing.core.TestIdentity, net.corda.core.node.NetworkParameters, java.security.KeyPair...)
  @NotNull
  public static final kotlin.Pair makeTestDatabaseAndMockServices(java.util.List, net.corda.core.node.services.IdentityService, net.corda.testing.core.TestIdentity, java.security.KeyPair...)
  @NotNull
  public static final kotlin.Pair makeTestDatabaseAndPersistentServices(java.util.List, net.corda.testing.core.TestIdentity, java.util.Set, java.util.Set)
  @NotNull
  public static final kotlin.Pair makeTestDatabaseAndPersistentServices(java.util.List, net.corda.testing.core.TestIdentity, net.corda.core.node.NetworkParameters, java.util.Set, java.util.Set)
  @NotNull
  public static final kotlin.Pair makeTestDatabaseAndPersistentServices(java.util.List, net.corda.testing.core.TestIdentity, net.corda.core.node.NetworkParameters, java.util.Set, java.util.Set, net.corda.testing.internal.TestingNamedCacheFactory)
  public final void recordTransactions(Iterable, boolean)
  public void recordTransactions(net.corda.core.node.StatesToRecord, Iterable)
  public final void recordTransactions(net.corda.core.transactions.SignedTransaction, boolean)
  @NotNull
  public Void registerUnloadHandler(kotlin.jvm.functions.Function0)
  public void setNetworkParametersService(net.corda.core.node.services.NetworkParametersService)
  public void withEntityManager(java.util.function.Consumer)
  public T withEntityManager(kotlin.jvm.functions.Function1)
  @NotNull
  public static final net.corda.testing.node.MockServices$Companion Companion
##
public static final class net.corda.testing.node.MockServices$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.Properties makeTestDataSourceProperties(String)
  @NotNull
  public final kotlin.Pair makeTestDatabaseAndMockServices(java.util.List, net.corda.core.node.services.IdentityService, net.corda.testing.core.TestIdentity, net.corda.core.node.NetworkParameters, java.security.KeyPair...)
  @NotNull
  public final kotlin.Pair makeTestDatabaseAndMockServices(java.util.List, net.corda.core.node.services.IdentityService, net.corda.testing.core.TestIdentity, java.security.KeyPair...)
  @NotNull
  public final kotlin.Pair makeTestDatabaseAndPersistentServices(java.util.List, net.corda.testing.core.TestIdentity, java.util.Set, java.util.Set)
  @NotNull
  public final kotlin.Pair makeTestDatabaseAndPersistentServices(java.util.List, net.corda.testing.core.TestIdentity, net.corda.core.node.NetworkParameters, java.util.Set, java.util.Set)
  @NotNull
  public final kotlin.Pair makeTestDatabaseAndPersistentServices(java.util.List, net.corda.testing.core.TestIdentity, net.corda.core.node.NetworkParameters, java.util.Set, java.util.Set, net.corda.testing.internal.TestingNamedCacheFactory)
##
public final class net.corda.testing.node.MockServicesKt extends java.lang.Object
  @NotNull
  public static final T createMockCordaService(net.corda.testing.node.MockServices, kotlin.jvm.functions.Function1)
  @NotNull
  public static final net.corda.core.node.services.IdentityService makeTestIdentityService(net.corda.core.identity.PartyAndCertificate...)
##
public final class net.corda.testing.node.NodeTestUtils extends java.lang.Object
  @NotNull
  public static final net.corda.testing.dsl.LedgerDSL ledger(net.corda.core.node.ServiceHub, kotlin.jvm.functions.Function1)
  @NotNull
  public static final net.corda.testing.dsl.LedgerDSL ledger(net.corda.core.node.ServiceHub, net.corda.core.identity.Party, kotlin.jvm.functions.Function1)
  @NotNull
  public static final net.corda.core.context.Actor testActor(net.corda.core.identity.CordaX500Name)
  @NotNull
  public static final net.corda.core.context.InvocationContext testContext(net.corda.core.identity.CordaX500Name)
  @NotNull
  public static final net.corda.testing.dsl.LedgerDSL transaction(net.corda.core.node.ServiceHub, kotlin.jvm.functions.Function1)
  @NotNull
  public static final net.corda.testing.dsl.LedgerDSL transaction(net.corda.core.node.ServiceHub, net.corda.core.identity.Party, kotlin.jvm.functions.Function1)
##
public final class net.corda.testing.node.NotarySpec extends java.lang.Object
  public <init>(net.corda.core.identity.CordaX500Name, boolean, java.util.List, net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec)
  public <init>(net.corda.core.identity.CordaX500Name, boolean, java.util.List, net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.CordaX500Name, boolean, java.util.List, net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec, String)
  public <init>(net.corda.core.identity.CordaX500Name, boolean, java.util.List, net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec, String, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.CordaX500Name, boolean, java.util.List, net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec, String, boolean)
  public <init>(net.corda.core.identity.CordaX500Name, boolean, java.util.List, net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec, String, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.identity.CordaX500Name, boolean, java.util.List, net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec, boolean)
  public <init>(net.corda.core.identity.CordaX500Name, boolean, java.util.List, net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.core.identity.CordaX500Name component1()
  public final boolean component2()
  @NotNull
  public final java.util.List component3()
  @NotNull
  public final net.corda.testing.driver.VerifierType component4()
  @Nullable
  public final net.corda.testing.node.ClusterSpec component5()
  public final boolean component6()
  @NotNull
  public final net.corda.testing.node.NotarySpec copy(net.corda.core.identity.CordaX500Name, boolean, java.util.List, net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec)
  @NotNull
  public final net.corda.testing.node.NotarySpec copy(net.corda.core.identity.CordaX500Name, boolean, java.util.List, net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec, boolean)
  public boolean equals(Object)
  @Nullable
  public final net.corda.testing.node.ClusterSpec getCluster()
  @NotNull
  public final String getMaximumHeapSize()
  @NotNull
  public final net.corda.core.identity.CordaX500Name getName()
  @NotNull
  public final java.util.List getRpcUsers()
  public final boolean getStartInProcess()
  public final boolean getValidating()
  @NotNull
  public final net.corda.testing.driver.VerifierType getVerifierType()
  public int hashCode()
  public final void setMaximumHeapSize(String)
  @NotNull
  public String toString()
##
public final class net.corda.testing.node.StartedMockNode extends java.lang.Object
  public <init>(net.corda.testing.node.internal.TestStartedNode, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.util.List findStateMachines(Class)
  public final int getId()
  @NotNull
  public final net.corda.core.node.NodeInfo getInfo()
  @NotNull
  public final net.corda.core.node.ServiceHub getServices()
  @Nullable
  public final net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer pumpReceive(boolean)
  @NotNull
  public final rx.Observable registerInitiatedFlow(Class)
  @NotNull
  public final rx.Observable registerInitiatedFlow(Class, Class)
  @NotNull
  public final net.corda.core.concurrent.CordaFuture startFlow(net.corda.core.flows.FlowLogic)
  public final void stop()
  public final T transaction(kotlin.jvm.functions.Function0)
  @NotNull
  public static final net.corda.testing.node.StartedMockNode$Companion Companion
##
public static final class net.corda.testing.node.StartedMockNode$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@ThreadSafe
public final class net.corda.testing.node.TestClock extends net.corda.node.MutableClock
  public <init>(java.time.Clock)
  public final synchronized void advanceBy(java.time.Duration)
  public final synchronized void setTo(java.time.Instant)
##
@DoNotImplement
public abstract class net.corda.testing.node.TestCordapp extends java.lang.Object
  public <init>()
  @NotNull
  public abstract net.corda.testing.node.TestCordapp asSigned()
  @NotNull
  public static final net.corda.testing.node.TestCordapp findCordapp(String)
  @NotNull
  public abstract java.util.Map getConfig()
  @NotNull
  public static final net.corda.testing.node.TestCordapp of(java.net.URI)
  @NotNull
  public abstract net.corda.testing.node.TestCordapp withConfig(java.util.Map)
  @NotNull
  public static final net.corda.testing.node.TestCordapp$Companion Companion
##
public static final class net.corda.testing.node.TestCordapp$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.testing.node.TestCordapp findCordapp(String)
  @NotNull
  public final net.corda.testing.node.TestCordapp of(java.net.URI)
##
public final class net.corda.testing.node.UnstartedMockNode extends java.lang.Object
  public <init>(net.corda.testing.node.internal.InternalMockNetwork$MockNode, kotlin.jvm.internal.DefaultConstructorMarker)
  public final int getId()
  @NotNull
  public final net.corda.testing.node.StartedMockNode getStarted()
  @NotNull
  public final T installCordaService(Class)
  public final boolean isStarted()
  @NotNull
  public final net.corda.testing.node.StartedMockNode start()
  @NotNull
  public static final net.corda.testing.node.UnstartedMockNode$Companion Companion
##
public static final class net.corda.testing.node.UnstartedMockNode$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
public final class net.corda.testing.node.User extends java.lang.Object
  public <init>(String, String, java.util.Set)
  @NotNull
  public final String component1()
  @NotNull
  public final String component2()
  @NotNull
  public final java.util.Set component3()
  @NotNull
  public final net.corda.testing.node.User copy(String, String, java.util.Set)
  public boolean equals(Object)
  @NotNull
  public final String getPassword()
  @NotNull
  public final java.util.Set getPermissions()
  @NotNull
  public final String getUsername()
  public int hashCode()
  @NotNull
  public String toString()
##
public class net.corda.client.rpc.ConnectionFailureException extends net.corda.client.rpc.RPCException
  public <init>()
  public <init>(Throwable)
  public <init>(Throwable, int, kotlin.jvm.internal.DefaultConstructorMarker)
##
public final class net.corda.client.rpc.CordaRPCClient extends java.lang.Object
  public <init>(java.util.List)
  public <init>(java.util.List, java.util.Set)
  public <init>(java.util.List, net.corda.client.rpc.CordaRPCClientConfiguration)
  public <init>(java.util.List, net.corda.client.rpc.CordaRPCClientConfiguration, java.util.Set)
  public <init>(java.util.List, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions)
  public <init>(java.util.List, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader)
  public <init>(java.util.List, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(java.util.List, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, java.util.Set)
  public <init>(java.util.List, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, java.util.Set, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(java.util.List, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, java.util.Set)
  public <init>(net.corda.core.utilities.NetworkHostAndPort)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, java.util.Set)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration, ClassLoader)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration, ClassLoader, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration, java.util.Set)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, java.util.Set)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, java.util.Set, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, java.util.Set)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.client.rpc.CordaRPCConnection start(String, String)
  @NotNull
  public final net.corda.client.rpc.CordaRPCConnection start(String, String, net.corda.client.rpc.GracefulReconnect)
  @NotNull
  public final net.corda.client.rpc.CordaRPCConnection start(String, String, net.corda.core.context.Trace, net.corda.core.context.Actor)
  @NotNull
  public final net.corda.client.rpc.CordaRPCConnection start(String, String, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.client.rpc.GracefulReconnect)
  @NotNull
  public final net.corda.client.rpc.CordaRPCConnection start(String, String, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.identity.CordaX500Name)
  @NotNull
  public final net.corda.client.rpc.CordaRPCConnection start(String, String, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.identity.CordaX500Name, net.corda.client.rpc.GracefulReconnect)
  @NotNull
  public final net.corda.client.rpc.CordaRPCConnection start(String, String, net.corda.core.identity.CordaX500Name)
  @NotNull
  public final net.corda.client.rpc.CordaRPCConnection start(String, String, net.corda.core.identity.CordaX500Name, net.corda.client.rpc.GracefulReconnect)
  public final A use(String, String, kotlin.jvm.functions.Function1)
  @NotNull
  public static final net.corda.client.rpc.CordaRPCClient$Companion Companion
##
public static final class net.corda.client.rpc.CordaRPCClient$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
public class net.corda.client.rpc.CordaRPCClientConfiguration extends java.lang.Object
  public <init>()
  public <init>(java.time.Duration)
  public <init>(java.time.Duration, int)
  public <init>(java.time.Duration, int, boolean)
  public <init>(java.time.Duration, int, boolean, java.time.Duration)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int, int)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int, java.time.Duration)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int, java.time.Duration, boolean)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int, java.time.Duration, boolean, boolean)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int, java.time.Duration, boolean, boolean, boolean)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int, java.time.Duration, boolean, boolean, boolean, boolean)
  public <init>(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int, java.time.Duration, boolean, boolean, boolean, boolean, int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final java.time.Duration component1()
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy()
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration)
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration, int)
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration, int, boolean)
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration, int, boolean, java.time.Duration)
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration, int, boolean, java.time.Duration, int)
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration, int, boolean, java.time.Duration, int, int)
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration)
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double)
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int)
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int)
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int, java.time.Duration)
  @NotNull
  public final net.corda.client.rpc.CordaRPCClientConfiguration copy(java.time.Duration, int, boolean, java.time.Duration, int, int, java.time.Duration, double, int, int, java.time.Duration, boolean, boolean, boolean, boolean)
  public boolean equals(Object)
  public int getCacheConcurrencyLevel()
  @NotNull
  public java.time.Duration getConnectionMaxRetryInterval()
  @NotNull
  public java.time.Duration getConnectionRetryInterval()
  public double getConnectionRetryIntervalMultiplier()
  public boolean getCopyBaggageToTags()
  @NotNull
  public java.time.Duration getDeduplicationCacheExpiry()
  public int getMaxFileSize()
  public int getMaxReconnectAttempts()
  public int getMinimumServerProtocolVersion()
  public int getObservationExecutorPoolSize()
  public boolean getOpenTelemetryEnabled()
  @NotNull
  public java.time.Duration getReapInterval()
  public boolean getSimpleLogTelemetryEnabled()
  public boolean getSpanStartEndEventsEnabled()
  public boolean getTrackRpcCallSites()
  public int hashCode()
  @NotNull
  public String toString()
  @NotNull
  public static final net.corda.client.rpc.CordaRPCClientConfiguration$Companion Companion
  @NotNull
  public static final net.corda.client.rpc.CordaRPCClientConfiguration DEFAULT
##
public static final class net.corda.client.rpc.CordaRPCClientConfiguration$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@DoNotImplement
public final class net.corda.client.rpc.CordaRPCConnection extends java.lang.Object implements net.corda.client.rpc.RPCConnection
  public <init>(net.corda.client.rpc.RPCConnection)
  public <init>(net.corda.client.rpc.RPCConnection, java.util.concurrent.ExecutorService, net.corda.client.rpc.internal.ReconnectingCordaRPCOps, kotlin.jvm.internal.DefaultConstructorMarker)
  public void forceClose()
  @NotNull
  public net.corda.core.messaging.CordaRPCOps getProxy()
  public int getServerProtocolVersion()
  @Nullable
  public T getTelemetryHandle(Class)
  public void notifyServerAndClose()
  @NotNull
  public static final net.corda.client.rpc.CordaRPCConnection$Companion Companion
##
public static final class net.corda.client.rpc.CordaRPCConnection$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
public final class net.corda.client.rpc.GracefulReconnect extends java.lang.Object
  public <init>()
  public <init>(Runnable, Runnable)
  public <init>(Runnable, Runnable, int)
  public <init>(Runnable, Runnable, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function0, int)
  public <init>(kotlin.jvm.functions.Function0, kotlin.jvm.functions.Function0, int, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final int getMaxAttempts()
  @NotNull
  public final kotlin.jvm.functions.Function0 getOnDisconnect()
  @NotNull
  public final kotlin.jvm.functions.Function0 getOnReconnect()
##
public final class net.corda.client.rpc.MaxRpcRetryException extends net.corda.client.rpc.RPCException
  public <init>(int, reflect.Method, Throwable)
##
public final class net.corda.client.rpc.PermissionException extends net.corda.core.CordaRuntimeException implements net.corda.core.ClientRelevantError, net.corda.nodeapi.exceptions.RpcSerializableError
  public <init>(String)
  @NotNull
  public final String getMsg()
##
@DoNotImplement
public interface net.corda.client.rpc.RPCConnection extends java.io.Closeable
  public void close()
  public abstract void forceClose()
  @NotNull
  public abstract I getProxy()
  public abstract int getServerProtocolVersion()
  @Nullable
  public abstract T getTelemetryHandle(Class)
  public abstract void notifyServerAndClose()
##
public class net.corda.client.rpc.RPCException extends net.corda.core.CordaRuntimeException
  public <init>(String)
  public <init>(String, Throwable)
##
public @interface net.corda.client.rpc.RPCSinceVersion
  public abstract int version()
##
public class net.corda.client.rpc.UnrecoverableRPCException extends net.corda.client.rpc.RPCException
  public <init>(String, Throwable)
  public <init>(String, Throwable, int, kotlin.jvm.internal.DefaultConstructorMarker)
##
public final class net.corda.client.rpc.UtilsKt extends java.lang.Object
  public static final void notUsed(rx.Observable)
##
public final class net.corda.client.rpc.ext.MultiRPCClient extends java.lang.Object implements java.lang.AutoCloseable
  public <init>(java.util.List, Class, String, String)
  public <init>(java.util.List, Class, String, String, java.util.Set)
  public <init>(java.util.List, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration)
  public <init>(java.util.List, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions)
  public <init>(java.util.List, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader)
  public <init>(java.util.List, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, net.corda.core.context.Trace)
  public <init>(java.util.List, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, net.corda.core.context.Trace, net.corda.core.context.Actor)
  public <init>(java.util.List, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.identity.CordaX500Name)
  public <init>(java.util.List, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.identity.CordaX500Name, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(java.util.List, Class, String, String, net.corda.client.rpc.CordaRPCClientConfiguration)
  public <init>(java.util.List, Class, String, String, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions)
  public <init>(java.util.List, Class, String, String, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader)
  public <init>(java.util.List, Class, String, String, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, ClassLoader, net.corda.client.rpc.CordaRPCClientConfiguration)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, ClassLoader, net.corda.client.rpc.CordaRPCClientConfiguration, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, java.util.Set)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, net.corda.core.context.Trace)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, net.corda.core.context.Trace, net.corda.core.context.Actor)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.identity.CordaX500Name)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, java.util.Set, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, net.corda.core.context.Trace, net.corda.core.context.Actor, net.corda.core.identity.CordaX500Name, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, net.corda.client.rpc.CordaRPCClientConfiguration)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, net.corda.client.rpc.CordaRPCClientConfiguration, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, net.corda.client.rpc.CordaRPCClientConfiguration, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader)
  public <init>(net.corda.core.utilities.NetworkHostAndPort, Class, String, String, net.corda.core.messaging.ClientRpcSslOptions, ClassLoader, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final boolean addConnectionListener(net.corda.client.rpc.ext.RPCConnectionListener)
  public void close()
  public final boolean removeConnectionListener(net.corda.client.rpc.ext.RPCConnectionListener)
  @NotNull
  public final java.util.concurrent.CompletableFuture start()
  public final void stop()
##
public interface net.corda.client.rpc.ext.RPCConnectionListener
  public abstract void onConnect(net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext)
  public abstract void onDisconnect(net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext)
  public abstract void onPermanentFailure(net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext)
##
public static interface net.corda.client.rpc.ext.RPCConnectionListener$ConnectionContext
  @Nullable
  public abstract net.corda.client.rpc.RPCConnection getConnectionOpt()
  @Nullable
  public abstract Throwable getThrowableOpt()
  @NotNull
  public abstract String getUserName()
##
public final class net.corda.client.rpc.reconnect.CouldNotStartFlowException extends net.corda.client.rpc.RPCException
  public <init>()
  public <init>(Throwable)
  public <init>(Throwable, int, kotlin.jvm.internal.DefaultConstructorMarker)
##
public final class net.corda.finance.test.CashSchema extends java.lang.Object
  @NotNull
  public static final net.corda.finance.test.CashSchema INSTANCE
##
public final class net.corda.finance.test.SampleCashSchemaV1 extends net.corda.core.schemas.MappedSchema
  @NotNull
  public static final net.corda.finance.test.SampleCashSchemaV1 INSTANCE
##
@Entity
@Table
public static class net.corda.finance.test.SampleCashSchemaV1$PersistentCashState extends net.corda.core.schemas.PersistentState
  public <init>()
  public <init>(String, long, String, String, byte[])
  @NotNull
  public String getCurrency()
  @NotNull
  public String getIssuerPartyHash()
  @NotNull
  public byte[] getIssuerRef()
  @NotNull
  public String getOwnerHash()
  public long getPennies()
  public void setCurrency(String)
  public void setIssuerPartyHash(String)
  public void setIssuerRef(byte[])
  public void setOwnerHash(String)
  public void setPennies(long)
##
public final class net.corda.finance.test.SampleCashSchemaV2 extends net.corda.core.schemas.MappedSchema
  @NotNull
  public static final net.corda.finance.test.SampleCashSchemaV2 INSTANCE
##
@Entity
@Table
public static class net.corda.finance.test.SampleCashSchemaV2$PersistentCashState extends net.corda.core.schemas.CommonSchemaV1$FungibleState
  public <init>()
  public <init>(String, java.util.Set, net.corda.core.identity.AbstractParty, long, net.corda.core.identity.AbstractParty, net.corda.core.utilities.OpaqueBytes)
  @NotNull
  public String getCurrency()
  @Nullable
  public java.util.Set getParticipants()
  public void setCurrency(String)
  public void setParticipants(java.util.Set)
##
public final class net.corda.finance.test.SampleCashSchemaV3 extends net.corda.core.schemas.MappedSchema
  @NotNull
  public static final net.corda.finance.test.SampleCashSchemaV3 INSTANCE
##
@Entity
@Table
public static class net.corda.finance.test.SampleCashSchemaV3$PersistentCashState extends net.corda.core.schemas.PersistentState
  public <init>()
  public <init>(java.util.Set, net.corda.core.identity.AbstractParty, long, String, net.corda.core.identity.AbstractParty, byte[])
  public <init>(java.util.Set, net.corda.core.identity.AbstractParty, long, String, net.corda.core.identity.AbstractParty, byte[], int, kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public String getCurrency()
  @Nullable
  public net.corda.core.identity.AbstractParty getIssuer()
  @NotNull
  public byte[] getIssuerRef()
  @Nullable
  public net.corda.core.identity.AbstractParty getOwner()
  @Nullable
  public java.util.Set getParticipants()
  public long getPennies()
  public void setCurrency(String)
  public void setIssuer(net.corda.core.identity.AbstractParty)
  public void setIssuerRef(byte[])
  public void setOwner(net.corda.core.identity.AbstractParty)
  public void setParticipants(java.util.Set)
  public void setPennies(long)
##
public final class net.corda.testing.dsl.AttachmentResolutionException extends net.corda.core.flows.FlowException
  public <init>(net.corda.core.crypto.SecureHash)
##
public final class net.corda.testing.dsl.DoubleSpentInputs extends net.corda.core.flows.FlowException
  public <init>(java.util.List)
##
public final class net.corda.testing.dsl.DuplicateOutputLabel extends net.corda.core.flows.FlowException
  public <init>(String)
##
@DoNotImplement
public abstract class net.corda.testing.dsl.EnforceVerifyOrFail extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
@DoNotImplement
public static final class net.corda.testing.dsl.EnforceVerifyOrFail$Token extends net.corda.testing.dsl.EnforceVerifyOrFail
  @NotNull
  public static final net.corda.testing.dsl.EnforceVerifyOrFail$Token INSTANCE
##
@DoNotImplement
public final class net.corda.testing.dsl.LedgerDSL extends java.lang.Object implements net.corda.testing.dsl.LedgerDSLInterpreter
  public <init>(L, net.corda.core.identity.Party)
  @NotNull
  public net.corda.core.transactions.WireTransaction _transaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1)
  public void _tweak(kotlin.jvm.functions.Function1)
  @NotNull
  public net.corda.core.transactions.WireTransaction _unverifiedTransaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1)
  @NotNull
  public net.corda.core.crypto.SecureHash attachment(java.io.InputStream)
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail fails()
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail fails with(String)
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail failsWith(String)
  @NotNull
  public final L getInterpreter()
  public final S output(String)
  public final net.corda.core.contracts.StateAndRef outputStateAndRef(String)
  @NotNull
  public final S retrieveOutput(Class, String)
  @NotNull
  public net.corda.core.contracts.StateAndRef retrieveOutputStateAndRef(Class, String)
  @NotNull
  public final net.corda.core.transactions.WireTransaction transaction(String, kotlin.jvm.functions.Function1)
  @NotNull
  public final net.corda.core.transactions.WireTransaction transaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1)
  @NotNull
  public final net.corda.core.transactions.WireTransaction transaction(kotlin.jvm.functions.Function1)
  public final void tweak(kotlin.jvm.functions.Function1)
  @NotNull
  public final net.corda.core.transactions.WireTransaction unverifiedTransaction(String, kotlin.jvm.functions.Function1)
  @NotNull
  public final net.corda.core.transactions.WireTransaction unverifiedTransaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1)
  @NotNull
  public final net.corda.core.transactions.WireTransaction unverifiedTransaction(kotlin.jvm.functions.Function1)
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail verifies()
##
@DoNotImplement
public interface net.corda.testing.dsl.LedgerDSLInterpreter extends net.corda.testing.dsl.OutputStateLookup, net.corda.testing.dsl.Verifies
  @NotNull
  public abstract net.corda.core.transactions.WireTransaction _transaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1)
  public abstract void _tweak(kotlin.jvm.functions.Function1)
  @NotNull
  public abstract net.corda.core.transactions.WireTransaction _unverifiedTransaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1)
  @NotNull
  public abstract net.corda.core.crypto.SecureHash attachment(java.io.InputStream)
##
@DoNotImplement
public interface net.corda.testing.dsl.OutputStateLookup
  @NotNull
  public abstract net.corda.core.contracts.StateAndRef retrieveOutputStateAndRef(Class, String)
##
@DoNotImplement
public final class net.corda.testing.dsl.TestLedgerDSLInterpreter extends java.lang.Object implements net.corda.testing.dsl.LedgerDSLInterpreter
  public <init>(net.corda.core.node.ServiceHub)
  @NotNull
  public net.corda.core.transactions.WireTransaction _transaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1)
  public void _tweak(kotlin.jvm.functions.Function1)
  @NotNull
  public net.corda.core.transactions.WireTransaction _unverifiedTransaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1)
  @NotNull
  public net.corda.core.crypto.SecureHash attachment(java.io.InputStream)
  @NotNull
  public final net.corda.core.node.ServiceHub component1()
  @NotNull
  public final net.corda.testing.dsl.TestLedgerDSLInterpreter copy(net.corda.core.node.ServiceHub, java.util.HashMap, java.util.HashMap, java.util.HashMap)
  public boolean equals(Object)
  @NotNull
  public final net.corda.core.node.ServiceHub getServices()
  @NotNull
  public final java.util.List getTransactionsToVerify()
  @NotNull
  public final java.util.List getTransactionsUnverified()
  @NotNull
  public final java.util.List getWireTransactions()
  public int hashCode()
  @Nullable
  public final String outputToLabel(net.corda.core.contracts.ContractState)
  @NotNull
  public net.corda.core.contracts.StateAndRef retrieveOutputStateAndRef(Class, String)
  @NotNull
  public String toString()
  @Nullable
  public final String transactionName(net.corda.core.crypto.SecureHash)
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail verifies()
  @NotNull
  public static final net.corda.testing.dsl.TestLedgerDSLInterpreter$Companion Companion
##
public static final class net.corda.testing.dsl.TestLedgerDSLInterpreter$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
##
public static final class net.corda.testing.dsl.TestLedgerDSLInterpreter$TypeMismatch extends java.lang.Exception
  public <init>(Class, Class)
##
public static final class net.corda.testing.dsl.TestLedgerDSLInterpreter$VerifiesFailed extends java.lang.Exception
  public <init>(String, Throwable)
##
public static final class net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation extends java.lang.Object
  public <init>(String, net.corda.core.transactions.WireTransaction, String)
  @Nullable
  public final String component1()
  @NotNull
  public final net.corda.core.transactions.WireTransaction component2()
  @Nullable
  public final String component3()
  @NotNull
  public final net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation copy(String, net.corda.core.transactions.WireTransaction, String)
  public boolean equals(Object)
  @Nullable
  public final String getLabel()
  @Nullable
  public final String getLocation()
  @NotNull
  public final net.corda.core.transactions.WireTransaction getTransaction()
  public int hashCode()
  @NotNull
  public String toString()
##
@DoNotImplement
public final class net.corda.testing.dsl.TestTransactionDSLInterpreter extends java.lang.Object implements net.corda.testing.dsl.OutputStateLookup, net.corda.testing.dsl.TransactionDSLInterpreter
  public <init>(net.corda.testing.dsl.TestLedgerDSLInterpreter, net.corda.core.transactions.TransactionBuilder)
  public void _attachment(String)
  public void _attachment(String, net.corda.core.crypto.SecureHash, java.util.List)
  public void _attachment(String, net.corda.core.crypto.SecureHash, java.util.List, java.util.Map)
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail _tweak(kotlin.jvm.functions.Function1)
  public void attachment(net.corda.core.crypto.SecureHash)
  public void command(java.util.List, net.corda.core.contracts.CommandData)
  @NotNull
  public final net.corda.testing.dsl.TestLedgerDSLInterpreter component1()
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder component2()
  @NotNull
  public final net.corda.testing.dsl.TestTransactionDSLInterpreter copy(net.corda.testing.dsl.TestLedgerDSLInterpreter, net.corda.core.transactions.TransactionBuilder, java.util.HashMap)
  public boolean equals(Object)
  @NotNull
  public net.corda.testing.dsl.TestLedgerDSLInterpreter getLedgerInterpreter()
  @NotNull
  public final net.corda.core.node.ServicesForResolution getServices()
  @NotNull
  public final net.corda.core.transactions.TransactionBuilder getTransactionBuilder()
  public int hashCode()
  public void input(net.corda.core.contracts.StateRef)
  public void output(String, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint, net.corda.core.contracts.ContractState)
  public void reference(net.corda.core.contracts.StateRef)
  @NotNull
  public net.corda.core.contracts.StateAndRef retrieveOutputStateAndRef(Class, String)
  public void timeWindow(net.corda.core.contracts.TimeWindow)
  @NotNull
  public String toString()
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail verifies()
##
@DoNotImplement
public final class net.corda.testing.dsl.TransactionDSL extends java.lang.Object implements net.corda.testing.dsl.TransactionDSLInterpreter
  public <init>(T, net.corda.core.identity.Party)
  public void _attachment(String)
  public void _attachment(String, net.corda.core.crypto.SecureHash, java.util.List)
  public void _attachment(String, net.corda.core.crypto.SecureHash, java.util.List, java.util.Map)
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail _tweak(kotlin.jvm.functions.Function1)
  public final void attachment(String)
  public final void attachment(String, net.corda.core.crypto.SecureHash)
  public final void attachment(String, net.corda.core.crypto.SecureHash, java.util.List, java.util.Map)
  public void attachment(net.corda.core.crypto.SecureHash)
  public final void attachments(String...)
  public final void command(java.security.PublicKey, net.corda.core.contracts.CommandData)
  public void command(java.util.List, net.corda.core.contracts.CommandData)
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail fails()
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail fails with(String)
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail failsWith(String)
  @NotNull
  public net.corda.testing.dsl.LedgerDSLInterpreter getLedgerInterpreter()
  public final void input(String)
  public final void input(String, String)
  public final void input(String, net.corda.core.contracts.ContractState)
  public void input(net.corda.core.contracts.StateRef)
  public final void output(String, int, net.corda.core.contracts.ContractState)
  public final void output(String, String, int, net.corda.core.contracts.ContractState)
  public final void output(String, String, net.corda.core.contracts.ContractState)
  public void output(String, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint, net.corda.core.contracts.ContractState)
  public final void output(String, String, net.corda.core.identity.Party, net.corda.core.contracts.ContractState)
  public final void output(String, net.corda.core.contracts.ContractState)
  public final void output(String, net.corda.core.identity.Party, net.corda.core.contracts.ContractState)
  public final void reference(String)
  public final void reference(String, net.corda.core.contracts.ContractState)
  public void reference(net.corda.core.contracts.StateRef)
  @NotNull
  public net.corda.core.contracts.StateAndRef retrieveOutputStateAndRef(Class, String)
  public final void timeWindow(java.time.Instant)
  public final void timeWindow(java.time.Instant, java.time.Duration)
  public void timeWindow(net.corda.core.contracts.TimeWindow)
  @NotNull
  public final net.corda.testing.dsl.EnforceVerifyOrFail tweak(kotlin.jvm.functions.Function1)
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail verifies()
##
@DoNotImplement
public interface net.corda.testing.dsl.TransactionDSLInterpreter extends net.corda.testing.dsl.OutputStateLookup, net.corda.testing.dsl.Verifies
  public abstract void _attachment(String)
  public abstract void _attachment(String, net.corda.core.crypto.SecureHash, java.util.List)
  public abstract void _attachment(String, net.corda.core.crypto.SecureHash, java.util.List, java.util.Map)
  @NotNull
  public abstract net.corda.testing.dsl.EnforceVerifyOrFail _tweak(kotlin.jvm.functions.Function1)
  public abstract void attachment(net.corda.core.crypto.SecureHash)
  public abstract void command(java.util.List, net.corda.core.contracts.CommandData)
  @NotNull
  public abstract net.corda.testing.dsl.LedgerDSLInterpreter getLedgerInterpreter()
  public abstract void input(net.corda.core.contracts.StateRef)
  public abstract void output(String, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint, net.corda.core.contracts.ContractState)
  public abstract void reference(net.corda.core.contracts.StateRef)
  public abstract void timeWindow(net.corda.core.contracts.TimeWindow)
##
@DoNotImplement
public interface net.corda.testing.dsl.Verifies
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail fails()
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail fails with(String)
  @NotNull
  public net.corda.testing.dsl.EnforceVerifyOrFail failsWith(String)
  @NotNull
  public abstract net.corda.testing.dsl.EnforceVerifyOrFail verifies()
##
public final class net.corda.testing.http.HttpApi extends java.lang.Object
  public <init>(java.net.URL, com.fasterxml.jackson.databind.ObjectMapper)
  public <init>(java.net.URL, com.fasterxml.jackson.databind.ObjectMapper, int, kotlin.jvm.internal.DefaultConstructorMarker)
  public final T getJson(String, java.util.Map)
  @NotNull
  public final com.fasterxml.jackson.databind.ObjectMapper getMapper()
  @NotNull
  public final java.net.URL getRoot()
  public final void postJson(String, Object)
  public final void postPlain(String, String)
  public final void putJson(String, Object)
  @NotNull
  public static final net.corda.testing.http.HttpApi$Companion Companion
##
public static final class net.corda.testing.http.HttpApi$Companion extends java.lang.Object
  public <init>(kotlin.jvm.internal.DefaultConstructorMarker)
  @NotNull
  public final net.corda.testing.http.HttpApi fromHostAndPort(net.corda.core.utilities.NetworkHostAndPort, String, String, com.fasterxml.jackson.databind.ObjectMapper)
##
public final class net.corda.testing.http.HttpUtils extends java.lang.Object
  @NotNull
  public final com.fasterxml.jackson.databind.ObjectMapper getDefaultMapper()
  public final T getJson(java.net.URL, java.util.Map, com.fasterxml.jackson.databind.ObjectMapper)
  public final void postJson(java.net.URL, String)
  public final void postPlain(java.net.URL, String)
  public final void putJson(java.net.URL, String)
  @NotNull
  public static final net.corda.testing.http.HttpUtils INSTANCE
##
public final class net.corda.testing.services.MockAttachmentStorage extends net.corda.core.serialization.SingletonSerializeAsToken implements net.corda.core.node.services.AttachmentStorage
  public <init>()
  @NotNull
  public final kotlin.Pair getAttachmentIdAndBytes(java.io.InputStream)
  @NotNull
  public final java.util.Map getFiles()
  @NotNull
  public java.util.List getLatestContractAttachments(String, int)
  public boolean hasAttachment(net.corda.core.crypto.SecureHash)
  @NotNull
  public net.corda.core.crypto.SecureHash importAttachment(java.io.InputStream)
  @NotNull
  public net.corda.core.crypto.SecureHash importAttachment(java.io.InputStream, String, String)
  @NotNull
  public final net.corda.core.crypto.SecureHash importContractAttachment(java.util.List, String, java.io.InputStream)
  @NotNull
  public final net.corda.core.crypto.SecureHash importContractAttachment(java.util.List, String, java.io.InputStream, net.corda.core.crypto.SecureHash)
  @NotNull
  public final net.corda.core.crypto.SecureHash importContractAttachment(java.util.List, String, java.io.InputStream, net.corda.core.crypto.SecureHash, java.util.List)
  public final void importContractAttachment(net.corda.core.crypto.SecureHash, net.corda.core.contracts.ContractAttachment)
  @NotNull
  public net.corda.core.crypto.SecureHash importOrGetAttachment(java.io.InputStream)
  @Nullable
  public net.corda.core.contracts.Attachment openAttachment(net.corda.core.crypto.SecureHash)
  @NotNull
  public java.util.List queryAttachments(net.corda.core.node.services.vault.AttachmentQueryCriteria, net.corda.core.node.services.vault.AttachmentSort)
##
