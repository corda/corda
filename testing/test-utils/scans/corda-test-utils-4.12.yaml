# Auto-generated by Gradle cementApi task
# DO NOT EDIT THIS FILE MANUALLY
net.corda.finance.test.CashSchema:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.finance.test.CashSchema
net.corda.finance.test.SampleCashSchemaV1:
  annotations: []
  type: public final class
  extends: net.corda.core.schemas.MappedSchema
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.finance.test.SampleCashSchemaV1
net.corda.finance.test.SampleCashSchemaV1$PersistentCashState:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: net.corda.core.schemas.PersistentState
  implements: []
  interface: false
  methods:
    getCurrency():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getIssuerPartyHash():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getIssuerRef():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "byte[]"
    getOwnerHash():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getPennies():
      annotations: []
      default: false
      type: public
      returnType: long
    setCurrency(String):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    setIssuerPartyHash(String):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    setIssuerRef(byte[]):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: "byte[]"
    setOwnerHash(String):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    setPennies(long):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: long
net.corda.finance.test.SampleCashSchemaV2:
  annotations: []
  type: public final class
  extends: net.corda.core.schemas.MappedSchema
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.finance.test.SampleCashSchemaV2
net.corda.finance.test.SampleCashSchemaV2$PersistentCashState:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: net.corda.core.schemas.CommonSchemaV1$FungibleState
  implements: []
  interface: false
  methods:
    getCurrency():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getParticipants():
      annotations:
        - Nullable
      default: false
      type: public
      returnType: java.util.Set<net.corda.core.identity.AbstractParty>
    setCurrency(String):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    setParticipants(java.util.Set<net.corda.core.identity.AbstractParty>):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: java.util.Set<net.corda.core.identity.AbstractParty>
net.corda.finance.test.SampleCashSchemaV3:
  annotations: []
  type: public final class
  extends: net.corda.core.schemas.MappedSchema
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.finance.test.SampleCashSchemaV3
net.corda.finance.test.SampleCashSchemaV3$PersistentCashState:
  annotations:
    - Entity
    - Table
  type: public static class
  extends: net.corda.core.schemas.PersistentState
  implements: []
  interface: false
  methods:
    getCurrency():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    getIssuer():
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.identity.AbstractParty
    getIssuerRef():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: "byte[]"
    getOwner():
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.identity.AbstractParty
    getParticipants():
      annotations:
        - Nullable
      default: false
      type: public
      returnType: java.util.Set<net.corda.core.identity.AbstractParty>
    getPennies():
      annotations: []
      default: false
      type: public
      returnType: long
    setCurrency(String):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    setIssuer(net.corda.core.identity.AbstractParty):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: net.corda.core.identity.AbstractParty
    setIssuerRef(byte[]):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: "byte[]"
    setOwner(net.corda.core.identity.AbstractParty):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: net.corda.core.identity.AbstractParty
    setParticipants(java.util.Set<net.corda.core.identity.AbstractParty>):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: java.util.Set<net.corda.core.identity.AbstractParty>
    setPennies(long):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation: []
          type: long
net.corda.testing.dsl.AttachmentResolutionException:
  annotations: []
  type: public final class
  extends: net.corda.core.flows.FlowException
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.DoubleSpentInputs:
  annotations: []
  type: public final class
  extends: net.corda.core.flows.FlowException
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.DuplicateOutputLabel:
  annotations: []
  type: public final class
  extends: net.corda.core.flows.FlowException
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.EnforceVerifyOrFail:
  annotations: []
  type: public abstract class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.EnforceVerifyOrFail$Token:
  annotations: []
  type: public static final class
  extends: net.corda.testing.dsl.EnforceVerifyOrFail
  implements: []
  interface: false
  methods: {}
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.dsl.EnforceVerifyOrFail$Token
net.corda.testing.dsl.LedgerDSL:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.testing.dsl.LedgerDSLInterpreter
  interface: false
  methods:
    ? _transaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1<?
      super net.corda.testing.dsl.TransactionDSLInterpreter, ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,\
            \ ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    ? _tweak(kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSLInterpreter<?
      extends net.corda.testing.dsl.TransactionDSLInterpreter>, kotlin.Unit>)
    : annotations: []
      default: false
      type: public
      returnType: void
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSLInterpreter<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, kotlin.Unit>"
    ? _unverifiedTransaction(String, net.corda.core.transactions.TransactionBuilder,
      kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,
      kotlin.Unit>)
    : annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,\
            \ kotlin.Unit>"
    attachment(java.io.InputStream):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        attachment:
          annotation:
            - NotNull
          type: java.io.InputStream
    fails with(String):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    fails():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    failsWith(String):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    getInterpreter():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: L
    output(String):
      annotations: []
      default: false
      type: public final synthetic
      returnType: S
      params:
        "null":
          annotation: []
          type: String
    outputStateAndRef(String):
      annotations: []
      default: false
      type: public final synthetic
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        "null":
          annotation: []
          type: String
    retrieveOutput(Class<S>, String):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: S
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    retrieveOutputStateAndRef(Class<S>, String):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    ? transaction(String, kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?
      extends net.corda.testing.dsl.TransactionDSLInterpreter>, ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
      params:
        label:
          annotation:
            - Nullable
          type: String
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, ? extends\
            \ net.corda.testing.dsl.EnforceVerifyOrFail>"
    ? transaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1<?
      super net.corda.testing.dsl.TransactionDSL<? extends net.corda.testing.dsl.TransactionDSLInterpreter>,
      ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
      params:
        label:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, ? extends\
            \ net.corda.testing.dsl.EnforceVerifyOrFail>"
    ? transaction(kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?
      extends net.corda.testing.dsl.TransactionDSLInterpreter>, ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, ? extends\
            \ net.corda.testing.dsl.EnforceVerifyOrFail>"
    tweak(kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSL<? extends T, ? extends L>, kotlin.Unit>):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSL<?\
            \ extends T, ? extends L>, kotlin.Unit>"
    ? unverifiedTransaction(String, kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?
      extends net.corda.testing.dsl.TransactionDSLInterpreter>, kotlin.Unit>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
      params:
        label:
          annotation:
            - Nullable
          type: String
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, kotlin.Unit>"
    ? unverifiedTransaction(String, net.corda.core.transactions.TransactionBuilder,
      kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?
      extends net.corda.testing.dsl.TransactionDSLInterpreter>, kotlin.Unit>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
      params:
        label:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, kotlin.Unit>"
    ? unverifiedTransaction(kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?
      extends net.corda.testing.dsl.TransactionDSLInterpreter>, kotlin.Unit>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, kotlin.Unit>"
    verifies():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.dsl.LedgerDSLInterpreter:
  annotations: []
  type: public interface
  extends:
    - net.corda.testing.dsl.OutputStateLookup
    - net.corda.testing.dsl.Verifies
  interface: true
  methods:
    ? _transaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1<?
      super T, ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super T, ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    _tweak(kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSLInterpreter<? extends T>, kotlin.Unit>):
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSLInterpreter<?\
            \ extends T>, kotlin.Unit>"
    ? _unverifiedTransaction(String, net.corda.core.transactions.TransactionBuilder,
      kotlin.jvm.functions.Function1<? super T, kotlin.Unit>)
    : annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super T, kotlin.Unit>"
    attachment(java.io.InputStream):
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.crypto.SecureHash
      params:
        attachment:
          annotation:
            - NotNull
          type: java.io.InputStream
    fails with(String):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    fails():
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    failsWith(String):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    retrieveOutputStateAndRef(Class<S>, String):
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    verifies():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.dsl.OutputStateLookup:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods:
    retrieveOutputStateAndRef(Class<S>, String):
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
net.corda.testing.dsl.TestLedgerDSLInterpreter:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.testing.dsl.LedgerDSLInterpreter
  interface: false
  methods:
    ? _transaction(String, net.corda.core.transactions.TransactionBuilder, kotlin.jvm.functions.Function1<?
      super net.corda.testing.dsl.TestTransactionDSLInterpreter, ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TestTransactionDSLInterpreter,\
            \ ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    ? _tweak(kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSLInterpreter<net.corda.testing.dsl.TestTransactionDSLInterpreter>,
      kotlin.Unit>)
    : annotations: []
      default: false
      type: public
      returnType: void
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSLInterpreter<net.corda.testing.dsl.TestTransactionDSLInterpreter>,\
            \ kotlin.Unit>"
    ? _unverifiedTransaction(String, net.corda.core.transactions.TransactionBuilder,
      kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TestTransactionDSLInterpreter,
      kotlin.Unit>)
    : annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.transactions.WireTransaction
      params:
        transactionLabel:
          annotation:
            - Nullable
          type: String
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TestTransactionDSLInterpreter,\
            \ kotlin.Unit>"
    attachment(java.io.InputStream):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        attachment:
          annotation:
            - NotNull
          type: java.io.InputStream
    component1():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.ServiceHub
    ? copy(net.corda.core.node.ServiceHub, java.util.HashMap<String, net.corda.core.contracts.StateAndRef<net.corda.core.contracts.ContractState>>,
      java.util.HashMap<net.corda.core.crypto.SecureHash, net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation>,
      java.util.HashMap<net.corda.core.crypto.SecureHash, net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.dsl.TestLedgerDSLInterpreter
      params:
        services:
          annotation:
            - NotNull
          type: net.corda.core.node.ServiceHub
        labelToOutputStateAndRefs:
          annotation:
            - NotNull
          type: "java.util.HashMap<String, net.corda.core.contracts.StateAndRef<net.corda.core.contracts.ContractState>>"
        transactionWithLocations:
          annotation:
            - NotNull
          type: "java.util.HashMap<net.corda.core.crypto.SecureHash, net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation>"
        nonVerifiedTransactionWithLocations:
          annotation:
            - NotNull
          type: "java.util.HashMap<net.corda.core.crypto.SecureHash, net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation>"
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    fails with(String):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    fails():
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    failsWith(String):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    getServices():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.ServiceHub
    getTransactionsToVerify():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.transactions.WireTransaction>
    getTransactionsUnverified():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.transactions.WireTransaction>
    getWireTransactions():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.core.transactions.WireTransaction>
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    outputToLabel(net.corda.core.contracts.ContractState):
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
      params:
        state:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    retrieveOutputStateAndRef(Class<S>, String):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    transactionName(net.corda.core.crypto.SecureHash):
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
      params:
        transactionHash:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    verifies():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.dsl.TestLedgerDSLInterpreter$Companion
net.corda.testing.dsl.TestLedgerDSLInterpreter$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.TestLedgerDSLInterpreter$TypeMismatch:
  annotations: []
  type: public static final class
  extends: java.lang.Exception
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.TestLedgerDSLInterpreter$VerifiesFailed:
  annotations: []
  type: public static final class
  extends: java.lang.Exception
  implements: []
  interface: false
  methods: {}
net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    component2():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
    component3():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    copy(String, net.corda.core.transactions.WireTransaction, String):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.dsl.TestLedgerDSLInterpreter$WireTransactionWithLocation
      params:
        label:
          annotation:
            - Nullable
          type: String
        transaction:
          annotation:
            - NotNull
          type: net.corda.core.transactions.WireTransaction
        location:
          annotation:
            - Nullable
          type: String
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getLabel():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    getLocation():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    getTransaction():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.WireTransaction
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.dsl.TestTransactionDSLInterpreter:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.testing.dsl.OutputStateLookup
    - net.corda.testing.dsl.TransactionDSLInterpreter
  interface: false
  methods:
    _attachment(String):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
    _attachment(String, net.corda.core.crypto.SecureHash, java.util.List<? extends java.security.PublicKey>):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
    ? _attachment(String, net.corda.core.crypto.SecureHash, java.util.List<? extends
      java.security.PublicKey>, java.util.Map<String, String>)
    : annotations: []
      default: false
      type: public
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        jarManifestAttributes:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    ? _tweak(kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,
      ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,\
            \ ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    attachment(net.corda.core.crypto.SecureHash):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    command(java.util.List<? extends java.security.PublicKey>, net.corda.core.contracts.CommandData):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        commandData:
          annotation:
            - NotNull
          type: net.corda.core.contracts.CommandData
    component1():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.dsl.TestLedgerDSLInterpreter
    component2():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.TransactionBuilder
    ? copy(net.corda.testing.dsl.TestLedgerDSLInterpreter, net.corda.core.transactions.TransactionBuilder,
      java.util.HashMap<String, Integer>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.dsl.TestTransactionDSLInterpreter
      params:
        ledgerInterpreter:
          annotation:
            - NotNull
          type: net.corda.testing.dsl.TestLedgerDSLInterpreter
        transactionBuilder:
          annotation:
            - NotNull
          type: net.corda.core.transactions.TransactionBuilder
        labelToIndexMap:
          annotation:
            - NotNull
          type: "java.util.HashMap<String, Integer>"
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    fails with(String):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    fails():
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    failsWith(String):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    getLedgerInterpreter():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.TestLedgerDSLInterpreter
    getServices():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.ServicesForResolution
    getTransactionBuilder():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.transactions.TransactionBuilder
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    input(net.corda.core.contracts.StateRef):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    ? output(String, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint,
      net.corda.core.contracts.ContractState)
    : annotations: []
      default: false
      type: public
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        label:
          annotation:
            - Nullable
          type: String
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        encumbrance:
          annotation:
            - Nullable
          type: Integer
        attachmentConstraint:
          annotation:
            - NotNull
          type: net.corda.core.contracts.AttachmentConstraint
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    reference(net.corda.core.contracts.StateRef):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    retrieveOutputStateAndRef(Class<S>, String):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    timeWindow(net.corda.core.contracts.TimeWindow):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        data:
          annotation:
            - NotNull
          type: net.corda.core.contracts.TimeWindow
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    verifies():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.dsl.TransactionDSL:
  annotations: []
  type: public final class
  extends: null
  implements:
    - net.corda.testing.dsl.TransactionDSLInterpreter
  interface: false
  methods:
    _attachment(String):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
    _attachment(String, net.corda.core.crypto.SecureHash, java.util.List<? extends java.security.PublicKey>):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
    ? _attachment(String, net.corda.core.crypto.SecureHash, java.util.List<? extends
      java.security.PublicKey>, java.util.Map<String, String>)
    : annotations: []
      default: false
      type: public
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        jarManifestAttributes:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    ? _tweak(kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,
      ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,\
            \ ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    attachment(String):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
    attachment(String, net.corda.core.crypto.SecureHash):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    ? attachment(String, net.corda.core.crypto.SecureHash, java.util.List<? extends
      java.security.PublicKey>, java.util.Map<String, String>)
    : annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        jarManifestAttributes:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    attachment(net.corda.core.crypto.SecureHash):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    attachments(String[]):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassNames:
          annotation:
            - NotNull
          type: "String[]"
    command(java.security.PublicKey, net.corda.core.contracts.CommandData):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        signer:
          annotation:
            - NotNull
          type: java.security.PublicKey
        commandData:
          annotation:
            - NotNull
          type: net.corda.core.contracts.CommandData
    command(java.util.List<? extends java.security.PublicKey>, net.corda.core.contracts.CommandData):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        commandData:
          annotation:
            - NotNull
          type: net.corda.core.contracts.CommandData
    fails with(String):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    fails():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    failsWith(String):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    getLedgerInterpreter():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.LedgerDSLInterpreter<net.corda.testing.dsl.TransactionDSLInterpreter>
    input(String):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        stateLabel:
          annotation:
            - NotNull
          type: String
    input(String, String):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        stateLabel:
          annotation:
            - NotNull
          type: String
    input(String, net.corda.core.contracts.ContractState):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        state:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    input(net.corda.core.contracts.StateRef):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    output(String, String, int, net.corda.core.contracts.ContractState):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        label:
          annotation:
            - NotNull
          type: String
        encumbrance:
          annotation: []
          type: int
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    output(String, String, net.corda.core.contracts.ContractState):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        label:
          annotation:
            - NotNull
          type: String
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    ? output(String, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint,
      net.corda.core.contracts.ContractState)
    : annotations: []
      default: false
      type: public
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        label:
          annotation:
            - Nullable
          type: String
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        encumbrance:
          annotation:
            - Nullable
          type: Integer
        attachmentConstraint:
          annotation:
            - NotNull
          type: net.corda.core.contracts.AttachmentConstraint
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    output(String, String, net.corda.core.identity.Party, net.corda.core.contracts.ContractState):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        label:
          annotation:
            - NotNull
          type: String
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    output(String, int, net.corda.core.contracts.ContractState):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        encumbrance:
          annotation: []
          type: int
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    output(String, net.corda.core.contracts.ContractState):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    output(String, net.corda.core.identity.Party, net.corda.core.contracts.ContractState):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    reference(String):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        stateLabel:
          annotation:
            - NotNull
          type: String
    reference(String, net.corda.core.contracts.ContractState):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        state:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    reference(net.corda.core.contracts.StateRef):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    retrieveOutputStateAndRef(Class<S>, String):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    timeWindow(java.time.Instant):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        time:
          annotation:
            - NotNull
          type: java.time.Instant
    timeWindow(java.time.Instant, java.time.Duration):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        time:
          annotation:
            - NotNull
          type: java.time.Instant
        tolerance:
          annotation:
            - NotNull
          type: java.time.Duration
    timeWindow(net.corda.core.contracts.TimeWindow):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        data:
          annotation:
            - NotNull
          type: net.corda.core.contracts.TimeWindow
    ? tweak(kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?
      extends net.corda.testing.dsl.TransactionDSLInterpreter>, ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, ? extends\
            \ net.corda.testing.dsl.EnforceVerifyOrFail>"
    verifies():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.dsl.TransactionDSLInterpreter:
  annotations: []
  type: public interface
  extends:
    - net.corda.testing.dsl.OutputStateLookup
    - net.corda.testing.dsl.Verifies
  interface: true
  methods:
    _attachment(String):
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
    _attachment(String, net.corda.core.crypto.SecureHash, java.util.List<? extends java.security.PublicKey>):
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
    ? _attachment(String, net.corda.core.crypto.SecureHash, java.util.List<? extends
      java.security.PublicKey>, java.util.Map<String, String>)
    : annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        jarManifestAttributes:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    ? _tweak(kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,
      ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSLInterpreter,\
            \ ? extends net.corda.testing.dsl.EnforceVerifyOrFail>"
    attachment(net.corda.core.crypto.SecureHash):
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    command(java.util.List<? extends java.security.PublicKey>, net.corda.core.contracts.CommandData):
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
        commandData:
          annotation:
            - NotNull
          type: net.corda.core.contracts.CommandData
    fails with(String):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    fails():
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    failsWith(String):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    getLedgerInterpreter():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.dsl.LedgerDSLInterpreter<net.corda.testing.dsl.TransactionDSLInterpreter>
    input(net.corda.core.contracts.StateRef):
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    ? output(String, String, net.corda.core.identity.Party, Integer, net.corda.core.contracts.AttachmentConstraint,
      net.corda.core.contracts.ContractState)
    : annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        label:
          annotation:
            - Nullable
          type: String
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        encumbrance:
          annotation:
            - Nullable
          type: Integer
        attachmentConstraint:
          annotation:
            - NotNull
          type: net.corda.core.contracts.AttachmentConstraint
        contractState:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractState
    reference(net.corda.core.contracts.StateRef):
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    retrieveOutputStateAndRef(Class<S>, String):
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.contracts.StateAndRef<S>
      params:
        clazz:
          annotation:
            - NotNull
          type: Class<S>
        label:
          annotation:
            - NotNull
          type: String
    timeWindow(net.corda.core.contracts.TimeWindow):
      annotations: []
      default: false
      type: public abstract
      returnType: void
      params:
        data:
          annotation:
            - NotNull
          type: net.corda.core.contracts.TimeWindow
    verifies():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.dsl.Verifies:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods:
    fails with(String):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        msg:
          annotation:
            - NotNull
          type: String
    fails():
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
    failsWith(String):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
      params:
        expectedMessage:
          annotation:
            - Nullable
          type: String
    verifies():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.dsl.EnforceVerifyOrFail
net.corda.testing.http.HttpApi:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getJson(String, java.util.Map<String, String>):
      annotations: []
      default: false
      type: public final synthetic
      returnType: T
      params:
        "null":
          annotation: []
          type: "java.util.Map<String, String>"
    getMapper():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: com.fasterxml.jackson.databind.ObjectMapper
    getRoot():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.net.URL
    postJson(String, Object):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        path:
          annotation:
            - NotNull
          type: String
        data:
          annotation:
            - NotNull
          type: Object
    postPlain(String, String):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        path:
          annotation:
            - NotNull
          type: String
        data:
          annotation:
            - NotNull
          type: String
    putJson(String, Object):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        path:
          annotation:
            - NotNull
          type: String
        data:
          annotation:
            - NotNull
          type: Object
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.http.HttpApi$Companion
net.corda.testing.http.HttpApi$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    fromHostAndPort(net.corda.core.utilities.NetworkHostAndPort, String, String, com.fasterxml.jackson.databind.ObjectMapper):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.http.HttpApi
      params:
        hostAndPort:
          annotation:
            - NotNull
          type: net.corda.core.utilities.NetworkHostAndPort
        base:
          annotation:
            - NotNull
          type: String
        protocol:
          annotation:
            - NotNull
          type: String
        mapper:
          annotation:
            - NotNull
          type: com.fasterxml.jackson.databind.ObjectMapper
net.corda.testing.http.HttpUtils:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getDefaultMapper():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: com.fasterxml.jackson.databind.ObjectMapper
    getJson(java.net.URL, java.util.Map<String, String>, com.fasterxml.jackson.databind.ObjectMapper):
      annotations: []
      default: false
      type: public final synthetic
      returnType: T
      params:
        "null":
          annotation: []
          type: com.fasterxml.jackson.databind.ObjectMapper
    postJson(java.net.URL, String):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        url:
          annotation:
            - NotNull
          type: java.net.URL
        data:
          annotation:
            - NotNull
          type: String
    postPlain(java.net.URL, String):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        url:
          annotation:
            - NotNull
          type: java.net.URL
        data:
          annotation:
            - NotNull
          type: String
    putJson(java.net.URL, String):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        url:
          annotation:
            - NotNull
          type: java.net.URL
        data:
          annotation:
            - NotNull
          type: String
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.http.HttpUtils
net.corda.testing.services.MockAttachmentStorage:
  annotations: []
  type: public final class
  extends: net.corda.core.serialization.SingletonSerializeAsToken
  implements:
    - net.corda.core.node.services.AttachmentStorage
  interface: false
  methods:
    getAttachmentIdAndBytes(java.io.InputStream):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.Pair<net.corda.core.crypto.SecureHash, byte[]>"
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
    getFiles():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<net.corda.core.crypto.SecureHash, kotlin.Pair<net.corda.core.contracts.Attachment,\
        \ byte[]>>"
    getLatestContractAttachments(String, int):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.crypto.SecureHash>
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
        minContractVersion:
          annotation: []
          type: int
    hasAttachment(net.corda.core.crypto.SecureHash):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    importAttachment(java.io.InputStream):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
    importAttachment(java.io.InputStream, String, String):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
        uploader:
          annotation:
            - NotNull
          type: String
        filename:
          annotation:
            - Nullable
          type: String
    importContractAttachment(java.util.List<String>, String, java.io.InputStream):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.crypto.SecureHash
      params:
        contractClassNames:
          annotation:
            - NotNull
          type: java.util.List<String>
        uploader:
          annotation:
            - NotNull
          type: String
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
    importContractAttachment(java.util.List<String>, String, java.io.InputStream, net.corda.core.crypto.SecureHash):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.crypto.SecureHash
      params:
        contractClassNames:
          annotation:
            - NotNull
          type: java.util.List<String>
        uploader:
          annotation:
            - NotNull
          type: String
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
        attachmentId:
          annotation:
            - Nullable
          type: net.corda.core.crypto.SecureHash
    ? importContractAttachment(java.util.List<String>, String, java.io.InputStream,
      net.corda.core.crypto.SecureHash, java.util.List<? extends java.security.PublicKey>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.crypto.SecureHash
      params:
        contractClassNames:
          annotation:
            - NotNull
          type: java.util.List<String>
        uploader:
          annotation:
            - NotNull
          type: String
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
        attachmentId:
          annotation:
            - Nullable
          type: net.corda.core.crypto.SecureHash
        signers:
          annotation:
            - NotNull
          type: java.util.List<? extends java.security.PublicKey>
    importContractAttachment(net.corda.core.crypto.SecureHash, net.corda.core.contracts.ContractAttachment):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        attachmentId:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
        contractAttachment:
          annotation:
            - NotNull
          type: net.corda.core.contracts.ContractAttachment
    importOrGetAttachment(java.io.InputStream):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.crypto.SecureHash
      params:
        jar:
          annotation:
            - NotNull
          type: java.io.InputStream
    openAttachment(net.corda.core.crypto.SecureHash):
      annotations:
        - Nullable
      default: false
      type: public
      returnType: net.corda.core.contracts.Attachment
      params:
        id:
          annotation:
            - NotNull
          type: net.corda.core.crypto.SecureHash
    queryAttachments(net.corda.core.node.services.vault.AttachmentQueryCriteria, net.corda.core.node.services.vault.AttachmentSort):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.List<net.corda.core.crypto.SecureHash>
      params:
        criteria:
          annotation:
            - NotNull
          type: net.corda.core.node.services.vault.AttachmentQueryCriteria
        sorting:
          annotation:
            - Nullable
          type: net.corda.core.node.services.vault.AttachmentSort