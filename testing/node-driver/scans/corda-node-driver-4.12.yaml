# Auto-generated by Gradle cementApi task
# DO NOT EDIT THIS FILE MANUALLY
net.corda.testing.driver.Driver:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    ? driver(net.corda.testing.driver.DriverParameters, kotlin.jvm.functions.Function1<?
      super net.corda.testing.driver.DriverDSL, ? extends A>)
    : annotations: []
      default: false
      type: public static final
      returnType: A
      params:
        defaultParameters:
          annotation:
            - NotNull
          type: net.corda.testing.driver.DriverParameters
        dsl:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.driver.DriverDSL,\
            \ ? extends A>"
    logFile(net.corda.testing.driver.NodeHandle):
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: java.io.File
      params:
        $this$logFile:
          annotation:
            - NotNull
          type: net.corda.testing.driver.NodeHandle
net.corda.testing.driver.DriverDSL:
  annotations: []
  type: public interface
  extends: []
  interface: true
  methods:
    baseDirectory(net.corda.core.identity.CordaX500Name):
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.nio.file.Path
      params:
        nodeName:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
    getDefaultNotaryHandle():
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.testing.driver.NotaryHandle
    getDefaultNotaryIdentity():
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.core.identity.Party
    getDefaultNotaryNode():
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.core.concurrent.CordaFuture<net.corda.testing.driver.NodeHandle>
    getNotaryHandles():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.testing.driver.NotaryHandle>
    nextPort():
      annotations: []
      default: true
      type: public
      returnType: int
    startNode():
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.core.concurrent.CordaFuture<net.corda.testing.driver.NodeHandle>
    startNode(net.corda.testing.driver.NodeParameters):
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.concurrent.CordaFuture<net.corda.testing.driver.NodeHandle>
      params:
        parameters:
          annotation:
            - NotNull
          type: net.corda.testing.driver.NodeParameters
    ? startNode(net.corda.testing.driver.NodeParameters, net.corda.core.identity.CordaX500Name,
      java.util.List<net.corda.testing.node.User>, net.corda.testing.driver.VerifierType,
      java.util.Map<String, ?>, Boolean, String)
    : annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.core.concurrent.CordaFuture<net.corda.testing.driver.NodeHandle>
      params:
        defaultParameters:
          annotation:
            - NotNull
          type: net.corda.testing.driver.NodeParameters
        providedName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        rpcUsers:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.User>
        verifierType:
          annotation:
            - NotNull
          type: net.corda.testing.driver.VerifierType
        customOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        startInSameProcess:
          annotation:
            - Nullable
          type: Boolean
        maximumHeapSize:
          annotation:
            - NotNull
          type: String
    ? startNode(net.corda.testing.driver.NodeParameters, net.corda.core.identity.CordaX500Name,
      java.util.List<net.corda.testing.node.User>, net.corda.testing.driver.VerifierType,
      java.util.Map<String, ?>, Boolean, String, String)
    : annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.core.concurrent.CordaFuture<net.corda.testing.driver.NodeHandle>
      params:
        defaultParameters:
          annotation:
            - NotNull
          type: net.corda.testing.driver.NodeParameters
        providedName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        rpcUsers:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.User>
        verifierType:
          annotation:
            - NotNull
          type: net.corda.testing.driver.VerifierType
        customOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        startInSameProcess:
          annotation:
            - Nullable
          type: Boolean
        maximumHeapSize:
          annotation:
            - NotNull
          type: String
        logLevelOverride:
          annotation:
            - Nullable
          type: String
    startWebserver(net.corda.testing.driver.NodeHandle):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.core.concurrent.CordaFuture<net.corda.testing.driver.WebserverHandle>
      params:
        handle:
          annotation:
            - NotNull
          type: net.corda.testing.driver.NodeHandle
    startWebserver(net.corda.testing.driver.NodeHandle, String):
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.concurrent.CordaFuture<net.corda.testing.driver.WebserverHandle>
      params:
        handle:
          annotation:
            - NotNull
          type: net.corda.testing.driver.NodeHandle
        maximumHeapSize:
          annotation:
            - NotNull
          type: String
net.corda.testing.driver.DriverParameters:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component10():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<String>
    component11():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.JmxPolicy
    component12():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.NetworkParameters
    component13():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, Object>"
    component14():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component15():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Collection<net.corda.testing.node.TestCordapp>
    component16():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, String>"
    component17():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component18():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component19():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.time.Duration
    component2():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.nio.file.Path
    component3():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.PortAllocation
    component4():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.PortAllocation
    component5():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, String>"
    component6():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component7():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component8():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component9():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.node.NotarySpec>
    ? copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation,
      java.util.Map<String, String>, boolean, boolean, boolean, java.util.List<net.corda.testing.node.NotarySpec>,
      java.util.List<String>, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        isDebug:
          annotation: []
          type: boolean
        driverDirectory:
          annotation:
            - NotNull
          type: java.nio.file.Path
        portAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        debugPortAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        systemProperties:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
        useTestClock:
          annotation: []
          type: boolean
        startNodesInProcess:
          annotation: []
          type: boolean
        waitForAllNodesToFinish:
          annotation: []
          type: boolean
        notarySpecs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.NotarySpec>
        extraCordappPackagesToScan:
          annotation:
            - NotNull
          type: java.util.List<String>
        jmxPolicy:
          annotation:
            - NotNull
          type: net.corda.testing.driver.JmxPolicy
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
    ? copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation,
      java.util.Map<String, String>, boolean, boolean, boolean, java.util.List<net.corda.testing.node.NotarySpec>,
      java.util.List<String>, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters,
      java.util.Map<String, ?>, boolean, java.util.Collection<? extends net.corda.testing.node.TestCordapp>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        isDebug:
          annotation: []
          type: boolean
        driverDirectory:
          annotation:
            - NotNull
          type: java.nio.file.Path
        portAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        debugPortAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        systemProperties:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
        useTestClock:
          annotation: []
          type: boolean
        startNodesInProcess:
          annotation: []
          type: boolean
        waitForAllNodesToFinish:
          annotation: []
          type: boolean
        notarySpecs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.NotarySpec>
        extraCordappPackagesToScan:
          annotation:
            - NotNull
          type: java.util.List<String>
        jmxPolicy:
          annotation:
            - NotNull
          type: net.corda.testing.driver.JmxPolicy
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        notaryCustomOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        inMemoryDB:
          annotation: []
          type: boolean
        cordappsForAllNodes:
          annotation:
            - Nullable
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
    ? copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation,
      java.util.Map<String, String>, boolean, boolean, boolean, java.util.List<net.corda.testing.node.NotarySpec>,
      java.util.List<String>, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters,
      java.util.Map<String, ?>, boolean, java.util.Collection<? extends net.corda.testing.node.TestCordapp>,
      java.util.Map<String, String>, boolean)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        isDebug:
          annotation: []
          type: boolean
        driverDirectory:
          annotation:
            - NotNull
          type: java.nio.file.Path
        portAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        debugPortAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        systemProperties:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
        useTestClock:
          annotation: []
          type: boolean
        startNodesInProcess:
          annotation: []
          type: boolean
        waitForAllNodesToFinish:
          annotation: []
          type: boolean
        notarySpecs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.NotarySpec>
        extraCordappPackagesToScan:
          annotation:
            - NotNull
          type: java.util.List<String>
        jmxPolicy:
          annotation:
            - NotNull
          type: net.corda.testing.driver.JmxPolicy
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        notaryCustomOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        inMemoryDB:
          annotation: []
          type: boolean
        cordappsForAllNodes:
          annotation:
            - Nullable
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
        environmentVariables:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
        allowHibernateToManageAppSchema:
          annotation: []
          type: boolean
    ? copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation,
      java.util.Map<String, String>, boolean, boolean, boolean, java.util.List<net.corda.testing.node.NotarySpec>,
      java.util.List<String>, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters,
      java.util.Map<String, ?>, boolean, java.util.Collection<? extends net.corda.testing.node.TestCordapp>,
      java.util.Map<String, String>, boolean, boolean)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        isDebug:
          annotation: []
          type: boolean
        driverDirectory:
          annotation:
            - NotNull
          type: java.nio.file.Path
        portAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        debugPortAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        systemProperties:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
        useTestClock:
          annotation: []
          type: boolean
        startNodesInProcess:
          annotation: []
          type: boolean
        waitForAllNodesToFinish:
          annotation: []
          type: boolean
        notarySpecs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.NotarySpec>
        extraCordappPackagesToScan:
          annotation:
            - NotNull
          type: java.util.List<String>
        jmxPolicy:
          annotation:
            - NotNull
          type: net.corda.testing.driver.JmxPolicy
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        notaryCustomOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        inMemoryDB:
          annotation: []
          type: boolean
        cordappsForAllNodes:
          annotation:
            - Nullable
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
        environmentVariables:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
        allowHibernateToManageAppSchema:
          annotation: []
          type: boolean
        premigrateH2Database:
          annotation: []
          type: boolean
    ? copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation,
      java.util.Map<String, String>, boolean, boolean, boolean, java.util.List<net.corda.testing.node.NotarySpec>,
      java.util.List<String>, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters,
      java.util.Map<String, ?>, boolean, java.util.Collection<? extends net.corda.testing.node.TestCordapp>,
      java.util.Map<String, String>, boolean, boolean, java.time.Duration)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        isDebug:
          annotation: []
          type: boolean
        driverDirectory:
          annotation:
            - NotNull
          type: java.nio.file.Path
        portAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        debugPortAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        systemProperties:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
        useTestClock:
          annotation: []
          type: boolean
        startNodesInProcess:
          annotation: []
          type: boolean
        waitForAllNodesToFinish:
          annotation: []
          type: boolean
        notarySpecs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.NotarySpec>
        extraCordappPackagesToScan:
          annotation:
            - NotNull
          type: java.util.List<String>
        jmxPolicy:
          annotation:
            - NotNull
          type: net.corda.testing.driver.JmxPolicy
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        notaryCustomOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        inMemoryDB:
          annotation: []
          type: boolean
        cordappsForAllNodes:
          annotation:
            - Nullable
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
        environmentVariables:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
        allowHibernateToManageAppSchema:
          annotation: []
          type: boolean
        premigrateH2Database:
          annotation: []
          type: boolean
        notaryHandleTimeout:
          annotation:
            - NotNull
          type: java.time.Duration
    ? copy(boolean, java.nio.file.Path, net.corda.testing.driver.PortAllocation, net.corda.testing.driver.PortAllocation,
      java.util.Map<String, String>, boolean, boolean, boolean, java.util.List<net.corda.testing.node.NotarySpec>,
      java.util.List<String>, net.corda.testing.driver.JmxPolicy, net.corda.core.node.NetworkParameters,
      java.util.Set<? extends net.corda.testing.node.TestCordapp>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        isDebug:
          annotation: []
          type: boolean
        driverDirectory:
          annotation:
            - NotNull
          type: java.nio.file.Path
        portAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        debugPortAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
        systemProperties:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
        useTestClock:
          annotation: []
          type: boolean
        startNodesInProcess:
          annotation: []
          type: boolean
        waitForAllNodesToFinish:
          annotation: []
          type: boolean
        notarySpecs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.NotarySpec>
        extraCordappPackagesToScan:
          annotation:
            - NotNull
          type: java.util.List<String>
        jmxPolicy:
          annotation:
            - NotNull
          type: net.corda.testing.driver.JmxPolicy
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        cordappsForAllNodes:
          annotation:
            - Nullable
          type: java.util.Set<? extends net.corda.testing.node.TestCordapp>
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getAllowHibernateToManageAppSchema():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getCordappsForAllNodes():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: java.util.Collection<net.corda.testing.node.TestCordapp>
    getDebugPortAllocation():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.PortAllocation
    getDriverDirectory():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.nio.file.Path
    getEnvironmentVariables():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, String>"
    getExtraCordappPackagesToScan():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<String>
    getInMemoryDB():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getJmxPolicy():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.JmxPolicy
    getNetworkParameters():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.NetworkParameters
    getNotaryCustomOverrides():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, Object>"
    getNotaryHandleTimeout():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.time.Duration
    getNotarySpecs():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.node.NotarySpec>
    getPortAllocation():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.PortAllocation
    getPremigrateH2Database():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getStartNodesInProcess():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getSystemProperties():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, String>"
    getUseTestClock():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getWaitForAllNodesToFinish():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    isDebug():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    withAllowHibernateToManageAppSchema(boolean):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        value:
          annotation: []
          type: boolean
    withCordappsForAllNodes(java.util.Collection<? extends net.corda.testing.node.TestCordapp>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        cordappsForAllNodes:
          annotation:
            - Nullable
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
    withDebugPortAllocation(net.corda.testing.driver.PortAllocation):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        debugPortAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
    withDriverDirectory(java.nio.file.Path):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        driverDirectory:
          annotation:
            - NotNull
          type: java.nio.file.Path
    withEnvironmentVariables(java.util.Map<String, String>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        variables:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    withExtraCordappPackagesToScan(java.util.List<String>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        extraCordappPackagesToScan:
          annotation:
            - NotNull
          type: java.util.List<String>
    withInMemoryDB(boolean):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        inMemoryDB:
          annotation: []
          type: boolean
    withIsDebug(boolean):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        isDebug:
          annotation: []
          type: boolean
    withJmxPolicy(net.corda.testing.driver.JmxPolicy):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        jmxPolicy:
          annotation:
            - NotNull
          type: net.corda.testing.driver.JmxPolicy
    withNetworkParameters(net.corda.core.node.NetworkParameters):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
    withNotaryCustomOverrides(java.util.Map<String, ?>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        notaryCustomOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
    withNotaryHandleTimeout(java.time.Duration):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        value:
          annotation:
            - NotNull
          type: java.time.Duration
    withNotarySpecs(java.util.List<net.corda.testing.node.NotarySpec>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        notarySpecs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.NotarySpec>
    withPortAllocation(net.corda.testing.driver.PortAllocation):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        portAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
    withStartNodesInProcess(boolean):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        startNodesInProcess:
          annotation: []
          type: boolean
    withSystemProperties(java.util.Map<String, String>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        systemProperties:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    withUseTestClock(boolean):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        useTestClock:
          annotation: []
          type: boolean
    withWaitForAllNodesToFinish(boolean):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.DriverParameters
      params:
        waitForAllNodesToFinish:
          annotation: []
          type: boolean
net.corda.testing.driver.InProcess:
  annotations: []
  type: public interface
  extends:
    - net.corda.testing.driver.NodeHandle
  interface: true
  methods:
    getBaseDirectory():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.nio.file.Path
    getJmxAddress():
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getNodeInfo():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.node.NodeInfo
    getP2pAddress():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getRpc():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.messaging.CordaRPCOps
    getRpcAddress():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getRpcAdminAddress():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getRpcUsers():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.testing.node.User>
    getServices():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.node.ServiceHub
    registerInitiatedFlow(Class<T>):
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: rx.Observable<T>
      params:
        initiatedFlowClass:
          annotation:
            - NotNull
          type: Class<T>
    startFlow(net.corda.core.flows.FlowLogic<? extends T>):
      annotations:
        - NotNull
      default: true
      type: public
      returnType: net.corda.core.concurrent.CordaFuture<T>
      params:
        logic:
          annotation:
            - NotNull
          type: net.corda.core.flows.FlowLogic<? extends T>
    stop():
      annotations: []
      default: false
      type: public abstract
      returnType: void
net.corda.testing.driver.JmxPolicy:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component2():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.PortAllocation
    copy(boolean, net.corda.testing.driver.PortAllocation):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.JmxPolicy
      params:
        startJmxHttpServer:
          annotation: []
          type: boolean
        jmxHttpServerPortAllocation:
          annotation:
            - NotNull
          type: net.corda.testing.driver.PortAllocation
    defaultEnabled():
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.testing.driver.JmxPolicy
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getJmxHttpServerPortAllocation():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.PortAllocation
    getStartJmxHttpServer():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.driver.JmxPolicy$Companion
net.corda.testing.driver.JmxPolicy$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    defaultEnabled():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.JmxPolicy
net.corda.testing.driver.NodeHandle:
  annotations: []
  type: public interface
  extends:
    - java.lang.AutoCloseable
  interface: true
  methods:
    getBaseDirectory():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.nio.file.Path
    getJmxAddress():
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getNodeInfo():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.node.NodeInfo
    getP2pAddress():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getRpc():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.messaging.CordaRPCOps
    getRpcAddress():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getRpcAdminAddress():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getRpcUsers():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.testing.node.User>
    stop():
      annotations: []
      default: false
      type: public abstract
      returnType: void
net.corda.testing.driver.NodeParameters:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    component10():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.core.utilities.NetworkHostAndPort
    component11():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, String>"
    component12():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Collection<net.corda.testing.node.TestCordapp>
    component2():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.node.User>
    component3():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.VerifierType
    component4():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, Object>"
    component5():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Boolean
    component6():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component7():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Collection<net.corda.testing.node.TestCordapp>
    component8():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<? extends Class<? extends net.corda.core.flows.FlowLogic<?>>,\
        \ Class<? extends net.corda.core.flows.FlowLogic<?>>>"
    component9():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    ? copy(net.corda.core.identity.CordaX500Name, java.util.List<net.corda.testing.node.User>,
      net.corda.testing.driver.VerifierType, java.util.Map<String, ?>, Boolean, String)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        providedName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        rpcUsers:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.User>
        verifierType:
          annotation:
            - NotNull
          type: net.corda.testing.driver.VerifierType
        customOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        startInSameProcess:
          annotation:
            - Nullable
          type: Boolean
        maximumHeapSize:
          annotation:
            - NotNull
          type: String
    ? copy(net.corda.core.identity.CordaX500Name, java.util.List<net.corda.testing.node.User>,
      net.corda.testing.driver.VerifierType, java.util.Map<String, ?>, Boolean, String,
      java.util.Collection<? extends net.corda.testing.node.TestCordapp>, java.util.Map<?
      extends Class<? extends net.corda.core.flows.FlowLogic<?>>, ? extends Class<?
      extends net.corda.core.flows.FlowLogic<?>>>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        providedName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        rpcUsers:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.User>
        verifierType:
          annotation:
            - NotNull
          type: net.corda.testing.driver.VerifierType
        customOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        startInSameProcess:
          annotation:
            - Nullable
          type: Boolean
        maximumHeapSize:
          annotation:
            - NotNull
          type: String
        additionalCordapps:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
        flowOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<? extends Class<? extends net.corda.core.flows.FlowLogic<?>>,\
            \ ? extends Class<? extends net.corda.core.flows.FlowLogic<?>>>"
    ? copy(net.corda.core.identity.CordaX500Name, java.util.List<net.corda.testing.node.User>,
      net.corda.testing.driver.VerifierType, java.util.Map<String, ?>, Boolean, String,
      java.util.Collection<? extends net.corda.testing.node.TestCordapp>, java.util.Map<?
      extends Class<? extends net.corda.core.flows.FlowLogic<?>>, ? extends Class<?
      extends net.corda.core.flows.FlowLogic<?>>>, String)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        providedName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        rpcUsers:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.User>
        verifierType:
          annotation:
            - NotNull
          type: net.corda.testing.driver.VerifierType
        customOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        startInSameProcess:
          annotation:
            - Nullable
          type: Boolean
        maximumHeapSize:
          annotation:
            - NotNull
          type: String
        additionalCordapps:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
        flowOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<? extends Class<? extends net.corda.core.flows.FlowLogic<?>>,\
            \ ? extends Class<? extends net.corda.core.flows.FlowLogic<?>>>"
        logLevelOverride:
          annotation:
            - Nullable
          type: String
    ? copy(net.corda.core.identity.CordaX500Name, java.util.List<net.corda.testing.node.User>,
      net.corda.testing.driver.VerifierType, java.util.Map<String, ?>, Boolean, String,
      java.util.Collection<? extends net.corda.testing.node.TestCordapp>, java.util.Map<?
      extends Class<? extends net.corda.core.flows.FlowLogic<?>>, ? extends Class<?
      extends net.corda.core.flows.FlowLogic<?>>>, String, net.corda.core.utilities.NetworkHostAndPort)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        providedName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        rpcUsers:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.User>
        verifierType:
          annotation:
            - NotNull
          type: net.corda.testing.driver.VerifierType
        customOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        startInSameProcess:
          annotation:
            - Nullable
          type: Boolean
        maximumHeapSize:
          annotation:
            - NotNull
          type: String
        additionalCordapps:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
        flowOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<? extends Class<? extends net.corda.core.flows.FlowLogic<?>>,\
            \ ? extends Class<? extends net.corda.core.flows.FlowLogic<?>>>"
        logLevelOverride:
          annotation:
            - Nullable
          type: String
        rpcAddress:
          annotation:
            - Nullable
          type: net.corda.core.utilities.NetworkHostAndPort
    ? copy(net.corda.core.identity.CordaX500Name, java.util.List<net.corda.testing.node.User>,
      net.corda.testing.driver.VerifierType, java.util.Map<String, ?>, Boolean, String,
      java.util.Collection<? extends net.corda.testing.node.TestCordapp>, java.util.Map<?
      extends Class<? extends net.corda.core.flows.FlowLogic<?>>, ? extends Class<?
      extends net.corda.core.flows.FlowLogic<?>>>, String, net.corda.core.utilities.NetworkHostAndPort,
      java.util.Map<String, String>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        providedName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        rpcUsers:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.User>
        verifierType:
          annotation:
            - NotNull
          type: net.corda.testing.driver.VerifierType
        customOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        startInSameProcess:
          annotation:
            - Nullable
          type: Boolean
        maximumHeapSize:
          annotation:
            - NotNull
          type: String
        additionalCordapps:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
        flowOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<? extends Class<? extends net.corda.core.flows.FlowLogic<?>>,\
            \ ? extends Class<? extends net.corda.core.flows.FlowLogic<?>>>"
        logLevelOverride:
          annotation:
            - Nullable
          type: String
        rpcAddress:
          annotation:
            - Nullable
          type: net.corda.core.utilities.NetworkHostAndPort
        systemProperties:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    ? copy(net.corda.core.identity.CordaX500Name, java.util.List<net.corda.testing.node.User>,
      net.corda.testing.driver.VerifierType, java.util.Map<String, ?>, Boolean, String,
      java.util.Collection<? extends net.corda.testing.node.TestCordapp>, java.util.Map<?
      extends Class<? extends net.corda.core.flows.FlowLogic<?>>, ? extends Class<?
      extends net.corda.core.flows.FlowLogic<?>>>, String, net.corda.core.utilities.NetworkHostAndPort,
      java.util.Map<String, String>, java.util.Collection<? extends net.corda.testing.node.TestCordapp>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        providedName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        rpcUsers:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.User>
        verifierType:
          annotation:
            - NotNull
          type: net.corda.testing.driver.VerifierType
        customOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
        startInSameProcess:
          annotation:
            - Nullable
          type: Boolean
        maximumHeapSize:
          annotation:
            - NotNull
          type: String
        additionalCordapps:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
        flowOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<? extends Class<? extends net.corda.core.flows.FlowLogic<?>>,\
            \ ? extends Class<? extends net.corda.core.flows.FlowLogic<?>>>"
        logLevelOverride:
          annotation:
            - Nullable
          type: String
        rpcAddress:
          annotation:
            - Nullable
          type: net.corda.core.utilities.NetworkHostAndPort
        systemProperties:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
        legacyContracts:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getAdditionalCordapps():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Collection<net.corda.testing.node.TestCordapp>
    getCustomOverrides():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, Object>"
    getFlowOverrides():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<? extends Class<? extends net.corda.core.flows.FlowLogic<?>>,\
        \ Class<? extends net.corda.core.flows.FlowLogic<?>>>"
    getLegacyContracts():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Collection<net.corda.testing.node.TestCordapp>
    getLogLevelOverride():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    getMaximumHeapSize():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getProvidedName():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    getRpcAddress():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getRpcUsers():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.node.User>
    getStartInSameProcess():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Boolean
    getSystemProperties():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.Map<String, String>"
    getVerifierType():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.VerifierType
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    withAdditionalCordapps(java.util.Set<? extends net.corda.testing.node.TestCordapp>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        additionalCordapps:
          annotation:
            - NotNull
          type: java.util.Set<? extends net.corda.testing.node.TestCordapp>
    withCustomOverrides(java.util.Map<String, ?>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        customOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
    ? withFlowOverrides(java.util.Map<Class<? extends net.corda.core.flows.FlowLogic<?>>,
      ? extends Class<? extends net.corda.core.flows.FlowLogic<?>>>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        flowOverrides:
          annotation:
            - NotNull
          type: "java.util.Map<Class<? extends net.corda.core.flows.FlowLogic<?>>,\
            \ ? extends Class<? extends net.corda.core.flows.FlowLogic<?>>>"
    withLegacyContracts(java.util.Collection<? extends net.corda.testing.node.TestCordapp>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        legacyContracts:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
    withLogLevelOverride(String):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        logLevelOverride:
          annotation:
            - Nullable
          type: String
    withMaximumHeapSize(String):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        maximumHeapSize:
          annotation:
            - NotNull
          type: String
    withProvidedName(net.corda.core.identity.CordaX500Name):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        providedName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
    withRpcAddress(net.corda.core.utilities.NetworkHostAndPort):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        rpcAddress:
          annotation:
            - Nullable
          type: net.corda.core.utilities.NetworkHostAndPort
    withRpcUsers(java.util.List<net.corda.testing.node.User>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        rpcUsers:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.User>
    withStartInSameProcess(Boolean):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        startInSameProcess:
          annotation:
            - Nullable
          type: Boolean
    withSystemProperties(java.util.Map<String, String>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        systemProperties:
          annotation:
            - NotNull
          type: "java.util.Map<String, String>"
    withVerifierType(net.corda.testing.driver.VerifierType):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NodeParameters
      params:
        verifierType:
          annotation:
            - NotNull
          type: net.corda.testing.driver.VerifierType
net.corda.testing.driver.NotaryHandle:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.Party
    component2():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component3():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.concurrent.CordaFuture<java.util.List<net.corda.testing.driver.NodeHandle>>
    ? copy(net.corda.core.identity.Party, boolean, net.corda.core.concurrent.CordaFuture<java.util.List<net.corda.testing.driver.NodeHandle>>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.NotaryHandle
      params:
        identity:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        validating:
          annotation: []
          type: boolean
        nodeHandles:
          annotation:
            - NotNull
          type: net.corda.core.concurrent.CordaFuture<java.util.List<net.corda.testing.driver.NodeHandle>>
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getIdentity():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.Party
    getNodeHandles():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.concurrent.CordaFuture<java.util.List<net.corda.testing.driver.NodeHandle>>
    getValidating():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.driver.OutOfProcess:
  annotations: []
  type: public interface
  extends:
    - net.corda.testing.driver.NodeHandle
  interface: true
  methods:
    getBaseDirectory():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.nio.file.Path
    getJmxAddress():
      annotations:
        - Nullable
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getNodeInfo():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.node.NodeInfo
    getP2pAddress():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getProcess():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: Process
    getRpc():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.messaging.CordaRPCOps
    getRpcAddress():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getRpcAdminAddress():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getRpcUsers():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.util.List<net.corda.testing.node.User>
    stop():
      annotations: []
      default: false
      type: public abstract
      returnType: void
net.corda.testing.driver.PortAllocation:
  annotations: []
  type: public abstract class
  extends: null
  implements: []
  interface: false
  methods:
    getDefaultAllocator():
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.testing.driver.PortAllocation
    nextHostAndPort():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.utilities.NetworkHostAndPort
    nextPort():
      annotations: []
      default: false
      type: public abstract
      returnType: int
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.driver.PortAllocation$Companion
    DEFAULT_START_PORT:
      annotation: []
      type: public static final int
      initialised value: 10000
    FIRST_EPHEMERAL_PORT:
      annotation: []
      type: public static final int
      initialised value: 30000
net.corda.testing.driver.PortAllocation$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    getDefaultAllocator():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.PortAllocation
net.corda.testing.driver.PortAllocation$Incremental:
  annotations: []
  type: public static class
  extends: net.corda.testing.driver.PortAllocation
  implements: []
  interface: false
  methods:
    getDefaultAllocator():
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.testing.driver.PortAllocation
    getPortCounter():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.concurrent.atomic.AtomicInteger
    nextHostAndPort():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.utilities.NetworkHostAndPort
    nextPort():
      annotations: []
      default: false
      type: public
      returnType: int
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.driver.PortAllocation$Companion
    DEFAULT_START_PORT:
      annotation: []
      type: public static final int
      initialised value: 10000
    FIRST_EPHEMERAL_PORT:
      annotation: []
      type: public static final int
      initialised value: 30000
net.corda.testing.driver.SharedMemoryIncremental:
  annotations: []
  type: public class
  extends: net.corda.testing.driver.PortAllocation
  implements: []
  interface: false
  methods:
    getDefaultAllocator():
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.testing.driver.PortAllocation
    nextHostAndPort():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.utilities.NetworkHostAndPort
    nextPort():
      annotations: []
      default: false
      type: public
      returnType: int
  fields:
    INSTANCE:
      annotation: []
      type: public static net.corda.testing.driver.SharedMemoryIncremental
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.driver.PortAllocation$Companion
net.corda.testing.driver.VerifierType:
  annotations: []
  type: public final class
  extends: java.lang.Enum
  implements: []
  interface: false
  methods:
    getEntries():
      annotations:
        - NotNull
      default: false
      type: public static
      returnType: kotlin.enums.EnumEntries<net.corda.testing.driver.VerifierType>
    valueOf(String):
      annotations: []
      default: false
      type: public static
      returnType: net.corda.testing.driver.VerifierType
      params:
        value:
          annotation: []
          type: String
    values():
      annotations: []
      default: false
      type: public static
      returnType: "net.corda.testing.driver.VerifierType[]"
net.corda.testing.driver.WebserverHandle:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.utilities.NetworkHostAndPort
    component2():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: Process
    copy(net.corda.core.utilities.NetworkHostAndPort, Process):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.WebserverHandle
      params:
        listenAddress:
          annotation:
            - NotNull
          type: net.corda.core.utilities.NetworkHostAndPort
        process:
          annotation:
            - NotNull
          type: Process
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getListenAddress():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.utilities.NetworkHostAndPort
    getProcess():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: Process
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.flows.FlowTestsUtilsKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    from(T, net.corda.core.flows.FlowSession):
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "kotlin.Pair<net.corda.core.flows.FlowSession, T>"
      params:
        $this$from:
          annotation:
            - NotNull
          type: T
        session:
          annotation:
            - NotNull
          type: net.corda.core.flows.FlowSession
    ? from(java.util.Map<net.corda.core.flows.FlowSession, ? extends net.corda.core.utilities.UntrustworthyData<?>>,
      net.corda.core.flows.FlowSession)
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: R
      params:
        $this$from:
          annotation:
            - NotNull
          type: "java.util.Map<net.corda.core.flows.FlowSession, ? extends net.corda.core.utilities.UntrustworthyData<?>>"
        session:
          annotation:
            - NotNull
          type: net.corda.core.flows.FlowSession
    from(kotlin.reflect.KClass<T>, net.corda.core.flows.FlowSession):
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "kotlin.Pair<net.corda.core.flows.FlowSession, Class<T>>"
      params:
        $this$from:
          annotation:
            - NotNull
          type: kotlin.reflect.KClass<T>
        session:
          annotation:
            - NotNull
          type: net.corda.core.flows.FlowSession
    receiveAll(net.corda.core.flows.FlowLogic<?>, Class<R>, net.corda.core.flows.FlowSession, net.corda.core.flows.FlowSession[]):
      annotations:
        - Suspendable
        - NotNull
      default: false
      type: public static final
      returnType: java.util.List<net.corda.core.utilities.UntrustworthyData<R>>
      params:
        $this$receiveAll:
          annotation:
            - NotNull
          type: net.corda.core.flows.FlowLogic<?>
        receiveType:
          annotation:
            - NotNull
          type: Class<R>
        session:
          annotation:
            - NotNull
          type: net.corda.core.flows.FlowSession
        sessions:
          annotation:
            - NotNull
          type: "net.corda.core.flows.FlowSession[]"
    ? receiveAll(net.corda.core.flows.FlowLogic<?>, kotlin.Pair<? extends net.corda.core.flows.FlowSession,
      ? extends Class<?>>, kotlin.Pair<? extends net.corda.core.flows.FlowSession,
      ? extends Class<?>>[])
    : annotations:
        - Suspendable
        - NotNull
      default: false
      type: public static final
      returnType: "java.util.Map<net.corda.core.flows.FlowSession, net.corda.core.utilities.UntrustworthyData<Object>>"
      params:
        $this$receiveAll:
          annotation:
            - NotNull
          type: net.corda.core.flows.FlowLogic<?>
        session:
          annotation:
            - NotNull
          type: "kotlin.Pair<? extends net.corda.core.flows.FlowSession, ? extends\
            \ Class<?>>"
        sessions:
          annotation:
            - NotNull
          type: "kotlin.Pair<? extends net.corda.core.flows.FlowSession, ? extends\
            \ Class<?>>[]"
    receiveAll(net.corda.core.flows.FlowLogic<?>, net.corda.core.flows.FlowSession, net.corda.core.flows.FlowSession[]):
      annotations:
        - Suspendable
      default: false
      type: public static final synthetic
      returnType: java.util.List<net.corda.core.utilities.UntrustworthyData<R>>
      params:
        "null":
          annotation: []
          type: "net.corda.core.flows.FlowSession[]"
    ? registerCordappFlowFactory(net.corda.testing.node.internal.TestStartedNode,
      kotlin.reflect.KClass<? extends net.corda.core.flows.FlowLogic<?>>, int, kotlin.jvm.functions.Function1<?
      super net.corda.core.flows.FlowSession, ? extends P>)
    : annotations: []
      default: false
      type: public static final synthetic
      returnType: net.corda.core.concurrent.CordaFuture<P>
      params:
        "null":
          annotation: []
          type: "kotlin.jvm.functions.Function1<? super net.corda.core.flows.FlowSession,\
            \ ? extends P>"
    ? registerCoreFlowFactory(net.corda.testing.node.internal.TestStartedNode, Class<?
      extends net.corda.core.flows.FlowLogic<?>>, Class<T>, kotlin.jvm.functions.Function1<?
      super net.corda.core.flows.FlowSession, ? extends T>, boolean)
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: rx.Observable<T>
      params:
        $this$registerCoreFlowFactory:
          annotation:
            - NotNull
          type: net.corda.testing.node.internal.TestStartedNode
        initiatingFlowClass:
          annotation:
            - NotNull
          type: Class<? extends net.corda.core.flows.FlowLogic<?>>
        initiatedFlowClass:
          annotation:
            - NotNull
          type: Class<T>
        flowFactory:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.core.flows.FlowSession,\
            \ ? extends T>"
        track:
          annotation: []
          type: boolean
    waitForAllFlowsToComplete(net.corda.testing.driver.NodeHandle, int, long):
      annotations: []
      default: false
      type: public static final
      returnType: void
      params:
        nodeHandle:
          annotation:
            - NotNull
          type: net.corda.testing.driver.NodeHandle
        maxIterations:
          annotation: []
          type: int
        iterationDelay:
          annotation: []
          type: long
net.corda.testing.node.ClusterSpec:
  annotations: []
  type: public abstract class
  extends: null
  implements: []
  interface: false
  methods:
    getClusterSize():
      annotations: []
      default: false
      type: public abstract
      returnType: int
net.corda.testing.node.ClusterSpec$Raft:
  annotations: []
  type: public static final class
  extends: net.corda.testing.node.ClusterSpec
  implements: []
  interface: false
  methods:
    component1():
      annotations: []
      default: false
      type: public final
      returnType: int
    copy(int):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.ClusterSpec$Raft
      params:
        clusterSize:
          annotation: []
          type: int
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getClusterSize():
      annotations: []
      default: false
      type: public
      returnType: int
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.node.DatabaseSnapshot:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    copyDatabaseSnapshot(java.nio.file.Path):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        baseDirectory:
          annotation:
            - NotNull
          type: java.nio.file.Path
    databaseFilename(java.nio.file.Path):
      annotations: []
      default: false
      type: public final
      returnType: java.nio.file.Path
      params:
        baseDirectory:
          annotation:
            - NotNull
          type: java.nio.file.Path
  fields:
    INSTANCE:
      annotation:
        - NotNull
      type: public static final net.corda.testing.node.DatabaseSnapshot
net.corda.testing.node.InMemoryMessagingNetwork:
  annotations:
    - ThreadSafe
  type: public final class
  extends: net.corda.core.serialization.SingletonSerializeAsToken
  implements: []
  interface: false
  methods:
    getEndpointsExternal():
      annotations:
        - NotNull
      default: false
      type: public final synchronized
      returnType: java.util.List<net.corda.testing.node.InMemoryMessagingNetwork$MockMessagingService>
    getReceivedMessages():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: rx.Observable<net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer>
    getSentMessages():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: rx.Observable<net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer>
    pumpSend(boolean):
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer
      params:
        block:
          annotation: []
          type: boolean
    stop():
      annotations: []
      default: false
      type: public final
      returnType: void
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.node.InMemoryMessagingNetwork$Companion
net.corda.testing.node.InMemoryMessagingNetwork$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: null
  implements:
    - net.corda.core.messaging.MessageRecipientGroup
  interface: false
  methods:
    component1():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.Party
    copy(net.corda.core.identity.Party):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle
      params:
        party:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getParty():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.Party
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.node.InMemoryMessagingNetwork$LatencyCalculator:
  annotations: []
  type: public static interface
  extends: []
  interface: true
  methods:
    between(net.corda.core.messaging.SingleMessageRecipient, net.corda.core.messaging.SingleMessageRecipient):
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: java.time.Duration
      params:
        sender:
          annotation:
            - NotNull
          type: net.corda.core.messaging.SingleMessageRecipient
        receiver:
          annotation:
            - NotNull
          type: net.corda.core.messaging.SingleMessageRecipient
net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    getMessageData():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.utilities.ByteSequence
    getRecipients():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.messaging.MessageRecipients
    getSender():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.InMemoryMessagingNetwork$PeerHandle
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer$Companion
net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.node.InMemoryMessagingNetwork$MockMessagingService:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    pumpReceive(boolean):
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer
      params:
        block:
          annotation: []
          type: boolean
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.node.InMemoryMessagingNetwork$MockMessagingService$Companion
net.corda.testing.node.InMemoryMessagingNetwork$MockMessagingService$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.node.InMemoryMessagingNetwork$PeerHandle:
  annotations:
    - CordaSerializable
  type: public static final class
  extends: null
  implements:
    - net.corda.core.messaging.SingleMessageRecipient
  interface: false
  methods:
    component1():
      annotations: []
      default: false
      type: public final
      returnType: int
    component2():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    copy(int, net.corda.core.identity.CordaX500Name):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.InMemoryMessagingNetwork$PeerHandle
      params:
        id:
          annotation: []
          type: int
        name:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getId():
      annotations: []
      default: false
      type: public final
      returnType: int
    getName():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy:
  annotations: []
  type: public abstract static class
  extends: null
  implements: []
  interface: false
  methods:
    pickNext(net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle, java.util.List<? extends A>):
      annotations: []
      default: false
      type: public abstract
      returnType: A
      params:
        service:
          annotation:
            - NotNull
          type: net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle
        pickFrom:
          annotation:
            - NotNull
          type: java.util.List<? extends A>
net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy$Random:
  annotations: []
  type: public static final class
  extends: net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy
  implements: []
  interface: false
  methods:
    getRandom():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.SplittableRandom
    pickNext(net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle, java.util.List<? extends A>):
      annotations: []
      default: false
      type: public
      returnType: A
      params:
        service:
          annotation:
            - NotNull
          type: net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle
        pickFrom:
          annotation:
            - NotNull
          type: java.util.List<? extends A>
net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy$RoundRobin:
  annotations: []
  type: public static final class
  extends: net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy
  implements: []
  interface: false
  methods:
    pickNext(net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle, java.util.List<? extends A>):
      annotations: []
      default: false
      type: public
      returnType: A
      params:
        service:
          annotation:
            - NotNull
          type: net.corda.testing.node.InMemoryMessagingNetwork$DistributedServiceHandle
        pickFrom:
          annotation:
            - NotNull
          type: java.util.List<? extends A>
net.corda.testing.node.MockNetFlowTimeOut:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getBackoffBase():
      annotations: []
      default: false
      type: public final
      returnType: double
    getMaxRestartCount():
      annotations: []
      default: false
      type: public final
      returnType: int
    getTimeout():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.time.Duration
net.corda.testing.node.MockNetNotaryConfig:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getClassName():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    getExtraConfig():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: com.typesafe.config.Config
    getServiceLegalName():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    getValidating():
      annotations: []
      default: false
      type: public final
      returnType: boolean
net.corda.testing.node.MockNetwork:
  annotations: []
  type: public class
  extends: null
  implements: []
  interface: false
  methods:
    baseDirectory(int):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.nio.file.Path
      params:
        nodeId:
          annotation: []
          type: int
    createNode():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.StartedMockNode
    createNode(net.corda.core.identity.CordaX500Name):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.StartedMockNode
      params:
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
    createNode(net.corda.core.identity.CordaX500Name, Integer):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.StartedMockNode
      params:
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        forcedID:
          annotation:
            - Nullable
          type: Integer
    createNode(net.corda.core.identity.CordaX500Name, Integer, java.math.BigInteger):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.StartedMockNode
      params:
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        forcedID:
          annotation:
            - Nullable
          type: Integer
        entropyRoot:
          annotation:
            - NotNull
          type: java.math.BigInteger
    ? createNode(net.corda.core.identity.CordaX500Name, Integer, java.math.BigInteger,
      net.corda.testing.node.MockNodeConfigOverrides)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.StartedMockNode
      params:
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        forcedID:
          annotation:
            - Nullable
          type: Integer
        entropyRoot:
          annotation:
            - NotNull
          type: java.math.BigInteger
        configOverrides:
          annotation:
            - Nullable
          type: net.corda.testing.node.MockNodeConfigOverrides
    createNode(net.corda.testing.node.MockNodeParameters):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.StartedMockNode
      params:
        parameters:
          annotation:
            - NotNull
          type: net.corda.testing.node.MockNodeParameters
    createPartyNode(net.corda.core.identity.CordaX500Name):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.StartedMockNode
      params:
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
    createUnstartedNode():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.UnstartedMockNode
    createUnstartedNode(net.corda.core.identity.CordaX500Name):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.UnstartedMockNode
      params:
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
    createUnstartedNode(net.corda.core.identity.CordaX500Name, Integer):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.UnstartedMockNode
      params:
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        forcedID:
          annotation:
            - Nullable
          type: Integer
    createUnstartedNode(net.corda.core.identity.CordaX500Name, Integer, java.math.BigInteger):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.UnstartedMockNode
      params:
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        forcedID:
          annotation:
            - Nullable
          type: Integer
        entropyRoot:
          annotation:
            - NotNull
          type: java.math.BigInteger
    ? createUnstartedNode(net.corda.core.identity.CordaX500Name, Integer, java.math.BigInteger,
      net.corda.testing.node.MockNodeConfigOverrides)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.UnstartedMockNode
      params:
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        forcedID:
          annotation:
            - Nullable
          type: Integer
        entropyRoot:
          annotation:
            - NotNull
          type: java.math.BigInteger
        configOverrides:
          annotation:
            - Nullable
          type: net.corda.testing.node.MockNodeConfigOverrides
    createUnstartedNode(net.corda.testing.node.MockNodeParameters):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.UnstartedMockNode
      params:
        parameters:
          annotation:
            - NotNull
          type: net.corda.testing.node.MockNodeParameters
    getCordappPackages():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<String>
    getDefaultNotaryIdentity():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.Party
    getDefaultNotaryNode():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.StartedMockNode
    getDefaultParameters():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetworkParameters
    getNetworkParameters():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.NetworkParameters
    getNetworkSendManuallyPumped():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getNextNodeId():
      annotations: []
      default: false
      type: public final
      returnType: int
    getNotaryNodes():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.node.StartedMockNode>
    getNotarySpecs():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.node.MockNetworkNotarySpec>
    getServicePeerAllocationStrategy():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy
    getThreadPerNode():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    runNetwork():
      annotations: []
      default: false
      type: public final
      returnType: void
    runNetwork(int):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        rounds:
          annotation: []
          type: int
    startNodes():
      annotations: []
      default: false
      type: public final
      returnType: void
    stopNodes():
      annotations: []
      default: false
      type: public final
      returnType: void
    waitQuiescent():
      annotations: []
      default: false
      type: public final
      returnType: void
net.corda.testing.node.MockNetworkNotarySpec:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    component2():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    copy(net.corda.core.identity.CordaX500Name, boolean):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetworkNotarySpec
      params:
        name:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
        validating:
          annotation: []
          type: boolean
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getClassName():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: String
    getName():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    getValidating():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    setClassName(String):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        <set-?>:
          annotation:
            - Nullable
          type: String
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.node.MockNetworkParameters:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component2():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component3():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy
    component4():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.node.MockNetworkNotarySpec>
    component5():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.NetworkParameters
    component6():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Collection<net.corda.testing.node.TestCordapp>
    ? copy(boolean, boolean, net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy,
      java.util.List<net.corda.testing.node.MockNetworkNotarySpec>, net.corda.core.node.NetworkParameters)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetworkParameters
      params:
        networkSendManuallyPumped:
          annotation: []
          type: boolean
        threadPerNode:
          annotation: []
          type: boolean
        servicePeerAllocationStrategy:
          annotation:
            - NotNull
          type: net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy
        notarySpecs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.MockNetworkNotarySpec>
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
    ? copy(boolean, boolean, net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy,
      java.util.List<net.corda.testing.node.MockNetworkNotarySpec>, net.corda.core.node.NetworkParameters,
      java.util.Collection<? extends net.corda.testing.node.TestCordapp>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetworkParameters
      params:
        networkSendManuallyPumped:
          annotation: []
          type: boolean
        threadPerNode:
          annotation: []
          type: boolean
        servicePeerAllocationStrategy:
          annotation:
            - NotNull
          type: net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy
        notarySpecs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.MockNetworkNotarySpec>
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        cordappsForAllNodes:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getCordappsForAllNodes():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Collection<net.corda.testing.node.TestCordapp>
    getNetworkParameters():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.NetworkParameters
    getNetworkSendManuallyPumped():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getNotarySpecs():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.node.MockNetworkNotarySpec>
    getServicePeerAllocationStrategy():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy
    getThreadPerNode():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    withCordappsForAllNodes(java.util.Collection<? extends net.corda.testing.node.TestCordapp>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetworkParameters
      params:
        cordappsForAllNodes:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
    withNetworkParameters(net.corda.core.node.NetworkParameters):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetworkParameters
      params:
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
    withNetworkSendManuallyPumped(boolean):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetworkParameters
      params:
        networkSendManuallyPumped:
          annotation: []
          type: boolean
    withNotarySpecs(java.util.List<net.corda.testing.node.MockNetworkNotarySpec>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetworkParameters
      params:
        notarySpecs:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.MockNetworkNotarySpec>
    withServicePeerAllocationStrategy(net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetworkParameters
      params:
        servicePeerAllocationStrategy:
          annotation:
            - NotNull
          type: net.corda.testing.node.InMemoryMessagingNetwork$ServicePeerAllocationStrategy
    withThreadPerNode(boolean):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetworkParameters
      params:
        threadPerNode:
          annotation: []
          type: boolean
net.corda.testing.node.MockNodeConfigOverrides:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getExtraDataSourceProperties():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: "java.util.Map<String, String>"
    getFlowTimeout():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetFlowTimeOut
    getNotary():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNetNotaryConfig
net.corda.testing.node.MockNodeParameters:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Integer
    component2():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    component3():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.math.BigInteger
    component4():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNodeConfigOverrides
    component5():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Collection<net.corda.testing.node.TestCordapp>
    copy(Integer, net.corda.core.identity.CordaX500Name, java.math.BigInteger, net.corda.testing.node.MockNodeConfigOverrides):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNodeParameters
      params:
        forcedID:
          annotation:
            - Nullable
          type: Integer
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        entropyRoot:
          annotation:
            - NotNull
          type: java.math.BigInteger
        configOverrides:
          annotation:
            - NotNull
          type: net.corda.testing.node.MockNodeConfigOverrides
    ? copy(Integer, net.corda.core.identity.CordaX500Name, java.math.BigInteger, net.corda.testing.node.MockNodeConfigOverrides,
      java.util.Collection<? extends net.corda.testing.node.TestCordapp>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNodeParameters
      params:
        forcedID:
          annotation:
            - Nullable
          type: Integer
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
        entropyRoot:
          annotation:
            - NotNull
          type: java.math.BigInteger
        configOverrides:
          annotation:
            - Nullable
          type: net.corda.testing.node.MockNodeConfigOverrides
        additionalCordapps:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getAdditionalCordapps():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Collection<net.corda.testing.node.TestCordapp>
    getConfigOverrides():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNodeConfigOverrides
    getEntropyRoot():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.math.BigInteger
    getForcedID():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: Integer
    getLegalName():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
    withAdditionalCordapps(java.util.Collection<? extends net.corda.testing.node.TestCordapp>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNodeParameters
      params:
        additionalCordapps:
          annotation:
            - NotNull
          type: java.util.Collection<? extends net.corda.testing.node.TestCordapp>
    withConfigOverrides(net.corda.testing.node.MockNodeConfigOverrides):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNodeParameters
      params:
        configOverrides:
          annotation:
            - NotNull
          type: net.corda.testing.node.MockNodeConfigOverrides
    withEntropyRoot(java.math.BigInteger):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNodeParameters
      params:
        entropyRoot:
          annotation:
            - NotNull
          type: java.math.BigInteger
    withForcedID(Integer):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNodeParameters
      params:
        forcedID:
          annotation:
            - Nullable
          type: Integer
    withLegalName(net.corda.core.identity.CordaX500Name):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.MockNodeParameters
      params:
        legalName:
          annotation:
            - Nullable
          type: net.corda.core.identity.CordaX500Name
net.corda.testing.node.MockServices:
  annotations: []
  type: public class
  extends: null
  implements:
    - net.corda.core.node.ServiceHub
  interface: false
  methods:
    addMockCordapp(String):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        contractClassName:
          annotation:
            - NotNull
          type: String
    cordaService(Class<T>):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: T
      params:
        type:
          annotation:
            - NotNull
          type: Class<T>
    cordaTelemetryComponent(Class<T>):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: T
      params:
        type:
          annotation:
            - NotNull
          type: Class<T>
    getAttachments():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.services.MockAttachmentStorage
    getClock():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.testing.node.TestClock
    getContractUpgradeService():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.ContractUpgradeService
    getCordappClassloader():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: ClassLoader
    getCordappProvider():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.cordapp.CordappProvider
    getDiagnosticsService():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.diagnostics.DiagnosticsService
    getIdentityService():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.IdentityService
    getKeyManagementService():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.KeyManagementService
    getMyInfo():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.NodeInfo
    getNetworkMapCache():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.NetworkMapCache
    getNetworkParameters():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.NetworkParameters
    getNetworkParametersService():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.NetworkParametersService
    getRotatedKeys():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.contracts.RotatedKeys
    getServicesForResolution():
      annotations:
        - NotNull
      default: false
      type: protected final
      returnType: net.corda.core.node.ServicesForResolution
    getTelemetryService():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.internal.telemetry.TelemetryServiceImpl
    getValidatedTransactions():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.TransactionStorage
    getVaultService():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.node.services.VaultService
    jdbcSession():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.sql.Connection
    loadContractAttachment(net.corda.core.contracts.StateRef):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.Attachment
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    loadState(net.corda.core.contracts.StateRef):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: net.corda.core.contracts.TransactionState<net.corda.core.contracts.ContractState>
      params:
        stateRef:
          annotation:
            - NotNull
          type: net.corda.core.contracts.StateRef
    loadStates(java.util.Set<net.corda.core.contracts.StateRef>):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: java.util.Set<net.corda.core.contracts.StateAndRef<net.corda.core.contracts.ContractState>>
      params:
        stateRefs:
          annotation:
            - NotNull
          type: java.util.Set<net.corda.core.contracts.StateRef>
    makeTestDataSourceProperties(String):
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: java.util.Properties
      params:
        nodeName:
          annotation:
            - NotNull
          type: String
    ? makeTestDatabaseAndMockServices(java.util.List<String>, net.corda.core.node.services.IdentityService,
      net.corda.testing.core.TestIdentity, java.security.KeyPair[])
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "kotlin.Pair<net.corda.nodeapi.internal.persistence.CordaPersistence,\
        \ net.corda.testing.node.MockServices>"
      params:
        cordappPackages:
          annotation:
            - NotNull
          type: java.util.List<String>
        identityService:
          annotation:
            - NotNull
          type: net.corda.core.node.services.IdentityService
        initialIdentity:
          annotation:
            - NotNull
          type: net.corda.testing.core.TestIdentity
        moreKeys:
          annotation:
            - NotNull
          type: "java.security.KeyPair[]"
    ? makeTestDatabaseAndMockServices(java.util.List<String>, net.corda.core.node.services.IdentityService,
      net.corda.testing.core.TestIdentity, net.corda.core.node.NetworkParameters,
      java.security.KeyPair[])
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "kotlin.Pair<net.corda.nodeapi.internal.persistence.CordaPersistence,\
        \ net.corda.testing.node.MockServices>"
      params:
        cordappPackages:
          annotation:
            - NotNull
          type: java.util.List<String>
        identityService:
          annotation:
            - NotNull
          type: net.corda.core.node.services.IdentityService
        initialIdentity:
          annotation:
            - NotNull
          type: net.corda.testing.core.TestIdentity
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        moreKeys:
          annotation:
            - NotNull
          type: "java.security.KeyPair[]"
    ? makeTestDatabaseAndPersistentServices(java.util.List<String>, net.corda.testing.core.TestIdentity,
      java.util.Set<java.security.KeyPair>, java.util.Set<net.corda.core.identity.PartyAndCertificate>)
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "kotlin.Pair<net.corda.nodeapi.internal.persistence.CordaPersistence,\
        \ net.corda.testing.node.MockServices>"
      params:
        cordappPackages:
          annotation:
            - NotNull
          type: java.util.List<String>
        initialIdentity:
          annotation:
            - NotNull
          type: net.corda.testing.core.TestIdentity
        moreKeys:
          annotation:
            - NotNull
          type: java.util.Set<java.security.KeyPair>
        moreIdentities:
          annotation:
            - NotNull
          type: java.util.Set<net.corda.core.identity.PartyAndCertificate>
    ? makeTestDatabaseAndPersistentServices(java.util.List<String>, net.corda.testing.core.TestIdentity,
      net.corda.core.node.NetworkParameters, java.util.Set<java.security.KeyPair>,
      java.util.Set<net.corda.core.identity.PartyAndCertificate>)
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "kotlin.Pair<net.corda.nodeapi.internal.persistence.CordaPersistence,\
        \ net.corda.testing.node.MockServices>"
      params:
        cordappPackages:
          annotation:
            - NotNull
          type: java.util.List<String>
        initialIdentity:
          annotation:
            - NotNull
          type: net.corda.testing.core.TestIdentity
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        moreKeys:
          annotation:
            - NotNull
          type: java.util.Set<java.security.KeyPair>
        moreIdentities:
          annotation:
            - NotNull
          type: java.util.Set<net.corda.core.identity.PartyAndCertificate>
    ? makeTestDatabaseAndPersistentServices(java.util.List<String>, net.corda.testing.core.TestIdentity,
      net.corda.core.node.NetworkParameters, java.util.Set<java.security.KeyPair>,
      java.util.Set<net.corda.core.identity.PartyAndCertificate>, net.corda.testing.internal.TestingNamedCacheFactory)
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "kotlin.Pair<net.corda.nodeapi.internal.persistence.CordaPersistence,\
        \ net.corda.testing.node.MockServices>"
      params:
        cordappPackages:
          annotation:
            - NotNull
          type: java.util.List<String>
        initialIdentity:
          annotation:
            - NotNull
          type: net.corda.testing.core.TestIdentity
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        moreKeys:
          annotation:
            - NotNull
          type: java.util.Set<java.security.KeyPair>
        moreIdentities:
          annotation:
            - NotNull
          type: java.util.Set<net.corda.core.identity.PartyAndCertificate>
        cacheFactory:
          annotation:
            - NotNull
          type: net.corda.testing.internal.TestingNamedCacheFactory
    recordTransactions(Iterable<net.corda.core.transactions.SignedTransaction>, boolean):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        txs:
          annotation:
            - NotNull
          type: Iterable<net.corda.core.transactions.SignedTransaction>
        disableSignatureVerification:
          annotation: []
          type: boolean
    recordTransactions(net.corda.core.node.StatesToRecord, Iterable<net.corda.core.transactions.SignedTransaction>):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        statesToRecord:
          annotation:
            - NotNull
          type: net.corda.core.node.StatesToRecord
        txs:
          annotation:
            - NotNull
          type: Iterable<net.corda.core.transactions.SignedTransaction>
    recordTransactions(net.corda.core.transactions.SignedTransaction, boolean):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        txn:
          annotation:
            - NotNull
          type: net.corda.core.transactions.SignedTransaction
        disableSignatureVerification:
          annotation: []
          type: boolean
    registerUnloadHandler(kotlin.jvm.functions.Function0<kotlin.Unit>):
      annotations:
        - NotNull
      default: false
      type: public
      returnType: Void
      params:
        runOnStop:
          annotation:
            - NotNull
          type: kotlin.jvm.functions.Function0<kotlin.Unit>
    setNetworkParametersService(net.corda.core.node.services.NetworkParametersService):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: net.corda.core.node.services.NetworkParametersService
    withEntityManager(java.util.function.Consumer<javax.persistence.EntityManager>):
      annotations: []
      default: false
      type: public
      returnType: void
      params:
        block:
          annotation:
            - NotNull
          type: java.util.function.Consumer<javax.persistence.EntityManager>
    withEntityManager(kotlin.jvm.functions.Function1<? super javax.persistence.EntityManager, ? extends T>):
      annotations: []
      default: false
      type: public
      returnType: T
      params:
        block:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super javax.persistence.EntityManager,\
            \ ? extends T>"
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.node.MockServices$Companion
net.corda.testing.node.MockServices$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    makeTestDataSourceProperties(String):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Properties
      params:
        nodeName:
          annotation:
            - NotNull
          type: String
    ? makeTestDatabaseAndMockServices(java.util.List<String>, net.corda.core.node.services.IdentityService,
      net.corda.testing.core.TestIdentity, java.security.KeyPair[])
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.Pair<net.corda.nodeapi.internal.persistence.CordaPersistence,\
        \ net.corda.testing.node.MockServices>"
      params:
        cordappPackages:
          annotation:
            - NotNull
          type: java.util.List<String>
        identityService:
          annotation:
            - NotNull
          type: net.corda.core.node.services.IdentityService
        initialIdentity:
          annotation:
            - NotNull
          type: net.corda.testing.core.TestIdentity
        moreKeys:
          annotation:
            - NotNull
          type: "java.security.KeyPair[]"
    ? makeTestDatabaseAndMockServices(java.util.List<String>, net.corda.core.node.services.IdentityService,
      net.corda.testing.core.TestIdentity, net.corda.core.node.NetworkParameters,
      java.security.KeyPair[])
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.Pair<net.corda.nodeapi.internal.persistence.CordaPersistence,\
        \ net.corda.testing.node.MockServices>"
      params:
        cordappPackages:
          annotation:
            - NotNull
          type: java.util.List<String>
        identityService:
          annotation:
            - NotNull
          type: net.corda.core.node.services.IdentityService
        initialIdentity:
          annotation:
            - NotNull
          type: net.corda.testing.core.TestIdentity
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        moreKeys:
          annotation:
            - NotNull
          type: "java.security.KeyPair[]"
    ? makeTestDatabaseAndPersistentServices(java.util.List<String>, net.corda.testing.core.TestIdentity,
      java.util.Set<java.security.KeyPair>, java.util.Set<net.corda.core.identity.PartyAndCertificate>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.Pair<net.corda.nodeapi.internal.persistence.CordaPersistence,\
        \ net.corda.testing.node.MockServices>"
      params:
        cordappPackages:
          annotation:
            - NotNull
          type: java.util.List<String>
        initialIdentity:
          annotation:
            - NotNull
          type: net.corda.testing.core.TestIdentity
        moreKeys:
          annotation:
            - NotNull
          type: java.util.Set<java.security.KeyPair>
        moreIdentities:
          annotation:
            - NotNull
          type: java.util.Set<net.corda.core.identity.PartyAndCertificate>
    ? makeTestDatabaseAndPersistentServices(java.util.List<String>, net.corda.testing.core.TestIdentity,
      net.corda.core.node.NetworkParameters, java.util.Set<java.security.KeyPair>,
      java.util.Set<net.corda.core.identity.PartyAndCertificate>)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.Pair<net.corda.nodeapi.internal.persistence.CordaPersistence,\
        \ net.corda.testing.node.MockServices>"
      params:
        cordappPackages:
          annotation:
            - NotNull
          type: java.util.List<String>
        initialIdentity:
          annotation:
            - NotNull
          type: net.corda.testing.core.TestIdentity
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        moreKeys:
          annotation:
            - NotNull
          type: java.util.Set<java.security.KeyPair>
        moreIdentities:
          annotation:
            - NotNull
          type: java.util.Set<net.corda.core.identity.PartyAndCertificate>
    ? makeTestDatabaseAndPersistentServices(java.util.List<String>, net.corda.testing.core.TestIdentity,
      net.corda.core.node.NetworkParameters, java.util.Set<java.security.KeyPair>,
      java.util.Set<net.corda.core.identity.PartyAndCertificate>, net.corda.testing.internal.TestingNamedCacheFactory)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: "kotlin.Pair<net.corda.nodeapi.internal.persistence.CordaPersistence,\
        \ net.corda.testing.node.MockServices>"
      params:
        cordappPackages:
          annotation:
            - NotNull
          type: java.util.List<String>
        initialIdentity:
          annotation:
            - NotNull
          type: net.corda.testing.core.TestIdentity
        networkParameters:
          annotation:
            - NotNull
          type: net.corda.core.node.NetworkParameters
        moreKeys:
          annotation:
            - NotNull
          type: java.util.Set<java.security.KeyPair>
        moreIdentities:
          annotation:
            - NotNull
          type: java.util.Set<net.corda.core.identity.PartyAndCertificate>
        cacheFactory:
          annotation:
            - NotNull
          type: net.corda.testing.internal.TestingNamedCacheFactory
net.corda.testing.node.MockServicesKt:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    ? createMockCordaService(net.corda.testing.node.MockServices, kotlin.jvm.functions.Function1<?
      super net.corda.core.node.AppServiceHub, ? extends T>)
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: T
      params:
        serviceHub:
          annotation:
            - NotNull
          type: net.corda.testing.node.MockServices
        serviceConstructor:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.core.node.AppServiceHub,\
            \ ? extends T>"
    makeTestIdentityService(net.corda.core.identity.PartyAndCertificate[]):
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.node.services.IdentityService
      params:
        identities:
          annotation:
            - NotNull
          type: "net.corda.core.identity.PartyAndCertificate[]"
net.corda.testing.node.NodeTestUtils:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    ? ledger(net.corda.core.node.ServiceHub, kotlin.jvm.functions.Function1<? super
      net.corda.testing.dsl.LedgerDSL<net.corda.testing.dsl.TestTransactionDSLInterpreter,
      net.corda.testing.dsl.TestLedgerDSLInterpreter>, kotlin.Unit>)
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "net.corda.testing.dsl.LedgerDSL<net.corda.testing.dsl.TestTransactionDSLInterpreter,\
        \ net.corda.testing.dsl.TestLedgerDSLInterpreter>"
      params:
        $this$ledger:
          annotation:
            - NotNull
          type: net.corda.core.node.ServiceHub
        script:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSL<net.corda.testing.dsl.TestTransactionDSLInterpreter,\
            \ net.corda.testing.dsl.TestLedgerDSLInterpreter>, kotlin.Unit>"
    ? ledger(net.corda.core.node.ServiceHub, net.corda.core.identity.Party, kotlin.jvm.functions.Function1<?
      super net.corda.testing.dsl.LedgerDSL<net.corda.testing.dsl.TestTransactionDSLInterpreter,
      net.corda.testing.dsl.TestLedgerDSLInterpreter>, kotlin.Unit>)
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "net.corda.testing.dsl.LedgerDSL<net.corda.testing.dsl.TestTransactionDSLInterpreter,\
        \ net.corda.testing.dsl.TestLedgerDSLInterpreter>"
      params:
        $this$ledger:
          annotation:
            - NotNull
          type: net.corda.core.node.ServiceHub
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        script:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.LedgerDSL<net.corda.testing.dsl.TestTransactionDSLInterpreter,\
            \ net.corda.testing.dsl.TestLedgerDSLInterpreter>, kotlin.Unit>"
    testActor(net.corda.core.identity.CordaX500Name):
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.context.Actor
      params:
        owningLegalIdentity:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
    testContext(net.corda.core.identity.CordaX500Name):
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.core.context.InvocationContext
      params:
        owningLegalIdentity:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
    ? transaction(net.corda.core.node.ServiceHub, kotlin.jvm.functions.Function1<?
      super net.corda.testing.dsl.TransactionDSL<? extends net.corda.testing.dsl.TransactionDSLInterpreter>,
      ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "net.corda.testing.dsl.LedgerDSL<net.corda.testing.dsl.TestTransactionDSLInterpreter,\
        \ net.corda.testing.dsl.TestLedgerDSLInterpreter>"
      params:
        $this$transaction:
          annotation:
            - NotNull
          type: net.corda.core.node.ServiceHub
        script:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, ? extends\
            \ net.corda.testing.dsl.EnforceVerifyOrFail>"
    ? transaction(net.corda.core.node.ServiceHub, net.corda.core.identity.Party, kotlin.jvm.functions.Function1<?
      super net.corda.testing.dsl.TransactionDSL<? extends net.corda.testing.dsl.TransactionDSLInterpreter>,
      ? extends net.corda.testing.dsl.EnforceVerifyOrFail>)
    : annotations:
        - NotNull
      default: false
      type: public static final
      returnType: "net.corda.testing.dsl.LedgerDSL<net.corda.testing.dsl.TestTransactionDSLInterpreter,\
        \ net.corda.testing.dsl.TestLedgerDSLInterpreter>"
      params:
        $this$transaction:
          annotation:
            - NotNull
          type: net.corda.core.node.ServiceHub
        notary:
          annotation:
            - NotNull
          type: net.corda.core.identity.Party
        script:
          annotation:
            - NotNull
          type: "kotlin.jvm.functions.Function1<? super net.corda.testing.dsl.TransactionDSL<?\
            \ extends net.corda.testing.dsl.TransactionDSLInterpreter>, ? extends\
            \ net.corda.testing.dsl.EnforceVerifyOrFail>"
net.corda.testing.node.NotarySpec:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    component2():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    component3():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.node.User>
    component4():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.VerifierType
    component5():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.testing.node.ClusterSpec
    component6():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    ? copy(net.corda.core.identity.CordaX500Name, boolean, java.util.List<net.corda.testing.node.User>,
      net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.NotarySpec
      params:
        name:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
        validating:
          annotation: []
          type: boolean
        rpcUsers:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.User>
        verifierType:
          annotation:
            - NotNull
          type: net.corda.testing.driver.VerifierType
        cluster:
          annotation:
            - Nullable
          type: net.corda.testing.node.ClusterSpec
    ? copy(net.corda.core.identity.CordaX500Name, boolean, java.util.List<net.corda.testing.node.User>,
      net.corda.testing.driver.VerifierType, net.corda.testing.node.ClusterSpec, boolean)
    : annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.NotarySpec
      params:
        name:
          annotation:
            - NotNull
          type: net.corda.core.identity.CordaX500Name
        validating:
          annotation: []
          type: boolean
        rpcUsers:
          annotation:
            - NotNull
          type: java.util.List<net.corda.testing.node.User>
        verifierType:
          annotation:
            - NotNull
          type: net.corda.testing.driver.VerifierType
        cluster:
          annotation:
            - Nullable
          type: net.corda.testing.node.ClusterSpec
        startInProcess:
          annotation: []
          type: boolean
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getCluster():
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.testing.node.ClusterSpec
    getMaximumHeapSize():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getName():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.identity.CordaX500Name
    getRpcUsers():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.List<net.corda.testing.node.User>
    getStartInProcess():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getValidating():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    getVerifierType():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.driver.VerifierType
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    setMaximumHeapSize(String):
      annotations: []
      default: false
      type: public final
      returnType: void
      params:
        <set-?>:
          annotation:
            - NotNull
          type: String
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String
net.corda.testing.node.StartedMockNode:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    findStateMachines(Class<F>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: "java.util.List<kotlin.Pair<F, net.corda.core.concurrent.CordaFuture<?>>>"
      params:
        flowClass:
          annotation:
            - NotNull
          type: Class<F>
    getId():
      annotations: []
      default: false
      type: public final
      returnType: int
    getInfo():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.NodeInfo
    getServices():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.node.ServiceHub
    pumpReceive(boolean):
      annotations:
        - Nullable
      default: false
      type: public final
      returnType: net.corda.testing.node.InMemoryMessagingNetwork$MessageTransfer
      params:
        block:
          annotation: []
          type: boolean
    registerInitiatedFlow(Class<? extends net.corda.core.flows.FlowLogic<?>>, Class<F>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: rx.Observable<F>
      params:
        initiatingFlowClass:
          annotation:
            - NotNull
          type: Class<? extends net.corda.core.flows.FlowLogic<?>>
        initiatedFlowClass:
          annotation:
            - NotNull
          type: Class<F>
    registerInitiatedFlow(Class<F>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: rx.Observable<F>
      params:
        initiatedFlowClass:
          annotation:
            - NotNull
          type: Class<F>
    startFlow(net.corda.core.flows.FlowLogic<? extends T>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.core.concurrent.CordaFuture<T>
      params:
        logic:
          annotation:
            - NotNull
          type: net.corda.core.flows.FlowLogic<? extends T>
    stop():
      annotations: []
      default: false
      type: public final
      returnType: void
    transaction(kotlin.jvm.functions.Function0<? extends T>):
      annotations: []
      default: false
      type: public final
      returnType: T
      params:
        statement:
          annotation:
            - NotNull
          type: kotlin.jvm.functions.Function0<? extends T>
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.node.StartedMockNode$Companion
net.corda.testing.node.StartedMockNode$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.node.TestClock:
  annotations:
    - ThreadSafe
  type: public final class
  extends: net.corda.node.MutableClock
  implements: []
  interface: false
  methods:
    advanceBy(java.time.Duration):
      annotations: []
      default: false
      type: public final synchronized
      returnType: void
      params:
        duration:
          annotation:
            - NotNull
          type: java.time.Duration
    setTo(java.time.Instant):
      annotations: []
      default: false
      type: public final synchronized
      returnType: void
      params:
        newInstant:
          annotation:
            - NotNull
          type: java.time.Instant
net.corda.testing.node.TestCordapp:
  annotations: []
  type: public abstract class
  extends: null
  implements: []
  interface: false
  methods:
    asSigned():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.node.TestCordapp
    findCordapp(String):
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.testing.node.TestCordapp
      params:
        scanPackage:
          annotation:
            - NotNull
          type: String
    getConfig():
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: "java.util.Map<String, Object>"
    of(java.net.URI):
      annotations:
        - NotNull
      default: false
      type: public static final
      returnType: net.corda.testing.node.TestCordapp
      params:
        uri:
          annotation:
            - NotNull
          type: java.net.URI
    withConfig(java.util.Map<String, ?>):
      annotations:
        - NotNull
      default: false
      type: public abstract
      returnType: net.corda.testing.node.TestCordapp
      params:
        config:
          annotation:
            - NotNull
          type: "java.util.Map<String, ?>"
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.node.TestCordapp$Companion
net.corda.testing.node.TestCordapp$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods:
    findCordapp(String):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.TestCordapp
      params:
        scanPackage:
          annotation:
            - NotNull
          type: String
    of(java.net.URI):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.TestCordapp
      params:
        uri:
          annotation:
            - NotNull
          type: java.net.URI
net.corda.testing.node.UnstartedMockNode:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    getId():
      annotations: []
      default: false
      type: public final
      returnType: int
    getStarted():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.StartedMockNode
    installCordaService(Class<T>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: T
      params:
        serviceClass:
          annotation:
            - NotNull
          type: Class<T>
    isStarted():
      annotations: []
      default: false
      type: public final
      returnType: boolean
    start():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.StartedMockNode
  fields:
    Companion:
      annotation:
        - NotNull
      type: public static final net.corda.testing.node.UnstartedMockNode$Companion
net.corda.testing.node.UnstartedMockNode$Companion:
  annotations: []
  type: public static final class
  extends: null
  implements: []
  interface: false
  methods: {}
net.corda.testing.node.User:
  annotations: []
  type: public final class
  extends: null
  implements: []
  interface: false
  methods:
    component1():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component2():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    component3():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Set<String>
    copy(String, String, java.util.Set<String>):
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: net.corda.testing.node.User
      params:
        username:
          annotation:
            - NotNull
          type: String
        password:
          annotation:
            - NotNull
          type: String
        permissions:
          annotation:
            - NotNull
          type: java.util.Set<String>
    equals(Object):
      annotations: []
      default: false
      type: public
      returnType: boolean
      params:
        other:
          annotation:
            - Nullable
          type: Object
    getPassword():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    getPermissions():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: java.util.Set<String>
    getUsername():
      annotations:
        - NotNull
      default: false
      type: public final
      returnType: String
    hashCode():
      annotations: []
      default: false
      type: public
      returnType: int
    toString():
      annotations:
        - NotNull
      default: false
      type: public
      returnType: String